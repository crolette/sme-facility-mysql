<?xml version="1.0" encoding="UTF-8"?>
<testsuites>
  <testsuite name="CLI Arguments" tests="744" assertions="2644" errors="1" failures="4" skipped="0" time="1106.661260">
    <testsuite name="Tests\Tenant\Assets\AssetContractTest" file="tests\Tenant\Assets\AssetContractTest.php" tests="6" assertions="37" errors="0" failures="0" skipped="0" time="12.862960">
      <testcase name="it can store an asset with contracts" file="tests\Tenant\Assets\AssetContractTest.php::it can store an asset with contracts" class="Tests\Tenant\Assets\AssetContractTest" classname="Tests.Tenant.Assets.AssetContractTest" assertions="6" time="3.937956"/>
      <testcase name="it can store an asset with contracts and documents" file="tests\Tenant\Assets\AssetContractTest.php::it can store an asset with contracts and documents" class="Tests\Tenant\Assets\AssetContractTest" classname="Tests.Tenant.Assets.AssetContractTest" assertions="11" time="3.143076"/>
      <testcase name="it can add an existing contract when creating an asset" file="tests\Tenant\Assets\AssetContractTest.php::it can add an existing contract when creating an asset" class="Tests\Tenant\Assets\AssetContractTest" classname="Tests.Tenant.Assets.AssetContractTest" assertions="3" time="1.958992"/>
      <testcase name="it can add multiple existing contracts when creating an asset" file="tests\Tenant\Assets\AssetContractTest.php::it can add multiple existing contracts when creating an asset" class="Tests\Tenant\Assets\AssetContractTest" classname="Tests.Tenant.Assets.AssetContractTest" assertions="4" time="1.367395"/>
      <testcase name="it can add existing contracts to an existing asset" file="tests\Tenant\Assets\AssetContractTest.php::it can add existing contracts to an existing asset" class="Tests\Tenant\Assets\AssetContractTest" classname="Tests.Tenant.Assets.AssetContractTest" assertions="5" time="1.208953"/>
      <testcase name="it can remove a contract from an asset" file="tests\Tenant\Assets\AssetContractTest.php::it can remove a contract from an asset" class="Tests\Tenant\Assets\AssetContractTest" classname="Tests.Tenant.Assets.AssetContractTest" assertions="8" time="1.246589"/>
    </testsuite>
    <testsuite name="Tests\Tenant\Assets\AssetTest" file="tests\Tenant\Assets\AssetTest.php" tests="24" assertions="146" errors="0" failures="1" skipped="0" time="28.753044">
      <testcase name="it can render the index assets page" file="tests\Tenant\Assets\AssetTest.php::it can render the index assets page" class="Tests\Tenant\Assets\AssetTest" classname="Tests.Tenant.Assets.AssetTest" assertions="13" time="1.520417">
        <failure type="PHPUnit\Framework\ExpectationFailedException">it can render the index assets pageProperty [items.0.maintainable.name] does not exist.
Failed asserting that false is true.&#13;
at vendor\laravel\framework\src\Illuminate\Testing\Fluent\Concerns\Has.php:91
at vendor\laravel\framework\src\Illuminate\Testing\Fluent\Concerns\Matching.php:23
at tests\Tenant\Assets\AssetTest.php:62
at vendor\inertiajs\inertia-laravel\src\Testing\TestResponseMacros.php:25
at vendor\laravel\framework\src\Illuminate\Macroable\Traits\Macroable.php:126
at vendor\laravel\framework\src\Illuminate\Testing\TestResponse.php:1974
at tests\Tenant\Assets\AssetTest.php:58</failure>
      </testcase>
      <testcase name="it can render the create asset page" file="tests\Tenant\Assets\AssetTest.php::it can render the create asset page" class="Tests\Tenant\Assets\AssetTest" classname="Tests.Tenant.Assets.AssetTest" assertions="13" time="1.263674"/>
      <testcase name="it can create a new asset to site" file="tests\Tenant\Assets\AssetTest.php::it can create a new asset to site" class="Tests\Tenant\Assets\AssetTest" classname="Tests.Tenant.Assets.AssetTest" assertions="5" time="1.118234"/>
      <testcase name="it can create a new mobile asset" file="tests\Tenant\Assets\AssetTest.php::it can create a new mobile asset" class="Tests\Tenant\Assets\AssetTest" classname="Tests.Tenant.Assets.AssetTest" assertions="5" time="1.084078"/>
      <testcase name="it can create a new asset to building" file="tests\Tenant\Assets\AssetTest.php::it can create a new asset to building" class="Tests\Tenant\Assets\AssetTest" classname="Tests.Tenant.Assets.AssetTest" assertions="5" time="1.204333"/>
      <testcase name="it can create an asset with uploaded pictures" file="tests\Tenant\Assets\AssetTest.php::it can create an asset with uploaded pictures" class="Tests\Tenant\Assets\AssetTest" classname="Tests.Tenant.Assets.AssetTest" assertions="6" time="1.180174"/>
      <testcase name="it can add pictures to an asset" file="tests\Tenant\Assets\AssetTest.php::it can add pictures to an asset" class="Tests\Tenant\Assets\AssetTest" classname="Tests.Tenant.Assets.AssetTest" assertions="5" time="1.050870"/>
      <testcase name="it cannot create a new asset with non existing building" file="tests\Tenant\Assets\AssetTest.php::it cannot create a new asset with non existing building" class="Tests\Tenant\Assets\AssetTest" classname="Tests.Tenant.Assets.AssetTest" assertions="2" time="1.070372"/>
      <testcase name="it cannot create a new asset with unrelated asset category type" file="tests\Tenant\Assets\AssetTest.php::it cannot create a new asset with unrelated asset category type" class="Tests\Tenant\Assets\AssetTest" classname="Tests.Tenant.Assets.AssetTest" assertions="2" time="1.045429"/>
      <testcase name="it cannot create a new asset with non existing location type" file="tests\Tenant\Assets\AssetTest.php::it cannot create a new asset with non existing location type" class="Tests\Tenant\Assets\AssetTest" classname="Tests.Tenant.Assets.AssetTest" assertions="2" time="0.973851"/>
      <testcase name="it can create a new asset to floor" file="tests\Tenant\Assets\AssetTest.php::it can create a new asset to floor" class="Tests\Tenant\Assets\AssetTest" classname="Tests.Tenant.Assets.AssetTest" assertions="5" time="1.117476"/>
      <testcase name="it can create a new asset to room" file="tests\Tenant\Assets\AssetTest.php::it can create a new asset to room" class="Tests\Tenant\Assets\AssetTest" classname="Tests.Tenant.Assets.AssetTest" assertions="5" time="1.294434"/>
      <testcase name="it can show the asset page" file="tests\Tenant\Assets\AssetTest.php::it can show the asset page" class="Tests\Tenant\Assets\AssetTest" classname="Tests.Tenant.Assets.AssetTest" assertions="22" time="1.111250"/>
      <testcase name="it can render the update asset page" file="tests\Tenant\Assets\AssetTest.php::it can render the update asset page" class="Tests\Tenant\Assets\AssetTest" classname="Tests.Tenant.Assets.AssetTest" assertions="14" time="1.096625"/>
      <testcase name="it can update asset and his maintainable" file="tests\Tenant\Assets\AssetTest.php::it can update asset and his maintainable" class="Tests\Tenant\Assets\AssetTest" classname="Tests.Tenant.Assets.AssetTest" assertions="5" time="1.294714"/>
      <testcase name="it can update asset's location" file="tests\Tenant\Assets\AssetTest.php::it can update asset's location" class="Tests\Tenant\Assets\AssetTest" classname="Tests.Tenant.Assets.AssetTest" assertions="5" time="1.293058"/>
      <testcase name="it can soft delete an asset but kept in DB with his maintainable" file="tests\Tenant\Assets\AssetTest.php::it can soft delete an asset but kept in DB with his maintainable" class="Tests\Tenant\Assets\AssetTest" classname="Tests.Tenant.Assets.AssetTest" assertions="5" time="1.198327"/>
      <testcase name="it can restore a soft deleted asset" file="tests\Tenant\Assets\AssetTest.php::it can restore a soft deleted asset" class="Tests\Tenant\Assets\AssetTest" classname="Tests.Tenant.Assets.AssetTest" assertions="8" time="1.195422"/>
      <testcase name="it can force delete a soft deleted asset" file="tests\Tenant\Assets\AssetTest.php::it can force delete a soft deleted asset" class="Tests\Tenant\Assets\AssetTest" classname="Tests.Tenant.Assets.AssetTest" assertions="8" time="1.090478"/>
      <testcase name="it fails when model has more than 100 chars" file="tests\Tenant\Assets\AssetTest.php::it fails when model has more than 100 chars" class="Tests\Tenant\Assets\AssetTest" classname="Tests.Tenant.Assets.AssetTest" assertions="2" time="0.970477"/>
      <testcase name="it fails when brand has more than 100 chars" file="tests\Tenant\Assets\AssetTest.php::it fails when brand has more than 100 chars" class="Tests\Tenant\Assets\AssetTest" classname="Tests.Tenant.Assets.AssetTest" assertions="2" time="0.984552"/>
      <testcase name="it fails when serial_number has more than 50 chars" file="tests\Tenant\Assets\AssetTest.php::it fails when serial_number has more than 50 chars" class="Tests\Tenant\Assets\AssetTest" classname="Tests.Tenant.Assets.AssetTest" assertions="2" time="1.224154"/>
      <testcase name="it can attach a provider to an asset's maintainable" file="tests\Tenant\Assets\AssetTest.php::it can attach a provider to an asset's maintainable" class="Tests\Tenant\Assets\AssetTest" classname="Tests.Tenant.Assets.AssetTest" assertions="2" time="1.588932"/>
      <testcase name="it can update providers to an asset's maintainable" file="tests\Tenant\Assets\AssetTest.php::it can update providers to an asset's maintainable" class="Tests\Tenant\Assets\AssetTest" classname="Tests.Tenant.Assets.AssetTest" assertions="3" time="1.781713"/>
    </testsuite>
    <testsuite name="Tests\Tenant\Auth\AssetManagementTest" file="tests\Tenant\Auth\AssetManagementTest.php" tests="42" assertions="42" errors="0" failures="0" skipped="0" time="55.189050">
      <testsuite name="test access roles to assets index page" tests="3" assertions="3" errors="0" failures="0" skipped="0" time="3.463709">
        <testcase name="test access roles to assets index page with data set &quot;('Admin', 200)&quot;" file="tests\Tenant\Auth\AssetManagementTest.php::test access roles to assets index page with data set &quot;('Admin', 200)&quot;" class="Tests\Tenant\Auth\AssetManagementTest" classname="Tests.Tenant.Auth.AssetManagementTest" assertions="1" time="1.208106"/>
        <testcase name="test access roles to assets index page with data set &quot;('Maintenance Manager', 403)&quot;" file="tests\Tenant\Auth\AssetManagementTest.php::test access roles to assets index page with data set &quot;('Maintenance Manager', 403)&quot;" class="Tests\Tenant\Auth\AssetManagementTest" classname="Tests.Tenant.Auth.AssetManagementTest" assertions="1" time="1.177508"/>
        <testcase name="test access roles to assets index page with data set &quot;('Provider', 403)&quot;" file="tests\Tenant\Auth\AssetManagementTest.php::test access roles to assets index page with data set &quot;('Provider', 403)&quot;" class="Tests\Tenant\Auth\AssetManagementTest" classname="Tests.Tenant.Auth.AssetManagementTest" assertions="1" time="1.078095"/>
      </testsuite>
      <testsuite name="test access roles to create asset page" tests="3" assertions="3" errors="0" failures="0" skipped="0" time="3.094754">
        <testcase name="test access roles to create asset page with data set &quot;('Admin', 200)&quot;" file="tests\Tenant\Auth\AssetManagementTest.php::test access roles to create asset page with data set &quot;('Admin', 200)&quot;" class="Tests\Tenant\Auth\AssetManagementTest" classname="Tests.Tenant.Auth.AssetManagementTest" assertions="1" time="1.082554"/>
        <testcase name="test access roles to create asset page with data set &quot;('Maintenance Manager', 403)&quot;" file="tests\Tenant\Auth\AssetManagementTest.php::test access roles to create asset page with data set &quot;('Maintenance Manager', 403)&quot;" class="Tests\Tenant\Auth\AssetManagementTest" classname="Tests.Tenant.Auth.AssetManagementTest" assertions="1" time="1.007416"/>
        <testcase name="test access roles to create asset page with data set &quot;('Provider', 403)&quot;" file="tests\Tenant\Auth\AssetManagementTest.php::test access roles to create asset page with data set &quot;('Provider', 403)&quot;" class="Tests\Tenant\Auth\AssetManagementTest" classname="Tests.Tenant.Auth.AssetManagementTest" assertions="1" time="1.004784"/>
      </testsuite>
      <testsuite name="test access roles to view any asset page" tests="3" assertions="3" errors="0" failures="0" skipped="0" time="3.840900">
        <testcase name="test access roles to view any asset page with data set &quot;('Admin', 200)&quot;" file="tests\Tenant\Auth\AssetManagementTest.php::test access roles to view any asset page with data set &quot;('Admin', 200)&quot;" class="Tests\Tenant\Auth\AssetManagementTest" classname="Tests.Tenant.Auth.AssetManagementTest" assertions="1" time="1.265881"/>
        <testcase name="test access roles to view any asset page with data set &quot;('Maintenance Manager', 403)&quot;" file="tests\Tenant\Auth\AssetManagementTest.php::test access roles to view any asset page with data set &quot;('Maintenance Manager', 403)&quot;" class="Tests\Tenant\Auth\AssetManagementTest" classname="Tests.Tenant.Auth.AssetManagementTest" assertions="1" time="1.282574"/>
        <testcase name="test access roles to view any asset page with data set &quot;('Provider', 403)&quot;" file="tests\Tenant\Auth\AssetManagementTest.php::test access roles to view any asset page with data set &quot;('Provider', 403)&quot;" class="Tests\Tenant\Auth\AssetManagementTest" classname="Tests.Tenant.Auth.AssetManagementTest" assertions="1" time="1.292445"/>
      </testsuite>
      <testsuite name="test access roles to view asset with maintenance manager page" tests="3" assertions="3" errors="0" failures="0" skipped="0" time="3.535788">
        <testcase name="test access roles to view asset with maintenance manager page with data set &quot;('Admin', 200)&quot;" file="tests\Tenant\Auth\AssetManagementTest.php::test access roles to view asset with maintenance manager page with data set &quot;('Admin', 200)&quot;" class="Tests\Tenant\Auth\AssetManagementTest" classname="Tests.Tenant.Auth.AssetManagementTest" assertions="1" time="1.192435"/>
        <testcase name="test access roles to view asset with maintenance manager page with data set &quot;('Maintenance Manager', 200)&quot;" file="tests\Tenant\Auth\AssetManagementTest.php::test access roles to view asset with maintenance manager page with data set &quot;('Maintenance Manager', 200)&quot;" class="Tests\Tenant\Auth\AssetManagementTest" classname="Tests.Tenant.Auth.AssetManagementTest" assertions="1" time="1.132127"/>
        <testcase name="test access roles to view asset with maintenance manager page with data set &quot;('Provider', 403)&quot;" file="tests\Tenant\Auth\AssetManagementTest.php::test access roles to view asset with maintenance manager page with data set &quot;('Provider', 403)&quot;" class="Tests\Tenant\Auth\AssetManagementTest" classname="Tests.Tenant.Auth.AssetManagementTest" assertions="1" time="1.211226"/>
      </testsuite>
      <testsuite name="test access roles to store an asset" tests="3" assertions="3" errors="0" failures="0" skipped="0" time="4.126487">
        <testcase name="test access roles to store an asset with data set &quot;('Admin', 200)&quot;" file="tests\Tenant\Auth\AssetManagementTest.php::test access roles to store an asset with data set &quot;('Admin', 200)&quot;" class="Tests\Tenant\Auth\AssetManagementTest" classname="Tests.Tenant.Auth.AssetManagementTest" assertions="1" time="1.210518"/>
        <testcase name="test access roles to store an asset with data set &quot;('Maintenance Manager', 403)&quot;" file="tests\Tenant\Auth\AssetManagementTest.php::test access roles to store an asset with data set &quot;('Maintenance Manager', 403)&quot;" class="Tests\Tenant\Auth\AssetManagementTest" classname="Tests.Tenant.Auth.AssetManagementTest" assertions="1" time="1.274947"/>
        <testcase name="test access roles to store an asset with data set &quot;('Provider', 403)&quot;" file="tests\Tenant\Auth\AssetManagementTest.php::test access roles to store an asset with data set &quot;('Provider', 403)&quot;" class="Tests\Tenant\Auth\AssetManagementTest" classname="Tests.Tenant.Auth.AssetManagementTest" assertions="1" time="1.641022"/>
      </testsuite>
      <testsuite name="test access roles to update any asset page" tests="3" assertions="3" errors="0" failures="0" skipped="0" time="3.727476">
        <testcase name="test access roles to update any asset page with data set &quot;('Admin', 200)&quot;" file="tests\Tenant\Auth\AssetManagementTest.php::test access roles to update any asset page with data set &quot;('Admin', 200)&quot;" class="Tests\Tenant\Auth\AssetManagementTest" classname="Tests.Tenant.Auth.AssetManagementTest" assertions="1" time="1.477754"/>
        <testcase name="test access roles to update any asset page with data set &quot;('Maintenance Manager', 403)&quot;" file="tests\Tenant\Auth\AssetManagementTest.php::test access roles to update any asset page with data set &quot;('Maintenance Manager', 403)&quot;" class="Tests\Tenant\Auth\AssetManagementTest" classname="Tests.Tenant.Auth.AssetManagementTest" assertions="1" time="1.193103"/>
        <testcase name="test access roles to update any asset page with data set &quot;('Provider', 403)&quot;" file="tests\Tenant\Auth\AssetManagementTest.php::test access roles to update any asset page with data set &quot;('Provider', 403)&quot;" class="Tests\Tenant\Auth\AssetManagementTest" classname="Tests.Tenant.Auth.AssetManagementTest" assertions="1" time="1.056619"/>
      </testsuite>
      <testsuite name="test access roles to update asset with maintenance manager page" tests="3" assertions="3" errors="0" failures="0" skipped="0" time="3.436579">
        <testcase name="test access roles to update asset with maintenance manager page with data set &quot;('Admin', 200)&quot;" file="tests\Tenant\Auth\AssetManagementTest.php::test access roles to update asset with maintenance manager page with data set &quot;('Admin', 200)&quot;" class="Tests\Tenant\Auth\AssetManagementTest" classname="Tests.Tenant.Auth.AssetManagementTest" assertions="1" time="1.134159"/>
        <testcase name="test access roles to update asset with maintenance manager page with data set &quot;('Maintenance Manager', 200)&quot;" file="tests\Tenant\Auth\AssetManagementTest.php::test access roles to update asset with maintenance manager page with data set &quot;('Maintenance Manager', 200)&quot;" class="Tests\Tenant\Auth\AssetManagementTest" classname="Tests.Tenant.Auth.AssetManagementTest" assertions="1" time="1.224124"/>
        <testcase name="test access roles to update asset with maintenance manager page with data set &quot;('Provider', 403)&quot;" file="tests\Tenant\Auth\AssetManagementTest.php::test access roles to update asset with maintenance manager page with data set &quot;('Provider', 403)&quot;" class="Tests\Tenant\Auth\AssetManagementTest" classname="Tests.Tenant.Auth.AssetManagementTest" assertions="1" time="1.078295"/>
      </testsuite>
      <testsuite name="test access roles to asset page" tests="3" assertions="3" errors="0" failures="0" skipped="0" time="4.162792">
        <testcase name="test access roles to asset page with data set &quot;('Admin', 200)&quot;" file="tests\Tenant\Auth\AssetManagementTest.php::test access roles to asset page with data set &quot;('Admin', 200)&quot;" class="Tests\Tenant\Auth\AssetManagementTest" classname="Tests.Tenant.Auth.AssetManagementTest" assertions="1" time="1.586428"/>
        <testcase name="test access roles to asset page with data set &quot;('Maintenance Manager', 403)&quot;" file="tests\Tenant\Auth\AssetManagementTest.php::test access roles to asset page with data set &quot;('Maintenance Manager', 403)&quot;" class="Tests\Tenant\Auth\AssetManagementTest" classname="Tests.Tenant.Auth.AssetManagementTest" assertions="1" time="1.417542"/>
        <testcase name="test access roles to asset page with data set &quot;('Provider', 403)&quot;" file="tests\Tenant\Auth\AssetManagementTest.php::test access roles to asset page with data set &quot;('Provider', 403)&quot;" class="Tests\Tenant\Auth\AssetManagementTest" classname="Tests.Tenant.Auth.AssetManagementTest" assertions="1" time="1.158822"/>
      </testsuite>
      <testsuite name="test access roles to delete any asset" tests="3" assertions="3" errors="0" failures="0" skipped="0" time="3.464264">
        <testcase name="test access roles to delete any asset with data set &quot;('Admin', 200)&quot;" file="tests\Tenant\Auth\AssetManagementTest.php::test access roles to delete any asset with data set &quot;('Admin', 200)&quot;" class="Tests\Tenant\Auth\AssetManagementTest" classname="Tests.Tenant.Auth.AssetManagementTest" assertions="1" time="1.084473"/>
        <testcase name="test access roles to delete any asset with data set &quot;('Maintenance Manager', 403)&quot;" file="tests\Tenant\Auth\AssetManagementTest.php::test access roles to delete any asset with data set &quot;('Maintenance Manager', 403)&quot;" class="Tests\Tenant\Auth\AssetManagementTest" classname="Tests.Tenant.Auth.AssetManagementTest" assertions="1" time="1.219701"/>
        <testcase name="test access roles to delete any asset with data set &quot;('Provider', 403)&quot;" file="tests\Tenant\Auth\AssetManagementTest.php::test access roles to delete any asset with data set &quot;('Provider', 403)&quot;" class="Tests\Tenant\Auth\AssetManagementTest" classname="Tests.Tenant.Auth.AssetManagementTest" assertions="1" time="1.160090"/>
      </testsuite>
      <testsuite name="test access roles to delete asset with maintenance manager" tests="3" assertions="3" errors="0" failures="0" skipped="0" time="4.324403">
        <testcase name="test access roles to delete asset with maintenance manager with data set &quot;('Admin', 200)&quot;" file="tests\Tenant\Auth\AssetManagementTest.php::test access roles to delete asset with maintenance manager with data set &quot;('Admin', 200)&quot;" class="Tests\Tenant\Auth\AssetManagementTest" classname="Tests.Tenant.Auth.AssetManagementTest" assertions="1" time="1.157124"/>
        <testcase name="test access roles to delete asset with maintenance manager with data set &quot;('Maintenance Manager', 200)&quot;" file="tests\Tenant\Auth\AssetManagementTest.php::test access roles to delete asset with maintenance manager with data set &quot;('Maintenance Manager', 200)&quot;" class="Tests\Tenant\Auth\AssetManagementTest" classname="Tests.Tenant.Auth.AssetManagementTest" assertions="1" time="1.843933"/>
        <testcase name="test access roles to delete asset with maintenance manager with data set &quot;('Provider', 403)&quot;" file="tests\Tenant\Auth\AssetManagementTest.php::test access roles to delete asset with maintenance manager with data set &quot;('Provider', 403)&quot;" class="Tests\Tenant\Auth\AssetManagementTest" classname="Tests.Tenant.Auth.AssetManagementTest" assertions="1" time="1.323345"/>
      </testsuite>
      <testsuite name="test access roles to restore any asset" tests="3" assertions="3" errors="0" failures="0" skipped="0" time="4.351973">
        <testcase name="test access roles to restore any asset with data set &quot;('Admin', 200)&quot;" file="tests\Tenant\Auth\AssetManagementTest.php::test access roles to restore any asset with data set &quot;('Admin', 200)&quot;" class="Tests\Tenant\Auth\AssetManagementTest" classname="Tests.Tenant.Auth.AssetManagementTest" assertions="1" time="1.199944"/>
        <testcase name="test access roles to restore any asset with data set &quot;('Maintenance Manager', 403)&quot;" file="tests\Tenant\Auth\AssetManagementTest.php::test access roles to restore any asset with data set &quot;('Maintenance Manager', 403)&quot;" class="Tests\Tenant\Auth\AssetManagementTest" classname="Tests.Tenant.Auth.AssetManagementTest" assertions="1" time="1.243316"/>
        <testcase name="test access roles to restore any asset with data set &quot;('Provider', 403)&quot;" file="tests\Tenant\Auth\AssetManagementTest.php::test access roles to restore any asset with data set &quot;('Provider', 403)&quot;" class="Tests\Tenant\Auth\AssetManagementTest" classname="Tests.Tenant.Auth.AssetManagementTest" assertions="1" time="1.908713"/>
      </testsuite>
      <testsuite name="test access roles to force delete any asset" tests="3" assertions="3" errors="0" failures="0" skipped="0" time="3.721727">
        <testcase name="test access roles to force delete any asset with data set &quot;('Admin', 200)&quot;" file="tests\Tenant\Auth\AssetManagementTest.php::test access roles to force delete any asset with data set &quot;('Admin', 200)&quot;" class="Tests\Tenant\Auth\AssetManagementTest" classname="Tests.Tenant.Auth.AssetManagementTest" assertions="1" time="1.335336"/>
        <testcase name="test access roles to force delete any asset with data set &quot;('Maintenance Manager', 403)&quot;" file="tests\Tenant\Auth\AssetManagementTest.php::test access roles to force delete any asset with data set &quot;('Maintenance Manager', 403)&quot;" class="Tests\Tenant\Auth\AssetManagementTest" classname="Tests.Tenant.Auth.AssetManagementTest" assertions="1" time="1.206059"/>
        <testcase name="test access roles to force delete any asset with data set &quot;('Provider', 403)&quot;" file="tests\Tenant\Auth\AssetManagementTest.php::test access roles to force delete any asset with data set &quot;('Provider', 403)&quot;" class="Tests\Tenant\Auth\AssetManagementTest" classname="Tests.Tenant.Auth.AssetManagementTest" assertions="1" time="1.180332"/>
      </testsuite>
      <testsuite name="cannot regenerate a QR Code if user is not maintenance manager from the asset" tests="3" assertions="3" errors="0" failures="0" skipped="0" time="4.654390">
        <testcase name="cannot regenerate a QR Code if user is not maintenance manager from the asset with data set &quot;('Admin', 200)&quot;" file="tests\Tenant\Auth\AssetManagementTest.php::cannot regenerate a QR Code if user is not maintenance manager from the asset with data set &quot;('Admin', 200)&quot;" class="Tests\Tenant\Auth\AssetManagementTest" classname="Tests.Tenant.Auth.AssetManagementTest" assertions="1" time="2.107444"/>
        <testcase name="cannot regenerate a QR Code if user is not maintenance manager from the asset with data set &quot;('Maintenance Manager', 403)&quot;" file="tests\Tenant\Auth\AssetManagementTest.php::cannot regenerate a QR Code if user is not maintenance manager from the asset with data set &quot;('Maintenance Manager', 403)&quot;" class="Tests\Tenant\Auth\AssetManagementTest" classname="Tests.Tenant.Auth.AssetManagementTest" assertions="1" time="1.289113"/>
        <testcase name="cannot regenerate a QR Code if user is not maintenance manager from the asset with data set &quot;('Provider', 403)&quot;" file="tests\Tenant\Auth\AssetManagementTest.php::cannot regenerate a QR Code if user is not maintenance manager from the asset with data set &quot;('Provider', 403)&quot;" class="Tests\Tenant\Auth\AssetManagementTest" classname="Tests.Tenant.Auth.AssetManagementTest" assertions="1" time="1.257833"/>
      </testsuite>
      <testsuite name="can regenerate a QR Code if user is not maintenance manager from the asset" tests="3" assertions="3" errors="0" failures="0" skipped="0" time="5.283809">
        <testcase name="can regenerate a QR Code if user is not maintenance manager from the asset with data set &quot;('Admin', 200)&quot;" file="tests\Tenant\Auth\AssetManagementTest.php::can regenerate a QR Code if user is not maintenance manager from the asset with data set &quot;('Admin', 200)&quot;" class="Tests\Tenant\Auth\AssetManagementTest" classname="Tests.Tenant.Auth.AssetManagementTest" assertions="1" time="2.137400"/>
        <testcase name="can regenerate a QR Code if user is not maintenance manager from the asset with data set &quot;('Maintenance Manager', 200)&quot;" file="tests\Tenant\Auth\AssetManagementTest.php::can regenerate a QR Code if user is not maintenance manager from the asset with data set &quot;('Maintenance Manager', 200)&quot;" class="Tests\Tenant\Auth\AssetManagementTest" classname="Tests.Tenant.Auth.AssetManagementTest" assertions="1" time="1.971606"/>
        <testcase name="can regenerate a QR Code if user is not maintenance manager from the asset with data set &quot;('Provider', 403)&quot;" file="tests\Tenant\Auth\AssetManagementTest.php::can regenerate a QR Code if user is not maintenance manager from the asset with data set &quot;('Provider', 403)&quot;" class="Tests\Tenant\Auth\AssetManagementTest" classname="Tests.Tenant.Auth.AssetManagementTest" assertions="1" time="1.174803"/>
      </testsuite>
    </testsuite>
    <testsuite name="Tests\Tenant\Auth\BuildingManagementTest" file="tests\Tenant\Auth\BuildingManagementTest.php" tests="36" assertions="36" errors="0" failures="0" skipped="0" time="47.855091">
      <testsuite name="test access roles to building index page" tests="3" assertions="3" errors="0" failures="0" skipped="0" time="3.483836">
        <testcase name="test access roles to building index page with data set &quot;('Admin', 200)&quot;" file="tests\Tenant\Auth\BuildingManagementTest.php::test access roles to building index page with data set &quot;('Admin', 200)&quot;" class="Tests\Tenant\Auth\BuildingManagementTest" classname="Tests.Tenant.Auth.BuildingManagementTest" assertions="1" time="1.218694"/>
        <testcase name="test access roles to building index page with data set &quot;('Maintenance Manager', 403)&quot;" file="tests\Tenant\Auth\BuildingManagementTest.php::test access roles to building index page with data set &quot;('Maintenance Manager', 403)&quot;" class="Tests\Tenant\Auth\BuildingManagementTest" classname="Tests.Tenant.Auth.BuildingManagementTest" assertions="1" time="1.122478"/>
        <testcase name="test access roles to building index page with data set &quot;('Provider', 403)&quot;" file="tests\Tenant\Auth\BuildingManagementTest.php::test access roles to building index page with data set &quot;('Provider', 403)&quot;" class="Tests\Tenant\Auth\BuildingManagementTest" classname="Tests.Tenant.Auth.BuildingManagementTest" assertions="1" time="1.142664"/>
      </testsuite>
      <testsuite name="test access roles to create building page" tests="3" assertions="3" errors="0" failures="0" skipped="0" time="5.071268">
        <testcase name="test access roles to create building page with data set &quot;('Admin', 200)&quot;" file="tests\Tenant\Auth\BuildingManagementTest.php::test access roles to create building page with data set &quot;('Admin', 200)&quot;" class="Tests\Tenant\Auth\BuildingManagementTest" classname="Tests.Tenant.Auth.BuildingManagementTest" assertions="1" time="1.709911"/>
        <testcase name="test access roles to create building page with data set &quot;('Maintenance Manager', 403)&quot;" file="tests\Tenant\Auth\BuildingManagementTest.php::test access roles to create building page with data set &quot;('Maintenance Manager', 403)&quot;" class="Tests\Tenant\Auth\BuildingManagementTest" classname="Tests.Tenant.Auth.BuildingManagementTest" assertions="1" time="1.867688"/>
        <testcase name="test access roles to create building page with data set &quot;('Provider', 403)&quot;" file="tests\Tenant\Auth\BuildingManagementTest.php::test access roles to create building page with data set &quot;('Provider', 403)&quot;" class="Tests\Tenant\Auth\BuildingManagementTest" classname="Tests.Tenant.Auth.BuildingManagementTest" assertions="1" time="1.493669"/>
      </testsuite>
      <testsuite name="test access roles to view any building page" tests="3" assertions="3" errors="0" failures="0" skipped="0" time="3.275913">
        <testcase name="test access roles to view any building page with data set &quot;('Admin', 200)&quot;" file="tests\Tenant\Auth\BuildingManagementTest.php::test access roles to view any building page with data set &quot;('Admin', 200)&quot;" class="Tests\Tenant\Auth\BuildingManagementTest" classname="Tests.Tenant.Auth.BuildingManagementTest" assertions="1" time="1.205263"/>
        <testcase name="test access roles to view any building page with data set &quot;('Maintenance Manager', 403)&quot;" file="tests\Tenant\Auth\BuildingManagementTest.php::test access roles to view any building page with data set &quot;('Maintenance Manager', 403)&quot;" class="Tests\Tenant\Auth\BuildingManagementTest" classname="Tests.Tenant.Auth.BuildingManagementTest" assertions="1" time="1.061932"/>
        <testcase name="test access roles to view any building page with data set &quot;('Provider', 403)&quot;" file="tests\Tenant\Auth\BuildingManagementTest.php::test access roles to view any building page with data set &quot;('Provider', 403)&quot;" class="Tests\Tenant\Auth\BuildingManagementTest" classname="Tests.Tenant.Auth.BuildingManagementTest" assertions="1" time="1.008718"/>
      </testsuite>
      <testsuite name="test access roles to view building with maintenance manager page" tests="3" assertions="3" errors="0" failures="0" skipped="0" time="3.767734">
        <testcase name="test access roles to view building with maintenance manager page with data set &quot;('Admin', 200)&quot;" file="tests\Tenant\Auth\BuildingManagementTest.php::test access roles to view building with maintenance manager page with data set &quot;('Admin', 200)&quot;" class="Tests\Tenant\Auth\BuildingManagementTest" classname="Tests.Tenant.Auth.BuildingManagementTest" assertions="1" time="1.076610"/>
        <testcase name="test access roles to view building with maintenance manager page with data set &quot;('Maintenance Manager', 200)&quot;" file="tests\Tenant\Auth\BuildingManagementTest.php::test access roles to view building with maintenance manager page with data set &quot;('Maintenance Manager', 200)&quot;" class="Tests\Tenant\Auth\BuildingManagementTest" classname="Tests.Tenant.Auth.BuildingManagementTest" assertions="1" time="1.158461"/>
        <testcase name="test access roles to view building with maintenance manager page with data set &quot;('Provider', 403)&quot;" file="tests\Tenant\Auth\BuildingManagementTest.php::test access roles to view building with maintenance manager page with data set &quot;('Provider', 403)&quot;" class="Tests\Tenant\Auth\BuildingManagementTest" classname="Tests.Tenant.Auth.BuildingManagementTest" assertions="1" time="1.532663"/>
      </testsuite>
      <testsuite name="test access roles to store a building" tests="3" assertions="3" errors="0" failures="0" skipped="0" time="4.456323">
        <testcase name="test access roles to store a building with data set &quot;('Admin', 200)&quot;" file="tests\Tenant\Auth\BuildingManagementTest.php::test access roles to store a building with data set &quot;('Admin', 200)&quot;" class="Tests\Tenant\Auth\BuildingManagementTest" classname="Tests.Tenant.Auth.BuildingManagementTest" assertions="1" time="1.573166"/>
        <testcase name="test access roles to store a building with data set &quot;('Maintenance Manager', 403)&quot;" file="tests\Tenant\Auth\BuildingManagementTest.php::test access roles to store a building with data set &quot;('Maintenance Manager', 403)&quot;" class="Tests\Tenant\Auth\BuildingManagementTest" classname="Tests.Tenant.Auth.BuildingManagementTest" assertions="1" time="1.348927"/>
        <testcase name="test access roles to store a building with data set &quot;('Provider', 403)&quot;" file="tests\Tenant\Auth\BuildingManagementTest.php::test access roles to store a building with data set &quot;('Provider', 403)&quot;" class="Tests\Tenant\Auth\BuildingManagementTest" classname="Tests.Tenant.Auth.BuildingManagementTest" assertions="1" time="1.534231"/>
      </testsuite>
      <testsuite name="test access roles to update any asset page" tests="3" assertions="3" errors="0" failures="0" skipped="0" time="4.810858">
        <testcase name="test access roles to update any asset page with data set &quot;('Admin', 200)&quot;" file="tests\Tenant\Auth\BuildingManagementTest.php::test access roles to update any asset page with data set &quot;('Admin', 200)&quot;" class="Tests\Tenant\Auth\BuildingManagementTest" classname="Tests.Tenant.Auth.BuildingManagementTest" assertions="1" time="1.634337"/>
        <testcase name="test access roles to update any asset page with data set &quot;('Maintenance Manager', 403)&quot;" file="tests\Tenant\Auth\BuildingManagementTest.php::test access roles to update any asset page with data set &quot;('Maintenance Manager', 403)&quot;" class="Tests\Tenant\Auth\BuildingManagementTest" classname="Tests.Tenant.Auth.BuildingManagementTest" assertions="1" time="1.602690"/>
        <testcase name="test access roles to update any asset page with data set &quot;('Provider', 403)&quot;" file="tests\Tenant\Auth\BuildingManagementTest.php::test access roles to update any asset page with data set &quot;('Provider', 403)&quot;" class="Tests\Tenant\Auth\BuildingManagementTest" classname="Tests.Tenant.Auth.BuildingManagementTest" assertions="1" time="1.573832"/>
      </testsuite>
      <testsuite name="test access roles to update building with maintenance manager page" tests="3" assertions="3" errors="0" failures="0" skipped="0" time="3.392517">
        <testcase name="test access roles to update building with maintenance manager page with data set &quot;('Admin', 200)&quot;" file="tests\Tenant\Auth\BuildingManagementTest.php::test access roles to update building with maintenance manager page with data set &quot;('Admin', 200)&quot;" class="Tests\Tenant\Auth\BuildingManagementTest" classname="Tests.Tenant.Auth.BuildingManagementTest" assertions="1" time="1.228479"/>
        <testcase name="test access roles to update building with maintenance manager page with data set &quot;('Maintenance Manager', 200)&quot;" file="tests\Tenant\Auth\BuildingManagementTest.php::test access roles to update building with maintenance manager page with data set &quot;('Maintenance Manager', 200)&quot;" class="Tests\Tenant\Auth\BuildingManagementTest" classname="Tests.Tenant.Auth.BuildingManagementTest" assertions="1" time="1.113760"/>
        <testcase name="test access roles to update building with maintenance manager page with data set &quot;('Provider', 403)&quot;" file="tests\Tenant\Auth\BuildingManagementTest.php::test access roles to update building with maintenance manager page with data set &quot;('Provider', 403)&quot;" class="Tests\Tenant\Auth\BuildingManagementTest" classname="Tests.Tenant.Auth.BuildingManagementTest" assertions="1" time="1.050278"/>
      </testsuite>
      <testsuite name="test access roles to update building with maintenance manager" tests="3" assertions="3" errors="0" failures="0" skipped="0" time="3.508837">
        <testcase name="test access roles to update building with maintenance manager with data set &quot;('Admin', 200)&quot;" file="tests\Tenant\Auth\BuildingManagementTest.php::test access roles to update building with maintenance manager with data set &quot;('Admin', 200)&quot;" class="Tests\Tenant\Auth\BuildingManagementTest" classname="Tests.Tenant.Auth.BuildingManagementTest" assertions="1" time="1.094047"/>
        <testcase name="test access roles to update building with maintenance manager with data set &quot;('Maintenance Manager', 200)&quot;" file="tests\Tenant\Auth\BuildingManagementTest.php::test access roles to update building with maintenance manager with data set &quot;('Maintenance Manager', 200)&quot;" class="Tests\Tenant\Auth\BuildingManagementTest" classname="Tests.Tenant.Auth.BuildingManagementTest" assertions="1" time="1.208379"/>
        <testcase name="test access roles to update building with maintenance manager with data set &quot;('Provider', 403)&quot;" file="tests\Tenant\Auth\BuildingManagementTest.php::test access roles to update building with maintenance manager with data set &quot;('Provider', 403)&quot;" class="Tests\Tenant\Auth\BuildingManagementTest" classname="Tests.Tenant.Auth.BuildingManagementTest" assertions="1" time="1.206411"/>
      </testsuite>
      <testsuite name="test access roles to delete any building" tests="3" assertions="3" errors="0" failures="0" skipped="0" time="3.326596">
        <testcase name="test access roles to delete any building with data set &quot;('Admin', 200)&quot;" file="tests\Tenant\Auth\BuildingManagementTest.php::test access roles to delete any building with data set &quot;('Admin', 200)&quot;" class="Tests\Tenant\Auth\BuildingManagementTest" classname="Tests.Tenant.Auth.BuildingManagementTest" assertions="1" time="1.004179"/>
        <testcase name="test access roles to delete any building with data set &quot;('Maintenance Manager', 403)&quot;" file="tests\Tenant\Auth\BuildingManagementTest.php::test access roles to delete any building with data set &quot;('Maintenance Manager', 403)&quot;" class="Tests\Tenant\Auth\BuildingManagementTest" classname="Tests.Tenant.Auth.BuildingManagementTest" assertions="1" time="1.137276"/>
        <testcase name="test access roles to delete any building with data set &quot;('Provider', 403)&quot;" file="tests\Tenant\Auth\BuildingManagementTest.php::test access roles to delete any building with data set &quot;('Provider', 403)&quot;" class="Tests\Tenant\Auth\BuildingManagementTest" classname="Tests.Tenant.Auth.BuildingManagementTest" assertions="1" time="1.185141"/>
      </testsuite>
      <testsuite name="test access roles to delete building with maintenance manager" tests="3" assertions="3" errors="0" failures="0" skipped="0" time="3.178028">
        <testcase name="test access roles to delete building with maintenance manager with data set &quot;('Admin', 200)&quot;" file="tests\Tenant\Auth\BuildingManagementTest.php::test access roles to delete building with maintenance manager with data set &quot;('Admin', 200)&quot;" class="Tests\Tenant\Auth\BuildingManagementTest" classname="Tests.Tenant.Auth.BuildingManagementTest" assertions="1" time="1.042686"/>
        <testcase name="test access roles to delete building with maintenance manager with data set &quot;('Maintenance Manager', 403)&quot;" file="tests\Tenant\Auth\BuildingManagementTest.php::test access roles to delete building with maintenance manager with data set &quot;('Maintenance Manager', 403)&quot;" class="Tests\Tenant\Auth\BuildingManagementTest" classname="Tests.Tenant.Auth.BuildingManagementTest" assertions="1" time="1.072511"/>
        <testcase name="test access roles to delete building with maintenance manager with data set &quot;('Provider', 403)&quot;" file="tests\Tenant\Auth\BuildingManagementTest.php::test access roles to delete building with maintenance manager with data set &quot;('Provider', 403)&quot;" class="Tests\Tenant\Auth\BuildingManagementTest" classname="Tests.Tenant.Auth.BuildingManagementTest" assertions="1" time="1.062832"/>
      </testsuite>
      <testsuite name="cannot regenerate a QR Code if user is not maintenance manager from the building" tests="3" assertions="3" errors="0" failures="0" skipped="0" time="3.808352">
        <testcase name="cannot regenerate a QR Code if user is not maintenance manager from the building with data set &quot;('Admin', 200)&quot;" file="tests\Tenant\Auth\BuildingManagementTest.php::cannot regenerate a QR Code if user is not maintenance manager from the building with data set &quot;('Admin', 200)&quot;" class="Tests\Tenant\Auth\BuildingManagementTest" classname="Tests.Tenant.Auth.BuildingManagementTest" assertions="1" time="1.932614"/>
        <testcase name="cannot regenerate a QR Code if user is not maintenance manager from the building with data set &quot;('Maintenance Manager', 403)&quot;" file="tests\Tenant\Auth\BuildingManagementTest.php::cannot regenerate a QR Code if user is not maintenance manager from the building with data set &quot;('Maintenance Manager', 403)&quot;" class="Tests\Tenant\Auth\BuildingManagementTest" classname="Tests.Tenant.Auth.BuildingManagementTest" assertions="1" time="0.932664"/>
        <testcase name="cannot regenerate a QR Code if user is not maintenance manager from the building with data set &quot;('Provider', 403)&quot;" file="tests\Tenant\Auth\BuildingManagementTest.php::cannot regenerate a QR Code if user is not maintenance manager from the building with data set &quot;('Provider', 403)&quot;" class="Tests\Tenant\Auth\BuildingManagementTest" classname="Tests.Tenant.Auth.BuildingManagementTest" assertions="1" time="0.943074"/>
      </testsuite>
      <testsuite name="can regenerate a QR Code if user is not maintenance manager from the building" tests="3" assertions="3" errors="0" failures="0" skipped="0" time="5.774828">
        <testcase name="can regenerate a QR Code if user is not maintenance manager from the building with data set &quot;('Admin', 200)&quot;" file="tests\Tenant\Auth\BuildingManagementTest.php::can regenerate a QR Code if user is not maintenance manager from the building with data set &quot;('Admin', 200)&quot;" class="Tests\Tenant\Auth\BuildingManagementTest" classname="Tests.Tenant.Auth.BuildingManagementTest" assertions="1" time="1.947228"/>
        <testcase name="can regenerate a QR Code if user is not maintenance manager from the building with data set &quot;('Maintenance Manager', 200)&quot;" file="tests\Tenant\Auth\BuildingManagementTest.php::can regenerate a QR Code if user is not maintenance manager from the building with data set &quot;('Maintenance Manager', 200)&quot;" class="Tests\Tenant\Auth\BuildingManagementTest" classname="Tests.Tenant.Auth.BuildingManagementTest" assertions="1" time="2.797764"/>
        <testcase name="can regenerate a QR Code if user is not maintenance manager from the building with data set &quot;('Provider', 403)&quot;" file="tests\Tenant\Auth\BuildingManagementTest.php::can regenerate a QR Code if user is not maintenance manager from the building with data set &quot;('Provider', 403)&quot;" class="Tests\Tenant\Auth\BuildingManagementTest" classname="Tests.Tenant.Auth.BuildingManagementTest" assertions="1" time="1.029836"/>
      </testsuite>
    </testsuite>
    <testsuite name="Tests\Tenant\Auth\ContractManagementTest" file="tests\Tenant\Auth\ContractManagementTest.php" tests="30" assertions="30" errors="0" failures="0" skipped="0" time="43.680914">
      <testsuite name="test access roles to contracts index page" tests="3" assertions="3" errors="0" failures="0" skipped="0" time="4.124220">
        <testcase name="test access roles to contracts index page with data set &quot;('Admin', 200)&quot;" file="tests\Tenant\Auth\ContractManagementTest.php::test access roles to contracts index page with data set &quot;('Admin', 200)&quot;" class="Tests\Tenant\Auth\ContractManagementTest" classname="Tests.Tenant.Auth.ContractManagementTest" assertions="1" time="1.618987"/>
        <testcase name="test access roles to contracts index page with data set &quot;('Maintenance Manager', 200)&quot;" file="tests\Tenant\Auth\ContractManagementTest.php::test access roles to contracts index page with data set &quot;('Maintenance Manager', 200)&quot;" class="Tests\Tenant\Auth\ContractManagementTest" classname="Tests.Tenant.Auth.ContractManagementTest" assertions="1" time="1.246114"/>
        <testcase name="test access roles to contracts index page with data set &quot;('Provider', 403)&quot;" file="tests\Tenant\Auth\ContractManagementTest.php::test access roles to contracts index page with data set &quot;('Provider', 403)&quot;" class="Tests\Tenant\Auth\ContractManagementTest" classname="Tests.Tenant.Auth.ContractManagementTest" assertions="1" time="1.259119"/>
      </testsuite>
      <testsuite name="test access roles to create contract page" tests="3" assertions="3" errors="0" failures="0" skipped="0" time="3.799816">
        <testcase name="test access roles to create contract page with data set &quot;('Admin', 200)&quot;" file="tests\Tenant\Auth\ContractManagementTest.php::test access roles to create contract page with data set &quot;('Admin', 200)&quot;" class="Tests\Tenant\Auth\ContractManagementTest" classname="Tests.Tenant.Auth.ContractManagementTest" assertions="1" time="1.234139"/>
        <testcase name="test access roles to create contract page with data set &quot;('Maintenance Manager', 200)&quot;" file="tests\Tenant\Auth\ContractManagementTest.php::test access roles to create contract page with data set &quot;('Maintenance Manager', 200)&quot;" class="Tests\Tenant\Auth\ContractManagementTest" classname="Tests.Tenant.Auth.ContractManagementTest" assertions="1" time="1.217769"/>
        <testcase name="test access roles to create contract page with data set &quot;('Provider', 403)&quot;" file="tests\Tenant\Auth\ContractManagementTest.php::test access roles to create contract page with data set &quot;('Provider', 403)&quot;" class="Tests\Tenant\Auth\ContractManagementTest" classname="Tests.Tenant.Auth.ContractManagementTest" assertions="1" time="1.347908"/>
      </testsuite>
      <testsuite name="test access roles to view any contract page" tests="3" assertions="3" errors="0" failures="0" skipped="0" time="4.720227">
        <testcase name="test access roles to view any contract page with data set &quot;('Admin', 200)&quot;" file="tests\Tenant\Auth\ContractManagementTest.php::test access roles to view any contract page with data set &quot;('Admin', 200)&quot;" class="Tests\Tenant\Auth\ContractManagementTest" classname="Tests.Tenant.Auth.ContractManagementTest" assertions="1" time="1.696247"/>
        <testcase name="test access roles to view any contract page with data set &quot;('Maintenance Manager', 200)&quot;" file="tests\Tenant\Auth\ContractManagementTest.php::test access roles to view any contract page with data set &quot;('Maintenance Manager', 200)&quot;" class="Tests\Tenant\Auth\ContractManagementTest" classname="Tests.Tenant.Auth.ContractManagementTest" assertions="1" time="1.547394"/>
        <testcase name="test access roles to view any contract page with data set &quot;('Provider', 403)&quot;" file="tests\Tenant\Auth\ContractManagementTest.php::test access roles to view any contract page with data set &quot;('Provider', 403)&quot;" class="Tests\Tenant\Auth\ContractManagementTest" classname="Tests.Tenant.Auth.ContractManagementTest" assertions="1" time="1.476585"/>
      </testsuite>
      <testsuite name="test access roles to store a contract" tests="3" assertions="3" errors="0" failures="0" skipped="0" time="4.766920">
        <testcase name="test access roles to store a contract with data set &quot;('Admin', 200)&quot;" file="tests\Tenant\Auth\ContractManagementTest.php::test access roles to store a contract with data set &quot;('Admin', 200)&quot;" class="Tests\Tenant\Auth\ContractManagementTest" classname="Tests.Tenant.Auth.ContractManagementTest" assertions="1" time="1.716119"/>
        <testcase name="test access roles to store a contract with data set &quot;('Maintenance Manager', 200)&quot;" file="tests\Tenant\Auth\ContractManagementTest.php::test access roles to store a contract with data set &quot;('Maintenance Manager', 200)&quot;" class="Tests\Tenant\Auth\ContractManagementTest" classname="Tests.Tenant.Auth.ContractManagementTest" assertions="1" time="1.881205"/>
        <testcase name="test access roles to store a contract with data set &quot;('Provider', 403)&quot;" file="tests\Tenant\Auth\ContractManagementTest.php::test access roles to store a contract with data set &quot;('Provider', 403)&quot;" class="Tests\Tenant\Auth\ContractManagementTest" classname="Tests.Tenant.Auth.ContractManagementTest" assertions="1" time="1.169595"/>
      </testsuite>
      <testsuite name="test access roles to update any contract page" tests="3" assertions="3" errors="0" failures="0" skipped="0" time="4.073250">
        <testcase name="test access roles to update any contract page with data set &quot;('Admin', 200)&quot;" file="tests\Tenant\Auth\ContractManagementTest.php::test access roles to update any contract page with data set &quot;('Admin', 200)&quot;" class="Tests\Tenant\Auth\ContractManagementTest" classname="Tests.Tenant.Auth.ContractManagementTest" assertions="1" time="1.286399"/>
        <testcase name="test access roles to update any contract page with data set &quot;('Maintenance Manager', 200)&quot;" file="tests\Tenant\Auth\ContractManagementTest.php::test access roles to update any contract page with data set &quot;('Maintenance Manager', 200)&quot;" class="Tests\Tenant\Auth\ContractManagementTest" classname="Tests.Tenant.Auth.ContractManagementTest" assertions="1" time="1.399753"/>
        <testcase name="test access roles to update any contract page with data set &quot;('Provider', 403)&quot;" file="tests\Tenant\Auth\ContractManagementTest.php::test access roles to update any contract page with data set &quot;('Provider', 403)&quot;" class="Tests\Tenant\Auth\ContractManagementTest" classname="Tests.Tenant.Auth.ContractManagementTest" assertions="1" time="1.387098"/>
      </testsuite>
      <testsuite name="test access roles to update a contract" tests="3" assertions="3" errors="0" failures="0" skipped="0" time="3.569306">
        <testcase name="test access roles to update a contract with data set &quot;('Admin', 200)&quot;" file="tests\Tenant\Auth\ContractManagementTest.php::test access roles to update a contract with data set &quot;('Admin', 200)&quot;" class="Tests\Tenant\Auth\ContractManagementTest" classname="Tests.Tenant.Auth.ContractManagementTest" assertions="1" time="1.214304"/>
        <testcase name="test access roles to update a contract with data set &quot;('Maintenance Manager', 200)&quot;" file="tests\Tenant\Auth\ContractManagementTest.php::test access roles to update a contract with data set &quot;('Maintenance Manager', 200)&quot;" class="Tests\Tenant\Auth\ContractManagementTest" classname="Tests.Tenant.Auth.ContractManagementTest" assertions="1" time="1.201275"/>
        <testcase name="test access roles to update a contract with data set &quot;('Provider', 403)&quot;" file="tests\Tenant\Auth\ContractManagementTest.php::test access roles to update a contract with data set &quot;('Provider', 403)&quot;" class="Tests\Tenant\Auth\ContractManagementTest" classname="Tests.Tenant.Auth.ContractManagementTest" assertions="1" time="1.153726"/>
      </testsuite>
      <testsuite name="test access roles to contract page" tests="3" assertions="3" errors="0" failures="0" skipped="0" time="4.955885">
        <testcase name="test access roles to contract page with data set &quot;('Admin', 200)&quot;" file="tests\Tenant\Auth\ContractManagementTest.php::test access roles to contract page with data set &quot;('Admin', 200)&quot;" class="Tests\Tenant\Auth\ContractManagementTest" classname="Tests.Tenant.Auth.ContractManagementTest" assertions="1" time="1.680473"/>
        <testcase name="test access roles to contract page with data set &quot;('Maintenance Manager', 200)&quot;" file="tests\Tenant\Auth\ContractManagementTest.php::test access roles to contract page with data set &quot;('Maintenance Manager', 200)&quot;" class="Tests\Tenant\Auth\ContractManagementTest" classname="Tests.Tenant.Auth.ContractManagementTest" assertions="1" time="1.532067"/>
        <testcase name="test access roles to contract page with data set &quot;('Provider', 403)&quot;" file="tests\Tenant\Auth\ContractManagementTest.php::test access roles to contract page with data set &quot;('Provider', 403)&quot;" class="Tests\Tenant\Auth\ContractManagementTest" classname="Tests.Tenant.Auth.ContractManagementTest" assertions="1" time="1.743345"/>
      </testsuite>
      <testsuite name="test access roles to delete any contract" tests="3" assertions="3" errors="0" failures="0" skipped="0" time="4.412798">
        <testcase name="test access roles to delete any contract with data set &quot;('Admin', 200)&quot;" file="tests\Tenant\Auth\ContractManagementTest.php::test access roles to delete any contract with data set &quot;('Admin', 200)&quot;" class="Tests\Tenant\Auth\ContractManagementTest" classname="Tests.Tenant.Auth.ContractManagementTest" assertions="1" time="1.617100"/>
        <testcase name="test access roles to delete any contract with data set &quot;('Maintenance Manager', 403)&quot;" file="tests\Tenant\Auth\ContractManagementTest.php::test access roles to delete any contract with data set &quot;('Maintenance Manager', 403)&quot;" class="Tests\Tenant\Auth\ContractManagementTest" classname="Tests.Tenant.Auth.ContractManagementTest" assertions="1" time="1.522502"/>
        <testcase name="test access roles to delete any contract with data set &quot;('Provider', 403)&quot;" file="tests\Tenant\Auth\ContractManagementTest.php::test access roles to delete any contract with data set &quot;('Provider', 403)&quot;" class="Tests\Tenant\Auth\ContractManagementTest" classname="Tests.Tenant.Auth.ContractManagementTest" assertions="1" time="1.273195"/>
      </testsuite>
      <testsuite name="test access roles to post a new document to a contract" tests="3" assertions="3" errors="0" failures="0" skipped="0" time="4.319705">
        <testcase name="test access roles to post a new document to a contract with data set &quot;('Admin', 200)&quot;" file="tests\Tenant\Auth\ContractManagementTest.php::test access roles to post a new document to a contract with data set &quot;('Admin', 200)&quot;" class="Tests\Tenant\Auth\ContractManagementTest" classname="Tests.Tenant.Auth.ContractManagementTest" assertions="1" time="1.237185"/>
        <testcase name="test access roles to post a new document to a contract with data set &quot;('Maintenance Manager', 200)&quot;" file="tests\Tenant\Auth\ContractManagementTest.php::test access roles to post a new document to a contract with data set &quot;('Maintenance Manager', 200)&quot;" class="Tests\Tenant\Auth\ContractManagementTest" classname="Tests.Tenant.Auth.ContractManagementTest" assertions="1" time="1.503169"/>
        <testcase name="test access roles to post a new document to a contract with data set &quot;('Provider', 403)&quot;" file="tests\Tenant\Auth\ContractManagementTest.php::test access roles to post a new document to a contract with data set &quot;('Provider', 403)&quot;" class="Tests\Tenant\Auth\ContractManagementTest" classname="Tests.Tenant.Auth.ContractManagementTest" assertions="1" time="1.579351"/>
      </testsuite>
      <testsuite name="test access roles to detach a document from a contract" tests="3" assertions="3" errors="0" failures="0" skipped="0" time="4.938788">
        <testcase name="test access roles to detach a document from a contract with data set &quot;('Admin', 200)&quot;" file="tests\Tenant\Auth\ContractManagementTest.php::test access roles to detach a document from a contract with data set &quot;('Admin', 200)&quot;" class="Tests\Tenant\Auth\ContractManagementTest" classname="Tests.Tenant.Auth.ContractManagementTest" assertions="1" time="1.930531"/>
        <testcase name="test access roles to detach a document from a contract with data set &quot;('Maintenance Manager', 200)&quot;" file="tests\Tenant\Auth\ContractManagementTest.php::test access roles to detach a document from a contract with data set &quot;('Maintenance Manager', 200)&quot;" class="Tests\Tenant\Auth\ContractManagementTest" classname="Tests.Tenant.Auth.ContractManagementTest" assertions="1" time="1.830381"/>
        <testcase name="test access roles to detach a document from a contract with data set &quot;('Provider', 403)&quot;" file="tests\Tenant\Auth\ContractManagementTest.php::test access roles to detach a document from a contract with data set &quot;('Provider', 403)&quot;" class="Tests\Tenant\Auth\ContractManagementTest" classname="Tests.Tenant.Auth.ContractManagementTest" assertions="1" time="1.177876"/>
      </testsuite>
    </testsuite>
    <testsuite name="Tests\Tenant\Auth\FloorManagementTest" file="tests\Tenant\Auth\FloorManagementTest.php" tests="36" assertions="36" errors="0" failures="0" skipped="0" time="48.417895">
      <testsuite name="test access roles to floor index page" tests="3" assertions="3" errors="0" failures="0" skipped="0" time="3.764458">
        <testcase name="test access roles to floor index page with data set &quot;('Admin', 200)&quot;" file="tests\Tenant\Auth\FloorManagementTest.php::test access roles to floor index page with data set &quot;('Admin', 200)&quot;" class="Tests\Tenant\Auth\FloorManagementTest" classname="Tests.Tenant.Auth.FloorManagementTest" assertions="1" time="1.467232"/>
        <testcase name="test access roles to floor index page with data set &quot;('Maintenance Manager', 403)&quot;" file="tests\Tenant\Auth\FloorManagementTest.php::test access roles to floor index page with data set &quot;('Maintenance Manager', 403)&quot;" class="Tests\Tenant\Auth\FloorManagementTest" classname="Tests.Tenant.Auth.FloorManagementTest" assertions="1" time="1.156442"/>
        <testcase name="test access roles to floor index page with data set &quot;('Provider', 403)&quot;" file="tests\Tenant\Auth\FloorManagementTest.php::test access roles to floor index page with data set &quot;('Provider', 403)&quot;" class="Tests\Tenant\Auth\FloorManagementTest" classname="Tests.Tenant.Auth.FloorManagementTest" assertions="1" time="1.140784"/>
      </testsuite>
      <testsuite name="test access roles to create floor page" tests="3" assertions="3" errors="0" failures="0" skipped="0" time="4.076929">
        <testcase name="test access roles to create floor page with data set &quot;('Admin', 200)&quot;" file="tests\Tenant\Auth\FloorManagementTest.php::test access roles to create floor page with data set &quot;('Admin', 200)&quot;" class="Tests\Tenant\Auth\FloorManagementTest" classname="Tests.Tenant.Auth.FloorManagementTest" assertions="1" time="1.289891"/>
        <testcase name="test access roles to create floor page with data set &quot;('Maintenance Manager', 403)&quot;" file="tests\Tenant\Auth\FloorManagementTest.php::test access roles to create floor page with data set &quot;('Maintenance Manager', 403)&quot;" class="Tests\Tenant\Auth\FloorManagementTest" classname="Tests.Tenant.Auth.FloorManagementTest" assertions="1" time="1.170745"/>
        <testcase name="test access roles to create floor page with data set &quot;('Provider', 403)&quot;" file="tests\Tenant\Auth\FloorManagementTest.php::test access roles to create floor page with data set &quot;('Provider', 403)&quot;" class="Tests\Tenant\Auth\FloorManagementTest" classname="Tests.Tenant.Auth.FloorManagementTest" assertions="1" time="1.616293"/>
      </testsuite>
      <testsuite name="test access roles to view any floor page" tests="3" assertions="3" errors="0" failures="0" skipped="0" time="4.382601">
        <testcase name="test access roles to view any floor page with data set &quot;('Admin', 200)&quot;" file="tests\Tenant\Auth\FloorManagementTest.php::test access roles to view any floor page with data set &quot;('Admin', 200)&quot;" class="Tests\Tenant\Auth\FloorManagementTest" classname="Tests.Tenant.Auth.FloorManagementTest" assertions="1" time="1.392136"/>
        <testcase name="test access roles to view any floor page with data set &quot;('Maintenance Manager', 403)&quot;" file="tests\Tenant\Auth\FloorManagementTest.php::test access roles to view any floor page with data set &quot;('Maintenance Manager', 403)&quot;" class="Tests\Tenant\Auth\FloorManagementTest" classname="Tests.Tenant.Auth.FloorManagementTest" assertions="1" time="1.728281"/>
        <testcase name="test access roles to view any floor page with data set &quot;('Provider', 403)&quot;" file="tests\Tenant\Auth\FloorManagementTest.php::test access roles to view any floor page with data set &quot;('Provider', 403)&quot;" class="Tests\Tenant\Auth\FloorManagementTest" classname="Tests.Tenant.Auth.FloorManagementTest" assertions="1" time="1.262185"/>
      </testsuite>
      <testsuite name="test access roles to view floor with maintenance manager page" tests="3" assertions="3" errors="0" failures="0" skipped="0" time="4.065660">
        <testcase name="test access roles to view floor with maintenance manager page with data set &quot;('Admin', 200)&quot;" file="tests\Tenant\Auth\FloorManagementTest.php::test access roles to view floor with maintenance manager page with data set &quot;('Admin', 200)&quot;" class="Tests\Tenant\Auth\FloorManagementTest" classname="Tests.Tenant.Auth.FloorManagementTest" assertions="1" time="1.488134"/>
        <testcase name="test access roles to view floor with maintenance manager page with data set &quot;('Maintenance Manager', 200)&quot;" file="tests\Tenant\Auth\FloorManagementTest.php::test access roles to view floor with maintenance manager page with data set &quot;('Maintenance Manager', 200)&quot;" class="Tests\Tenant\Auth\FloorManagementTest" classname="Tests.Tenant.Auth.FloorManagementTest" assertions="1" time="1.414936"/>
        <testcase name="test access roles to view floor with maintenance manager page with data set &quot;('Provider', 403)&quot;" file="tests\Tenant\Auth\FloorManagementTest.php::test access roles to view floor with maintenance manager page with data set &quot;('Provider', 403)&quot;" class="Tests\Tenant\Auth\FloorManagementTest" classname="Tests.Tenant.Auth.FloorManagementTest" assertions="1" time="1.162590"/>
      </testsuite>
      <testsuite name="test access roles to store a floor" tests="3" assertions="3" errors="0" failures="0" skipped="0" time="2.947525">
        <testcase name="test access roles to store a floor with data set &quot;('Admin', 200)&quot;" file="tests\Tenant\Auth\FloorManagementTest.php::test access roles to store a floor with data set &quot;('Admin', 200)&quot;" class="Tests\Tenant\Auth\FloorManagementTest" classname="Tests.Tenant.Auth.FloorManagementTest" assertions="1" time="0.999958"/>
        <testcase name="test access roles to store a floor with data set &quot;('Maintenance Manager', 403)&quot;" file="tests\Tenant\Auth\FloorManagementTest.php::test access roles to store a floor with data set &quot;('Maintenance Manager', 403)&quot;" class="Tests\Tenant\Auth\FloorManagementTest" classname="Tests.Tenant.Auth.FloorManagementTest" assertions="1" time="1.019914"/>
        <testcase name="test access roles to store a floor with data set &quot;('Provider', 403)&quot;" file="tests\Tenant\Auth\FloorManagementTest.php::test access roles to store a floor with data set &quot;('Provider', 403)&quot;" class="Tests\Tenant\Auth\FloorManagementTest" classname="Tests.Tenant.Auth.FloorManagementTest" assertions="1" time="0.927652"/>
      </testsuite>
      <testsuite name="test access roles to update any asset page" tests="3" assertions="3" errors="0" failures="0" skipped="0" time="3.128740">
        <testcase name="test access roles to update any asset page with data set &quot;('Admin', 200)&quot;" file="tests\Tenant\Auth\FloorManagementTest.php::test access roles to update any asset page with data set &quot;('Admin', 200)&quot;" class="Tests\Tenant\Auth\FloorManagementTest" classname="Tests.Tenant.Auth.FloorManagementTest" assertions="1" time="0.980963"/>
        <testcase name="test access roles to update any asset page with data set &quot;('Maintenance Manager', 403)&quot;" file="tests\Tenant\Auth\FloorManagementTest.php::test access roles to update any asset page with data set &quot;('Maintenance Manager', 403)&quot;" class="Tests\Tenant\Auth\FloorManagementTest" classname="Tests.Tenant.Auth.FloorManagementTest" assertions="1" time="1.040034"/>
        <testcase name="test access roles to update any asset page with data set &quot;('Provider', 403)&quot;" file="tests\Tenant\Auth\FloorManagementTest.php::test access roles to update any asset page with data set &quot;('Provider', 403)&quot;" class="Tests\Tenant\Auth\FloorManagementTest" classname="Tests.Tenant.Auth.FloorManagementTest" assertions="1" time="1.107743"/>
      </testsuite>
      <testsuite name="test access roles to update floor with maintenance manager page" tests="3" assertions="3" errors="0" failures="0" skipped="0" time="3.937582">
        <testcase name="test access roles to update floor with maintenance manager page with data set &quot;('Admin', 200)&quot;" file="tests\Tenant\Auth\FloorManagementTest.php::test access roles to update floor with maintenance manager page with data set &quot;('Admin', 200)&quot;" class="Tests\Tenant\Auth\FloorManagementTest" classname="Tests.Tenant.Auth.FloorManagementTest" assertions="1" time="1.501837"/>
        <testcase name="test access roles to update floor with maintenance manager page with data set &quot;('Maintenance Manager', 200)&quot;" file="tests\Tenant\Auth\FloorManagementTest.php::test access roles to update floor with maintenance manager page with data set &quot;('Maintenance Manager', 200)&quot;" class="Tests\Tenant\Auth\FloorManagementTest" classname="Tests.Tenant.Auth.FloorManagementTest" assertions="1" time="1.248531"/>
        <testcase name="test access roles to update floor with maintenance manager page with data set &quot;('Provider', 403)&quot;" file="tests\Tenant\Auth\FloorManagementTest.php::test access roles to update floor with maintenance manager page with data set &quot;('Provider', 403)&quot;" class="Tests\Tenant\Auth\FloorManagementTest" classname="Tests.Tenant.Auth.FloorManagementTest" assertions="1" time="1.187214"/>
      </testsuite>
      <testsuite name="test access roles to update floor with maintenance manager" tests="3" assertions="3" errors="0" failures="0" skipped="0" time="3.596520">
        <testcase name="test access roles to update floor with maintenance manager with data set &quot;('Admin', 200)&quot;" file="tests\Tenant\Auth\FloorManagementTest.php::test access roles to update floor with maintenance manager with data set &quot;('Admin', 200)&quot;" class="Tests\Tenant\Auth\FloorManagementTest" classname="Tests.Tenant.Auth.FloorManagementTest" assertions="1" time="1.227218"/>
        <testcase name="test access roles to update floor with maintenance manager with data set &quot;('Maintenance Manager', 200)&quot;" file="tests\Tenant\Auth\FloorManagementTest.php::test access roles to update floor with maintenance manager with data set &quot;('Maintenance Manager', 200)&quot;" class="Tests\Tenant\Auth\FloorManagementTest" classname="Tests.Tenant.Auth.FloorManagementTest" assertions="1" time="1.278035"/>
        <testcase name="test access roles to update floor with maintenance manager with data set &quot;('Provider', 403)&quot;" file="tests\Tenant\Auth\FloorManagementTest.php::test access roles to update floor with maintenance manager with data set &quot;('Provider', 403)&quot;" class="Tests\Tenant\Auth\FloorManagementTest" classname="Tests.Tenant.Auth.FloorManagementTest" assertions="1" time="1.091266"/>
      </testsuite>
      <testsuite name="test access roles to delete any floor" tests="3" assertions="3" errors="0" failures="0" skipped="0" time="3.606757">
        <testcase name="test access roles to delete any floor with data set &quot;('Admin', 200)&quot;" file="tests\Tenant\Auth\FloorManagementTest.php::test access roles to delete any floor with data set &quot;('Admin', 200)&quot;" class="Tests\Tenant\Auth\FloorManagementTest" classname="Tests.Tenant.Auth.FloorManagementTest" assertions="1" time="1.195830"/>
        <testcase name="test access roles to delete any floor with data set &quot;('Maintenance Manager', 403)&quot;" file="tests\Tenant\Auth\FloorManagementTest.php::test access roles to delete any floor with data set &quot;('Maintenance Manager', 403)&quot;" class="Tests\Tenant\Auth\FloorManagementTest" classname="Tests.Tenant.Auth.FloorManagementTest" assertions="1" time="1.213279"/>
        <testcase name="test access roles to delete any floor with data set &quot;('Provider', 403)&quot;" file="tests\Tenant\Auth\FloorManagementTest.php::test access roles to delete any floor with data set &quot;('Provider', 403)&quot;" class="Tests\Tenant\Auth\FloorManagementTest" classname="Tests.Tenant.Auth.FloorManagementTest" assertions="1" time="1.197648"/>
      </testsuite>
      <testsuite name="test access roles to delete floor with maintenance manager" tests="3" assertions="3" errors="0" failures="0" skipped="0" time="3.793676">
        <testcase name="test access roles to delete floor with maintenance manager with data set &quot;('Admin', 200)&quot;" file="tests\Tenant\Auth\FloorManagementTest.php::test access roles to delete floor with maintenance manager with data set &quot;('Admin', 200)&quot;" class="Tests\Tenant\Auth\FloorManagementTest" classname="Tests.Tenant.Auth.FloorManagementTest" assertions="1" time="1.311712"/>
        <testcase name="test access roles to delete floor with maintenance manager with data set &quot;('Maintenance Manager', 403)&quot;" file="tests\Tenant\Auth\FloorManagementTest.php::test access roles to delete floor with maintenance manager with data set &quot;('Maintenance Manager', 403)&quot;" class="Tests\Tenant\Auth\FloorManagementTest" classname="Tests.Tenant.Auth.FloorManagementTest" assertions="1" time="1.239423"/>
        <testcase name="test access roles to delete floor with maintenance manager with data set &quot;('Provider', 403)&quot;" file="tests\Tenant\Auth\FloorManagementTest.php::test access roles to delete floor with maintenance manager with data set &quot;('Provider', 403)&quot;" class="Tests\Tenant\Auth\FloorManagementTest" classname="Tests.Tenant.Auth.FloorManagementTest" assertions="1" time="1.242541"/>
      </testsuite>
      <testsuite name="cannot regenerate a QR Code if user is not maintenance manager from the floor" tests="3" assertions="3" errors="0" failures="0" skipped="0" time="4.720846">
        <testcase name="cannot regenerate a QR Code if user is not maintenance manager from the floor with data set &quot;('Admin', 200)&quot;" file="tests\Tenant\Auth\FloorManagementTest.php::cannot regenerate a QR Code if user is not maintenance manager from the floor with data set &quot;('Admin', 200)&quot;" class="Tests\Tenant\Auth\FloorManagementTest" classname="Tests.Tenant.Auth.FloorManagementTest" assertions="1" time="2.629444"/>
        <testcase name="cannot regenerate a QR Code if user is not maintenance manager from the floor with data set &quot;('Maintenance Manager', 403)&quot;" file="tests\Tenant\Auth\FloorManagementTest.php::cannot regenerate a QR Code if user is not maintenance manager from the floor with data set &quot;('Maintenance Manager', 403)&quot;" class="Tests\Tenant\Auth\FloorManagementTest" classname="Tests.Tenant.Auth.FloorManagementTest" assertions="1" time="1.138601"/>
        <testcase name="cannot regenerate a QR Code if user is not maintenance manager from the floor with data set &quot;('Provider', 403)&quot;" file="tests\Tenant\Auth\FloorManagementTest.php::cannot regenerate a QR Code if user is not maintenance manager from the floor with data set &quot;('Provider', 403)&quot;" class="Tests\Tenant\Auth\FloorManagementTest" classname="Tests.Tenant.Auth.FloorManagementTest" assertions="1" time="0.952801"/>
      </testsuite>
      <testsuite name="can regenerate a QR Code if user is not maintenance manager from the floor" tests="3" assertions="3" errors="0" failures="0" skipped="0" time="6.396602">
        <testcase name="can regenerate a QR Code if user is not maintenance manager from the floor with data set &quot;('Admin', 200)&quot;" file="tests\Tenant\Auth\FloorManagementTest.php::can regenerate a QR Code if user is not maintenance manager from the floor with data set &quot;('Admin', 200)&quot;" class="Tests\Tenant\Auth\FloorManagementTest" classname="Tests.Tenant.Auth.FloorManagementTest" assertions="1" time="2.750102"/>
        <testcase name="can regenerate a QR Code if user is not maintenance manager from the floor with data set &quot;('Maintenance Manager', 200)&quot;" file="tests\Tenant\Auth\FloorManagementTest.php::can regenerate a QR Code if user is not maintenance manager from the floor with data set &quot;('Maintenance Manager', 200)&quot;" class="Tests\Tenant\Auth\FloorManagementTest" classname="Tests.Tenant.Auth.FloorManagementTest" assertions="1" time="2.618948"/>
        <testcase name="can regenerate a QR Code if user is not maintenance manager from the floor with data set &quot;('Provider', 403)&quot;" file="tests\Tenant\Auth\FloorManagementTest.php::can regenerate a QR Code if user is not maintenance manager from the floor with data set &quot;('Provider', 403)&quot;" class="Tests\Tenant\Auth\FloorManagementTest" classname="Tests.Tenant.Auth.FloorManagementTest" assertions="1" time="1.027552"/>
      </testsuite>
    </testsuite>
    <testsuite name="Tests\Tenant\Auth\ProviderManagementTest" file="tests\Tenant\Auth\ProviderManagementTest.php" tests="30" assertions="30" errors="0" failures="0" skipped="0" time="43.062965">
      <testsuite name="test access roles to providers index page" tests="3" assertions="3" errors="0" failures="0" skipped="0" time="4.242058">
        <testcase name="test access roles to providers index page with data set &quot;('Admin', 200)&quot;" file="tests\Tenant\Auth\ProviderManagementTest.php::test access roles to providers index page with data set &quot;('Admin', 200)&quot;" class="Tests\Tenant\Auth\ProviderManagementTest" classname="Tests.Tenant.Auth.ProviderManagementTest" assertions="1" time="1.579818"/>
        <testcase name="test access roles to providers index page with data set &quot;('Maintenance Manager', 200)&quot;" file="tests\Tenant\Auth\ProviderManagementTest.php::test access roles to providers index page with data set &quot;('Maintenance Manager', 200)&quot;" class="Tests\Tenant\Auth\ProviderManagementTest" classname="Tests.Tenant.Auth.ProviderManagementTest" assertions="1" time="1.361871"/>
        <testcase name="test access roles to providers index page with data set &quot;('Provider', 403)&quot;" file="tests\Tenant\Auth\ProviderManagementTest.php::test access roles to providers index page with data set &quot;('Provider', 403)&quot;" class="Tests\Tenant\Auth\ProviderManagementTest" classname="Tests.Tenant.Auth.ProviderManagementTest" assertions="1" time="1.300369"/>
      </testsuite>
      <testsuite name="test access roles to create provider page" tests="3" assertions="3" errors="0" failures="0" skipped="0" time="4.302286">
        <testcase name="test access roles to create provider page with data set &quot;('Admin', 200)&quot;" file="tests\Tenant\Auth\ProviderManagementTest.php::test access roles to create provider page with data set &quot;('Admin', 200)&quot;" class="Tests\Tenant\Auth\ProviderManagementTest" classname="Tests.Tenant.Auth.ProviderManagementTest" assertions="1" time="1.453540"/>
        <testcase name="test access roles to create provider page with data set &quot;('Maintenance Manager', 200)&quot;" file="tests\Tenant\Auth\ProviderManagementTest.php::test access roles to create provider page with data set &quot;('Maintenance Manager', 200)&quot;" class="Tests\Tenant\Auth\ProviderManagementTest" classname="Tests.Tenant.Auth.ProviderManagementTest" assertions="1" time="1.174156"/>
        <testcase name="test access roles to create provider page with data set &quot;('Provider', 403)&quot;" file="tests\Tenant\Auth\ProviderManagementTest.php::test access roles to create provider page with data set &quot;('Provider', 403)&quot;" class="Tests\Tenant\Auth\ProviderManagementTest" classname="Tests.Tenant.Auth.ProviderManagementTest" assertions="1" time="1.674590"/>
      </testsuite>
      <testsuite name="test access roles to view any provider page" tests="3" assertions="3" errors="0" failures="0" skipped="0" time="5.261232">
        <testcase name="test access roles to view any provider page with data set &quot;('Admin', 200)&quot;" file="tests\Tenant\Auth\ProviderManagementTest.php::test access roles to view any provider page with data set &quot;('Admin', 200)&quot;" class="Tests\Tenant\Auth\ProviderManagementTest" classname="Tests.Tenant.Auth.ProviderManagementTest" assertions="1" time="1.616719"/>
        <testcase name="test access roles to view any provider page with data set &quot;('Maintenance Manager', 200)&quot;" file="tests\Tenant\Auth\ProviderManagementTest.php::test access roles to view any provider page with data set &quot;('Maintenance Manager', 200)&quot;" class="Tests\Tenant\Auth\ProviderManagementTest" classname="Tests.Tenant.Auth.ProviderManagementTest" assertions="1" time="1.868022"/>
        <testcase name="test access roles to view any provider page with data set &quot;('Provider', 403)&quot;" file="tests\Tenant\Auth\ProviderManagementTest.php::test access roles to view any provider page with data set &quot;('Provider', 403)&quot;" class="Tests\Tenant\Auth\ProviderManagementTest" classname="Tests.Tenant.Auth.ProviderManagementTest" assertions="1" time="1.776491"/>
      </testsuite>
      <testsuite name="test access roles to store a provider" tests="3" assertions="3" errors="0" failures="0" skipped="0" time="3.924195">
        <testcase name="test access roles to store a provider with data set &quot;('Admin', 200)&quot;" file="tests\Tenant\Auth\ProviderManagementTest.php::test access roles to store a provider with data set &quot;('Admin', 200)&quot;" class="Tests\Tenant\Auth\ProviderManagementTest" classname="Tests.Tenant.Auth.ProviderManagementTest" assertions="1" time="1.426264"/>
        <testcase name="test access roles to store a provider with data set &quot;('Maintenance Manager', 200)&quot;" file="tests\Tenant\Auth\ProviderManagementTest.php::test access roles to store a provider with data set &quot;('Maintenance Manager', 200)&quot;" class="Tests\Tenant\Auth\ProviderManagementTest" classname="Tests.Tenant.Auth.ProviderManagementTest" assertions="1" time="1.288774"/>
        <testcase name="test access roles to store a provider with data set &quot;('Provider', 403)&quot;" file="tests\Tenant\Auth\ProviderManagementTest.php::test access roles to store a provider with data set &quot;('Provider', 403)&quot;" class="Tests\Tenant\Auth\ProviderManagementTest" classname="Tests.Tenant.Auth.ProviderManagementTest" assertions="1" time="1.209157"/>
      </testsuite>
      <testsuite name="test access roles to update any provider page" tests="3" assertions="3" errors="0" failures="0" skipped="0" time="3.939370">
        <testcase name="test access roles to update any provider page with data set &quot;('Admin', 200)&quot;" file="tests\Tenant\Auth\ProviderManagementTest.php::test access roles to update any provider page with data set &quot;('Admin', 200)&quot;" class="Tests\Tenant\Auth\ProviderManagementTest" classname="Tests.Tenant.Auth.ProviderManagementTest" assertions="1" time="1.300510"/>
        <testcase name="test access roles to update any provider page with data set &quot;('Maintenance Manager', 200)&quot;" file="tests\Tenant\Auth\ProviderManagementTest.php::test access roles to update any provider page with data set &quot;('Maintenance Manager', 200)&quot;" class="Tests\Tenant\Auth\ProviderManagementTest" classname="Tests.Tenant.Auth.ProviderManagementTest" assertions="1" time="1.406642"/>
        <testcase name="test access roles to update any provider page with data set &quot;('Provider', 403)&quot;" file="tests\Tenant\Auth\ProviderManagementTest.php::test access roles to update any provider page with data set &quot;('Provider', 403)&quot;" class="Tests\Tenant\Auth\ProviderManagementTest" classname="Tests.Tenant.Auth.ProviderManagementTest" assertions="1" time="1.232219"/>
      </testsuite>
      <testsuite name="test access roles to update a provider" tests="3" assertions="3" errors="0" failures="0" skipped="0" time="4.063306">
        <testcase name="test access roles to update a provider with data set &quot;('Admin', 200)&quot;" file="tests\Tenant\Auth\ProviderManagementTest.php::test access roles to update a provider with data set &quot;('Admin', 200)&quot;" class="Tests\Tenant\Auth\ProviderManagementTest" classname="Tests.Tenant.Auth.ProviderManagementTest" assertions="1" time="1.392870"/>
        <testcase name="test access roles to update a provider with data set &quot;('Maintenance Manager', 200)&quot;" file="tests\Tenant\Auth\ProviderManagementTest.php::test access roles to update a provider with data set &quot;('Maintenance Manager', 200)&quot;" class="Tests\Tenant\Auth\ProviderManagementTest" classname="Tests.Tenant.Auth.ProviderManagementTest" assertions="1" time="1.344827"/>
        <testcase name="test access roles to update a provider with data set &quot;('Provider', 403)&quot;" file="tests\Tenant\Auth\ProviderManagementTest.php::test access roles to update a provider with data set &quot;('Provider', 403)&quot;" class="Tests\Tenant\Auth\ProviderManagementTest" classname="Tests.Tenant.Auth.ProviderManagementTest" assertions="1" time="1.325608"/>
      </testsuite>
      <testsuite name="test access roles to provider page" tests="3" assertions="3" errors="0" failures="0" skipped="0" time="4.583813">
        <testcase name="test access roles to provider page with data set &quot;('Admin', 200)&quot;" file="tests\Tenant\Auth\ProviderManagementTest.php::test access roles to provider page with data set &quot;('Admin', 200)&quot;" class="Tests\Tenant\Auth\ProviderManagementTest" classname="Tests.Tenant.Auth.ProviderManagementTest" assertions="1" time="1.330598"/>
        <testcase name="test access roles to provider page with data set &quot;('Maintenance Manager', 200)&quot;" file="tests\Tenant\Auth\ProviderManagementTest.php::test access roles to provider page with data set &quot;('Maintenance Manager', 200)&quot;" class="Tests\Tenant\Auth\ProviderManagementTest" classname="Tests.Tenant.Auth.ProviderManagementTest" assertions="1" time="1.668354"/>
        <testcase name="test access roles to provider page with data set &quot;('Provider', 403)&quot;" file="tests\Tenant\Auth\ProviderManagementTest.php::test access roles to provider page with data set &quot;('Provider', 403)&quot;" class="Tests\Tenant\Auth\ProviderManagementTest" classname="Tests.Tenant.Auth.ProviderManagementTest" assertions="1" time="1.584860"/>
      </testsuite>
      <testsuite name="test access roles to delete any provider" tests="3" assertions="3" errors="0" failures="0" skipped="0" time="4.807856">
        <testcase name="test access roles to delete any provider with data set &quot;('Admin', 200)&quot;" file="tests\Tenant\Auth\ProviderManagementTest.php::test access roles to delete any provider with data set &quot;('Admin', 200)&quot;" class="Tests\Tenant\Auth\ProviderManagementTest" classname="Tests.Tenant.Auth.ProviderManagementTest" assertions="1" time="1.665810"/>
        <testcase name="test access roles to delete any provider with data set &quot;('Maintenance Manager', 403)&quot;" file="tests\Tenant\Auth\ProviderManagementTest.php::test access roles to delete any provider with data set &quot;('Maintenance Manager', 403)&quot;" class="Tests\Tenant\Auth\ProviderManagementTest" classname="Tests.Tenant.Auth.ProviderManagementTest" assertions="1" time="1.769496"/>
        <testcase name="test access roles to delete any provider with data set &quot;('Provider', 403)&quot;" file="tests\Tenant\Auth\ProviderManagementTest.php::test access roles to delete any provider with data set &quot;('Provider', 403)&quot;" class="Tests\Tenant\Auth\ProviderManagementTest" classname="Tests.Tenant.Auth.ProviderManagementTest" assertions="1" time="1.372550"/>
      </testsuite>
      <testsuite name="test access roles to post a new logo to a provider" tests="3" assertions="3" errors="0" failures="0" skipped="0" time="4.203300">
        <testcase name="test access roles to post a new logo to a provider with data set &quot;('Admin', 200)&quot;" file="tests\Tenant\Auth\ProviderManagementTest.php::test access roles to post a new logo to a provider with data set &quot;('Admin', 200)&quot;" class="Tests\Tenant\Auth\ProviderManagementTest" classname="Tests.Tenant.Auth.ProviderManagementTest" assertions="1" time="1.367993"/>
        <testcase name="test access roles to post a new logo to a provider with data set &quot;('Maintenance Manager', 200)&quot;" file="tests\Tenant\Auth\ProviderManagementTest.php::test access roles to post a new logo to a provider with data set &quot;('Maintenance Manager', 200)&quot;" class="Tests\Tenant\Auth\ProviderManagementTest" classname="Tests.Tenant.Auth.ProviderManagementTest" assertions="1" time="1.416039"/>
        <testcase name="test access roles to post a new logo to a provider with data set &quot;('Provider', 403)&quot;" file="tests\Tenant\Auth\ProviderManagementTest.php::test access roles to post a new logo to a provider with data set &quot;('Provider', 403)&quot;" class="Tests\Tenant\Auth\ProviderManagementTest" classname="Tests.Tenant.Auth.ProviderManagementTest" assertions="1" time="1.419268"/>
      </testsuite>
      <testsuite name="test access roles to delete a logo of a provider" tests="3" assertions="3" errors="0" failures="0" skipped="0" time="3.735547">
        <testcase name="test access roles to delete a logo of a provider with data set &quot;('Admin', 200)&quot;" file="tests\Tenant\Auth\ProviderManagementTest.php::test access roles to delete a logo of a provider with data set &quot;('Admin', 200)&quot;" class="Tests\Tenant\Auth\ProviderManagementTest" classname="Tests.Tenant.Auth.ProviderManagementTest" assertions="1" time="1.377558"/>
        <testcase name="test access roles to delete a logo of a provider with data set &quot;('Maintenance Manager', 200)&quot;" file="tests\Tenant\Auth\ProviderManagementTest.php::test access roles to delete a logo of a provider with data set &quot;('Maintenance Manager', 200)&quot;" class="Tests\Tenant\Auth\ProviderManagementTest" classname="Tests.Tenant.Auth.ProviderManagementTest" assertions="1" time="1.243789"/>
        <testcase name="test access roles to delete a logo of a provider with data set &quot;('Provider', 403)&quot;" file="tests\Tenant\Auth\ProviderManagementTest.php::test access roles to delete a logo of a provider with data set &quot;('Provider', 403)&quot;" class="Tests\Tenant\Auth\ProviderManagementTest" classname="Tests.Tenant.Auth.ProviderManagementTest" assertions="1" time="1.114200"/>
      </testsuite>
    </testsuite>
    <testsuite name="Tests\Tenant\Auth\RoomManagementTest" file="tests\Tenant\Auth\RoomManagementTest.php" tests="36" assertions="36" errors="0" failures="0" skipped="0" time="47.100238">
      <testsuite name="test access roles to room index page" tests="3" assertions="3" errors="0" failures="0" skipped="0" time="4.112132">
        <testcase name="test access roles to room index page with data set &quot;('Admin', 200)&quot;" file="tests\Tenant\Auth\RoomManagementTest.php::test access roles to room index page with data set &quot;('Admin', 200)&quot;" class="Tests\Tenant\Auth\RoomManagementTest" classname="Tests.Tenant.Auth.RoomManagementTest" assertions="1" time="1.528511"/>
        <testcase name="test access roles to room index page with data set &quot;('Maintenance Manager', 403)&quot;" file="tests\Tenant\Auth\RoomManagementTest.php::test access roles to room index page with data set &quot;('Maintenance Manager', 403)&quot;" class="Tests\Tenant\Auth\RoomManagementTest" classname="Tests.Tenant.Auth.RoomManagementTest" assertions="1" time="1.376523"/>
        <testcase name="test access roles to room index page with data set &quot;('Provider', 403)&quot;" file="tests\Tenant\Auth\RoomManagementTest.php::test access roles to room index page with data set &quot;('Provider', 403)&quot;" class="Tests\Tenant\Auth\RoomManagementTest" classname="Tests.Tenant.Auth.RoomManagementTest" assertions="1" time="1.207098"/>
      </testsuite>
      <testsuite name="test access roles to create room page" tests="3" assertions="3" errors="0" failures="0" skipped="0" time="3.261157">
        <testcase name="test access roles to create room page with data set &quot;('Admin', 200)&quot;" file="tests\Tenant\Auth\RoomManagementTest.php::test access roles to create room page with data set &quot;('Admin', 200)&quot;" class="Tests\Tenant\Auth\RoomManagementTest" classname="Tests.Tenant.Auth.RoomManagementTest" assertions="1" time="1.165520"/>
        <testcase name="test access roles to create room page with data set &quot;('Maintenance Manager', 403)&quot;" file="tests\Tenant\Auth\RoomManagementTest.php::test access roles to create room page with data set &quot;('Maintenance Manager', 403)&quot;" class="Tests\Tenant\Auth\RoomManagementTest" classname="Tests.Tenant.Auth.RoomManagementTest" assertions="1" time="0.998179"/>
        <testcase name="test access roles to create room page with data set &quot;('Provider', 403)&quot;" file="tests\Tenant\Auth\RoomManagementTest.php::test access roles to create room page with data set &quot;('Provider', 403)&quot;" class="Tests\Tenant\Auth\RoomManagementTest" classname="Tests.Tenant.Auth.RoomManagementTest" assertions="1" time="1.097459"/>
      </testsuite>
      <testsuite name="test access roles to view any room page" tests="3" assertions="3" errors="0" failures="0" skipped="0" time="3.453393">
        <testcase name="test access roles to view any room page with data set &quot;('Admin', 200)&quot;" file="tests\Tenant\Auth\RoomManagementTest.php::test access roles to view any room page with data set &quot;('Admin', 200)&quot;" class="Tests\Tenant\Auth\RoomManagementTest" classname="Tests.Tenant.Auth.RoomManagementTest" assertions="1" time="1.099845"/>
        <testcase name="test access roles to view any room page with data set &quot;('Maintenance Manager', 403)&quot;" file="tests\Tenant\Auth\RoomManagementTest.php::test access roles to view any room page with data set &quot;('Maintenance Manager', 403)&quot;" class="Tests\Tenant\Auth\RoomManagementTest" classname="Tests.Tenant.Auth.RoomManagementTest" assertions="1" time="1.190381"/>
        <testcase name="test access roles to view any room page with data set &quot;('Provider', 403)&quot;" file="tests\Tenant\Auth\RoomManagementTest.php::test access roles to view any room page with data set &quot;('Provider', 403)&quot;" class="Tests\Tenant\Auth\RoomManagementTest" classname="Tests.Tenant.Auth.RoomManagementTest" assertions="1" time="1.163168"/>
      </testsuite>
      <testsuite name="test access roles to view room with maintenance manager page" tests="3" assertions="3" errors="0" failures="0" skipped="0" time="3.803664">
        <testcase name="test access roles to view room with maintenance manager page with data set &quot;('Admin', 200)&quot;" file="tests\Tenant\Auth\RoomManagementTest.php::test access roles to view room with maintenance manager page with data set &quot;('Admin', 200)&quot;" class="Tests\Tenant\Auth\RoomManagementTest" classname="Tests.Tenant.Auth.RoomManagementTest" assertions="1" time="1.356789"/>
        <testcase name="test access roles to view room with maintenance manager page with data set &quot;('Maintenance Manager', 200)&quot;" file="tests\Tenant\Auth\RoomManagementTest.php::test access roles to view room with maintenance manager page with data set &quot;('Maintenance Manager', 200)&quot;" class="Tests\Tenant\Auth\RoomManagementTest" classname="Tests.Tenant.Auth.RoomManagementTest" assertions="1" time="1.225065"/>
        <testcase name="test access roles to view room with maintenance manager page with data set &quot;('Provider', 403)&quot;" file="tests\Tenant\Auth\RoomManagementTest.php::test access roles to view room with maintenance manager page with data set &quot;('Provider', 403)&quot;" class="Tests\Tenant\Auth\RoomManagementTest" classname="Tests.Tenant.Auth.RoomManagementTest" assertions="1" time="1.221810"/>
      </testsuite>
      <testsuite name="test access roles to store a room" tests="3" assertions="3" errors="0" failures="0" skipped="0" time="3.776889">
        <testcase name="test access roles to store a room with data set &quot;('Admin', 200)&quot;" file="tests\Tenant\Auth\RoomManagementTest.php::test access roles to store a room with data set &quot;('Admin', 200)&quot;" class="Tests\Tenant\Auth\RoomManagementTest" classname="Tests.Tenant.Auth.RoomManagementTest" assertions="1" time="1.412709"/>
        <testcase name="test access roles to store a room with data set &quot;('Maintenance Manager', 403)&quot;" file="tests\Tenant\Auth\RoomManagementTest.php::test access roles to store a room with data set &quot;('Maintenance Manager', 403)&quot;" class="Tests\Tenant\Auth\RoomManagementTest" classname="Tests.Tenant.Auth.RoomManagementTest" assertions="1" time="1.131335"/>
        <testcase name="test access roles to store a room with data set &quot;('Provider', 403)&quot;" file="tests\Tenant\Auth\RoomManagementTest.php::test access roles to store a room with data set &quot;('Provider', 403)&quot;" class="Tests\Tenant\Auth\RoomManagementTest" classname="Tests.Tenant.Auth.RoomManagementTest" assertions="1" time="1.232845"/>
      </testsuite>
      <testsuite name="test access roles to update any asset page" tests="3" assertions="3" errors="0" failures="0" skipped="0" time="3.299660">
        <testcase name="test access roles to update any asset page with data set &quot;('Admin', 200)&quot;" file="tests\Tenant\Auth\RoomManagementTest.php::test access roles to update any asset page with data set &quot;('Admin', 200)&quot;" class="Tests\Tenant\Auth\RoomManagementTest" classname="Tests.Tenant.Auth.RoomManagementTest" assertions="1" time="1.139219"/>
        <testcase name="test access roles to update any asset page with data set &quot;('Maintenance Manager', 403)&quot;" file="tests\Tenant\Auth\RoomManagementTest.php::test access roles to update any asset page with data set &quot;('Maintenance Manager', 403)&quot;" class="Tests\Tenant\Auth\RoomManagementTest" classname="Tests.Tenant.Auth.RoomManagementTest" assertions="1" time="1.050955"/>
        <testcase name="test access roles to update any asset page with data set &quot;('Provider', 403)&quot;" file="tests\Tenant\Auth\RoomManagementTest.php::test access roles to update any asset page with data set &quot;('Provider', 403)&quot;" class="Tests\Tenant\Auth\RoomManagementTest" classname="Tests.Tenant.Auth.RoomManagementTest" assertions="1" time="1.109486"/>
      </testsuite>
      <testsuite name="test access roles to update room with maintenance manager page" tests="3" assertions="3" errors="0" failures="0" skipped="0" time="3.618515">
        <testcase name="test access roles to update room with maintenance manager page with data set &quot;('Admin', 200)&quot;" file="tests\Tenant\Auth\RoomManagementTest.php::test access roles to update room with maintenance manager page with data set &quot;('Admin', 200)&quot;" class="Tests\Tenant\Auth\RoomManagementTest" classname="Tests.Tenant.Auth.RoomManagementTest" assertions="1" time="1.298597"/>
        <testcase name="test access roles to update room with maintenance manager page with data set &quot;('Maintenance Manager', 200)&quot;" file="tests\Tenant\Auth\RoomManagementTest.php::test access roles to update room with maintenance manager page with data set &quot;('Maintenance Manager', 200)&quot;" class="Tests\Tenant\Auth\RoomManagementTest" classname="Tests.Tenant.Auth.RoomManagementTest" assertions="1" time="1.229273"/>
        <testcase name="test access roles to update room with maintenance manager page with data set &quot;('Provider', 403)&quot;" file="tests\Tenant\Auth\RoomManagementTest.php::test access roles to update room with maintenance manager page with data set &quot;('Provider', 403)&quot;" class="Tests\Tenant\Auth\RoomManagementTest" classname="Tests.Tenant.Auth.RoomManagementTest" assertions="1" time="1.090645"/>
      </testsuite>
      <testsuite name="test access roles to update room with maintenance manager" tests="3" assertions="3" errors="0" failures="0" skipped="0" time="3.513340">
        <testcase name="test access roles to update room with maintenance manager with data set &quot;('Admin', 200)&quot;" file="tests\Tenant\Auth\RoomManagementTest.php::test access roles to update room with maintenance manager with data set &quot;('Admin', 200)&quot;" class="Tests\Tenant\Auth\RoomManagementTest" classname="Tests.Tenant.Auth.RoomManagementTest" assertions="1" time="1.012043"/>
        <testcase name="test access roles to update room with maintenance manager with data set &quot;('Maintenance Manager', 200)&quot;" file="tests\Tenant\Auth\RoomManagementTest.php::test access roles to update room with maintenance manager with data set &quot;('Maintenance Manager', 200)&quot;" class="Tests\Tenant\Auth\RoomManagementTest" classname="Tests.Tenant.Auth.RoomManagementTest" assertions="1" time="1.200107"/>
        <testcase name="test access roles to update room with maintenance manager with data set &quot;('Provider', 403)&quot;" file="tests\Tenant\Auth\RoomManagementTest.php::test access roles to update room with maintenance manager with data set &quot;('Provider', 403)&quot;" class="Tests\Tenant\Auth\RoomManagementTest" classname="Tests.Tenant.Auth.RoomManagementTest" assertions="1" time="1.301190"/>
      </testsuite>
      <testsuite name="test access roles to delete any room" tests="3" assertions="3" errors="0" failures="0" skipped="0" time="3.313016">
        <testcase name="test access roles to delete any room with data set &quot;('Admin', 200)&quot;" file="tests\Tenant\Auth\RoomManagementTest.php::test access roles to delete any room with data set &quot;('Admin', 200)&quot;" class="Tests\Tenant\Auth\RoomManagementTest" classname="Tests.Tenant.Auth.RoomManagementTest" assertions="1" time="1.149796"/>
        <testcase name="test access roles to delete any room with data set &quot;('Maintenance Manager', 403)&quot;" file="tests\Tenant\Auth\RoomManagementTest.php::test access roles to delete any room with data set &quot;('Maintenance Manager', 403)&quot;" class="Tests\Tenant\Auth\RoomManagementTest" classname="Tests.Tenant.Auth.RoomManagementTest" assertions="1" time="1.096883"/>
        <testcase name="test access roles to delete any room with data set &quot;('Provider', 403)&quot;" file="tests\Tenant\Auth\RoomManagementTest.php::test access roles to delete any room with data set &quot;('Provider', 403)&quot;" class="Tests\Tenant\Auth\RoomManagementTest" classname="Tests.Tenant.Auth.RoomManagementTest" assertions="1" time="1.066337"/>
      </testsuite>
      <testsuite name="test access roles to delete room with maintenance manager" tests="3" assertions="3" errors="0" failures="0" skipped="0" time="3.186985">
        <testcase name="test access roles to delete room with maintenance manager with data set &quot;('Admin', 200)&quot;" file="tests\Tenant\Auth\RoomManagementTest.php::test access roles to delete room with maintenance manager with data set &quot;('Admin', 200)&quot;" class="Tests\Tenant\Auth\RoomManagementTest" classname="Tests.Tenant.Auth.RoomManagementTest" assertions="1" time="1.056156"/>
        <testcase name="test access roles to delete room with maintenance manager with data set &quot;('Maintenance Manager', 403)&quot;" file="tests\Tenant\Auth\RoomManagementTest.php::test access roles to delete room with maintenance manager with data set &quot;('Maintenance Manager', 403)&quot;" class="Tests\Tenant\Auth\RoomManagementTest" classname="Tests.Tenant.Auth.RoomManagementTest" assertions="1" time="1.099451"/>
        <testcase name="test access roles to delete room with maintenance manager with data set &quot;('Provider', 403)&quot;" file="tests\Tenant\Auth\RoomManagementTest.php::test access roles to delete room with maintenance manager with data set &quot;('Provider', 403)&quot;" class="Tests\Tenant\Auth\RoomManagementTest" classname="Tests.Tenant.Auth.RoomManagementTest" assertions="1" time="1.031378"/>
      </testsuite>
      <testsuite name="cannot regenerate a QR Code if user is not maintenance manager from the room" tests="3" assertions="3" errors="0" failures="0" skipped="0" time="4.861748">
        <testcase name="cannot regenerate a QR Code if user is not maintenance manager from the room with data set &quot;('Admin', 200)&quot;" file="tests\Tenant\Auth\RoomManagementTest.php::cannot regenerate a QR Code if user is not maintenance manager from the room with data set &quot;('Admin', 200)&quot;" class="Tests\Tenant\Auth\RoomManagementTest" classname="Tests.Tenant.Auth.RoomManagementTest" assertions="1" time="2.188731"/>
        <testcase name="cannot regenerate a QR Code if user is not maintenance manager from the room with data set &quot;('Maintenance Manager', 403)&quot;" file="tests\Tenant\Auth\RoomManagementTest.php::cannot regenerate a QR Code if user is not maintenance manager from the room with data set &quot;('Maintenance Manager', 403)&quot;" class="Tests\Tenant\Auth\RoomManagementTest" classname="Tests.Tenant.Auth.RoomManagementTest" assertions="1" time="1.435377"/>
        <testcase name="cannot regenerate a QR Code if user is not maintenance manager from the room with data set &quot;('Provider', 403)&quot;" file="tests\Tenant\Auth\RoomManagementTest.php::cannot regenerate a QR Code if user is not maintenance manager from the room with data set &quot;('Provider', 403)&quot;" class="Tests\Tenant\Auth\RoomManagementTest" classname="Tests.Tenant.Auth.RoomManagementTest" assertions="1" time="1.237640"/>
      </testsuite>
      <testsuite name="can regenerate a QR Code if user is not maintenance manager from the room" tests="3" assertions="3" errors="0" failures="0" skipped="0" time="6.899739">
        <testcase name="can regenerate a QR Code if user is not maintenance manager from the room with data set &quot;('Admin', 200)&quot;" file="tests\Tenant\Auth\RoomManagementTest.php::can regenerate a QR Code if user is not maintenance manager from the room with data set &quot;('Admin', 200)&quot;" class="Tests\Tenant\Auth\RoomManagementTest" classname="Tests.Tenant.Auth.RoomManagementTest" assertions="1" time="2.737169"/>
        <testcase name="can regenerate a QR Code if user is not maintenance manager from the room with data set &quot;('Maintenance Manager', 200)&quot;" file="tests\Tenant\Auth\RoomManagementTest.php::can regenerate a QR Code if user is not maintenance manager from the room with data set &quot;('Maintenance Manager', 200)&quot;" class="Tests\Tenant\Auth\RoomManagementTest" classname="Tests.Tenant.Auth.RoomManagementTest" assertions="1" time="3.027358"/>
        <testcase name="can regenerate a QR Code if user is not maintenance manager from the room with data set &quot;('Provider', 403)&quot;" file="tests\Tenant\Auth\RoomManagementTest.php::can regenerate a QR Code if user is not maintenance manager from the room with data set &quot;('Provider', 403)&quot;" class="Tests\Tenant\Auth\RoomManagementTest" classname="Tests.Tenant.Auth.RoomManagementTest" assertions="1" time="1.135211"/>
      </testsuite>
    </testsuite>
    <testsuite name="Tests\Tenant\Auth\SiteManagementTest" file="tests\Tenant\Auth\SiteManagementTest.php" tests="36" assertions="36" errors="0" failures="0" skipped="0" time="45.477686">
      <testsuite name="test access roles to sites index page" tests="3" assertions="3" errors="0" failures="0" skipped="0" time="4.136533">
        <testcase name="test access roles to sites index page with data set &quot;('Admin', 200)&quot;" file="tests\Tenant\Auth\SiteManagementTest.php::test access roles to sites index page with data set &quot;('Admin', 200)&quot;" class="Tests\Tenant\Auth\SiteManagementTest" classname="Tests.Tenant.Auth.SiteManagementTest" assertions="1" time="1.723787"/>
        <testcase name="test access roles to sites index page with data set &quot;('Maintenance Manager', 403)&quot;" file="tests\Tenant\Auth\SiteManagementTest.php::test access roles to sites index page with data set &quot;('Maintenance Manager', 403)&quot;" class="Tests\Tenant\Auth\SiteManagementTest" classname="Tests.Tenant.Auth.SiteManagementTest" assertions="1" time="1.154041"/>
        <testcase name="test access roles to sites index page with data set &quot;('Provider', 403)&quot;" file="tests\Tenant\Auth\SiteManagementTest.php::test access roles to sites index page with data set &quot;('Provider', 403)&quot;" class="Tests\Tenant\Auth\SiteManagementTest" classname="Tests.Tenant.Auth.SiteManagementTest" assertions="1" time="1.258705"/>
      </testsuite>
      <testsuite name="test access roles to create site page" tests="3" assertions="3" errors="0" failures="0" skipped="0" time="3.613560">
        <testcase name="test access roles to create site page with data set &quot;('Admin', 200)&quot;" file="tests\Tenant\Auth\SiteManagementTest.php::test access roles to create site page with data set &quot;('Admin', 200)&quot;" class="Tests\Tenant\Auth\SiteManagementTest" classname="Tests.Tenant.Auth.SiteManagementTest" assertions="1" time="1.116266"/>
        <testcase name="test access roles to create site page with data set &quot;('Maintenance Manager', 403)&quot;" file="tests\Tenant\Auth\SiteManagementTest.php::test access roles to create site page with data set &quot;('Maintenance Manager', 403)&quot;" class="Tests\Tenant\Auth\SiteManagementTest" classname="Tests.Tenant.Auth.SiteManagementTest" assertions="1" time="1.180559"/>
        <testcase name="test access roles to create site page with data set &quot;('Provider', 403)&quot;" file="tests\Tenant\Auth\SiteManagementTest.php::test access roles to create site page with data set &quot;('Provider', 403)&quot;" class="Tests\Tenant\Auth\SiteManagementTest" classname="Tests.Tenant.Auth.SiteManagementTest" assertions="1" time="1.316736"/>
      </testsuite>
      <testsuite name="test access roles to view any site page" tests="3" assertions="3" errors="0" failures="0" skipped="0" time="3.371755">
        <testcase name="test access roles to view any site page with data set &quot;('Admin', 200)&quot;" file="tests\Tenant\Auth\SiteManagementTest.php::test access roles to view any site page with data set &quot;('Admin', 200)&quot;" class="Tests\Tenant\Auth\SiteManagementTest" classname="Tests.Tenant.Auth.SiteManagementTest" assertions="1" time="1.009630"/>
        <testcase name="test access roles to view any site page with data set &quot;('Maintenance Manager', 403)&quot;" file="tests\Tenant\Auth\SiteManagementTest.php::test access roles to view any site page with data set &quot;('Maintenance Manager', 403)&quot;" class="Tests\Tenant\Auth\SiteManagementTest" classname="Tests.Tenant.Auth.SiteManagementTest" assertions="1" time="1.047789"/>
        <testcase name="test access roles to view any site page with data set &quot;('Provider', 403)&quot;" file="tests\Tenant\Auth\SiteManagementTest.php::test access roles to view any site page with data set &quot;('Provider', 403)&quot;" class="Tests\Tenant\Auth\SiteManagementTest" classname="Tests.Tenant.Auth.SiteManagementTest" assertions="1" time="1.314337"/>
      </testsuite>
      <testsuite name="test access roles to view site with maintenance manager page" tests="3" assertions="3" errors="0" failures="0" skipped="0" time="4.177604">
        <testcase name="test access roles to view site with maintenance manager page with data set &quot;('Admin', 200)&quot;" file="tests\Tenant\Auth\SiteManagementTest.php::test access roles to view site with maintenance manager page with data set &quot;('Admin', 200)&quot;" class="Tests\Tenant\Auth\SiteManagementTest" classname="Tests.Tenant.Auth.SiteManagementTest" assertions="1" time="1.315022"/>
        <testcase name="test access roles to view site with maintenance manager page with data set &quot;('Maintenance Manager', 200)&quot;" file="tests\Tenant\Auth\SiteManagementTest.php::test access roles to view site with maintenance manager page with data set &quot;('Maintenance Manager', 200)&quot;" class="Tests\Tenant\Auth\SiteManagementTest" classname="Tests.Tenant.Auth.SiteManagementTest" assertions="1" time="1.341591"/>
        <testcase name="test access roles to view site with maintenance manager page with data set &quot;('Provider', 403)&quot;" file="tests\Tenant\Auth\SiteManagementTest.php::test access roles to view site with maintenance manager page with data set &quot;('Provider', 403)&quot;" class="Tests\Tenant\Auth\SiteManagementTest" classname="Tests.Tenant.Auth.SiteManagementTest" assertions="1" time="1.520991"/>
      </testsuite>
      <testsuite name="test access roles to store a site" tests="3" assertions="3" errors="0" failures="0" skipped="0" time="3.720552">
        <testcase name="test access roles to store a site with data set &quot;('Admin', 200)&quot;" file="tests\Tenant\Auth\SiteManagementTest.php::test access roles to store a site with data set &quot;('Admin', 200)&quot;" class="Tests\Tenant\Auth\SiteManagementTest" classname="Tests.Tenant.Auth.SiteManagementTest" assertions="1" time="1.271262"/>
        <testcase name="test access roles to store a site with data set &quot;('Maintenance Manager', 403)&quot;" file="tests\Tenant\Auth\SiteManagementTest.php::test access roles to store a site with data set &quot;('Maintenance Manager', 403)&quot;" class="Tests\Tenant\Auth\SiteManagementTest" classname="Tests.Tenant.Auth.SiteManagementTest" assertions="1" time="1.215105"/>
        <testcase name="test access roles to store a site with data set &quot;('Provider', 403)&quot;" file="tests\Tenant\Auth\SiteManagementTest.php::test access roles to store a site with data set &quot;('Provider', 403)&quot;" class="Tests\Tenant\Auth\SiteManagementTest" classname="Tests.Tenant.Auth.SiteManagementTest" assertions="1" time="1.234186"/>
      </testsuite>
      <testsuite name="test access roles to update any asset page" tests="3" assertions="3" errors="0" failures="0" skipped="0" time="3.500517">
        <testcase name="test access roles to update any asset page with data set &quot;('Admin', 200)&quot;" file="tests\Tenant\Auth\SiteManagementTest.php::test access roles to update any asset page with data set &quot;('Admin', 200)&quot;" class="Tests\Tenant\Auth\SiteManagementTest" classname="Tests.Tenant.Auth.SiteManagementTest" assertions="1" time="1.155435"/>
        <testcase name="test access roles to update any asset page with data set &quot;('Maintenance Manager', 403)&quot;" file="tests\Tenant\Auth\SiteManagementTest.php::test access roles to update any asset page with data set &quot;('Maintenance Manager', 403)&quot;" class="Tests\Tenant\Auth\SiteManagementTest" classname="Tests.Tenant.Auth.SiteManagementTest" assertions="1" time="1.195469"/>
        <testcase name="test access roles to update any asset page with data set &quot;('Provider', 403)&quot;" file="tests\Tenant\Auth\SiteManagementTest.php::test access roles to update any asset page with data set &quot;('Provider', 403)&quot;" class="Tests\Tenant\Auth\SiteManagementTest" classname="Tests.Tenant.Auth.SiteManagementTest" assertions="1" time="1.149613"/>
      </testsuite>
      <testsuite name="test access roles to update site with maintenance manager page" tests="3" assertions="3" errors="0" failures="0" skipped="0" time="3.241205">
        <testcase name="test access roles to update site with maintenance manager page with data set &quot;('Admin', 200)&quot;" file="tests\Tenant\Auth\SiteManagementTest.php::test access roles to update site with maintenance manager page with data set &quot;('Admin', 200)&quot;" class="Tests\Tenant\Auth\SiteManagementTest" classname="Tests.Tenant.Auth.SiteManagementTest" assertions="1" time="0.981919"/>
        <testcase name="test access roles to update site with maintenance manager page with data set &quot;('Maintenance Manager', 200)&quot;" file="tests\Tenant\Auth\SiteManagementTest.php::test access roles to update site with maintenance manager page with data set &quot;('Maintenance Manager', 200)&quot;" class="Tests\Tenant\Auth\SiteManagementTest" classname="Tests.Tenant.Auth.SiteManagementTest" assertions="1" time="1.074641"/>
        <testcase name="test access roles to update site with maintenance manager page with data set &quot;('Provider', 403)&quot;" file="tests\Tenant\Auth\SiteManagementTest.php::test access roles to update site with maintenance manager page with data set &quot;('Provider', 403)&quot;" class="Tests\Tenant\Auth\SiteManagementTest" classname="Tests.Tenant.Auth.SiteManagementTest" assertions="1" time="1.184645"/>
      </testsuite>
      <testsuite name="test access roles to update site with maintenance manager" tests="3" assertions="3" errors="0" failures="0" skipped="0" time="3.340042">
        <testcase name="test access roles to update site with maintenance manager with data set &quot;('Admin', 200)&quot;" file="tests\Tenant\Auth\SiteManagementTest.php::test access roles to update site with maintenance manager with data set &quot;('Admin', 200)&quot;" class="Tests\Tenant\Auth\SiteManagementTest" classname="Tests.Tenant.Auth.SiteManagementTest" assertions="1" time="1.103167"/>
        <testcase name="test access roles to update site with maintenance manager with data set &quot;('Maintenance Manager', 200)&quot;" file="tests\Tenant\Auth\SiteManagementTest.php::test access roles to update site with maintenance manager with data set &quot;('Maintenance Manager', 200)&quot;" class="Tests\Tenant\Auth\SiteManagementTest" classname="Tests.Tenant.Auth.SiteManagementTest" assertions="1" time="1.226454"/>
        <testcase name="test access roles to update site with maintenance manager with data set &quot;('Provider', 403)&quot;" file="tests\Tenant\Auth\SiteManagementTest.php::test access roles to update site with maintenance manager with data set &quot;('Provider', 403)&quot;" class="Tests\Tenant\Auth\SiteManagementTest" classname="Tests.Tenant.Auth.SiteManagementTest" assertions="1" time="1.010420"/>
      </testsuite>
      <testsuite name="test access roles to delete any asset" tests="3" assertions="3" errors="0" failures="0" skipped="0" time="3.458972">
        <testcase name="test access roles to delete any asset with data set &quot;('Admin', 200)&quot;" file="tests\Tenant\Auth\SiteManagementTest.php::test access roles to delete any asset with data set &quot;('Admin', 200)&quot;" class="Tests\Tenant\Auth\SiteManagementTest" classname="Tests.Tenant.Auth.SiteManagementTest" assertions="1" time="1.131515"/>
        <testcase name="test access roles to delete any asset with data set &quot;('Maintenance Manager', 403)&quot;" file="tests\Tenant\Auth\SiteManagementTest.php::test access roles to delete any asset with data set &quot;('Maintenance Manager', 403)&quot;" class="Tests\Tenant\Auth\SiteManagementTest" classname="Tests.Tenant.Auth.SiteManagementTest" assertions="1" time="1.204410"/>
        <testcase name="test access roles to delete any asset with data set &quot;('Provider', 403)&quot;" file="tests\Tenant\Auth\SiteManagementTest.php::test access roles to delete any asset with data set &quot;('Provider', 403)&quot;" class="Tests\Tenant\Auth\SiteManagementTest" classname="Tests.Tenant.Auth.SiteManagementTest" assertions="1" time="1.123047"/>
      </testsuite>
      <testsuite name="test access roles to delete site with maintenance manager" tests="3" assertions="3" errors="0" failures="0" skipped="0" time="3.287861">
        <testcase name="test access roles to delete site with maintenance manager with data set &quot;('Admin', 200)&quot;" file="tests\Tenant\Auth\SiteManagementTest.php::test access roles to delete site with maintenance manager with data set &quot;('Admin', 200)&quot;" class="Tests\Tenant\Auth\SiteManagementTest" classname="Tests.Tenant.Auth.SiteManagementTest" assertions="1" time="0.981287"/>
        <testcase name="test access roles to delete site with maintenance manager with data set &quot;('Maintenance Manager', 403)&quot;" file="tests\Tenant\Auth\SiteManagementTest.php::test access roles to delete site with maintenance manager with data set &quot;('Maintenance Manager', 403)&quot;" class="Tests\Tenant\Auth\SiteManagementTest" classname="Tests.Tenant.Auth.SiteManagementTest" assertions="1" time="1.105480"/>
        <testcase name="test access roles to delete site with maintenance manager with data set &quot;('Provider', 403)&quot;" file="tests\Tenant\Auth\SiteManagementTest.php::test access roles to delete site with maintenance manager with data set &quot;('Provider', 403)&quot;" class="Tests\Tenant\Auth\SiteManagementTest" classname="Tests.Tenant.Auth.SiteManagementTest" assertions="1" time="1.201094"/>
      </testsuite>
      <testsuite name="cannot regenerate a QR Code if user is not maintenance manager from the site" tests="3" assertions="3" errors="0" failures="0" skipped="0" time="4.179701">
        <testcase name="cannot regenerate a QR Code if user is not maintenance manager from the site with data set &quot;('Admin', 200)&quot;" file="tests\Tenant\Auth\SiteManagementTest.php::cannot regenerate a QR Code if user is not maintenance manager from the site with data set &quot;('Admin', 200)&quot;" class="Tests\Tenant\Auth\SiteManagementTest" classname="Tests.Tenant.Auth.SiteManagementTest" assertions="1" time="2.175788"/>
        <testcase name="cannot regenerate a QR Code if user is not maintenance manager from the site with data set &quot;('Maintenance Manager', 403)&quot;" file="tests\Tenant\Auth\SiteManagementTest.php::cannot regenerate a QR Code if user is not maintenance manager from the site with data set &quot;('Maintenance Manager', 403)&quot;" class="Tests\Tenant\Auth\SiteManagementTest" classname="Tests.Tenant.Auth.SiteManagementTest" assertions="1" time="0.977775"/>
        <testcase name="cannot regenerate a QR Code if user is not maintenance manager from the site with data set &quot;('Provider', 403)&quot;" file="tests\Tenant\Auth\SiteManagementTest.php::cannot regenerate a QR Code if user is not maintenance manager from the site with data set &quot;('Provider', 403)&quot;" class="Tests\Tenant\Auth\SiteManagementTest" classname="Tests.Tenant.Auth.SiteManagementTest" assertions="1" time="1.026138"/>
      </testsuite>
      <testsuite name="can regenerate a QR Code if user is not maintenance manager from the site" tests="3" assertions="3" errors="0" failures="0" skipped="0" time="5.449383">
        <testcase name="can regenerate a QR Code if user is not maintenance manager from the site with data set &quot;('Admin', 200)&quot;" file="tests\Tenant\Auth\SiteManagementTest.php::can regenerate a QR Code if user is not maintenance manager from the site with data set &quot;('Admin', 200)&quot;" class="Tests\Tenant\Auth\SiteManagementTest" classname="Tests.Tenant.Auth.SiteManagementTest" assertions="1" time="1.932041"/>
        <testcase name="can regenerate a QR Code if user is not maintenance manager from the site with data set &quot;('Maintenance Manager', 200)&quot;" file="tests\Tenant\Auth\SiteManagementTest.php::can regenerate a QR Code if user is not maintenance manager from the site with data set &quot;('Maintenance Manager', 200)&quot;" class="Tests\Tenant\Auth\SiteManagementTest" classname="Tests.Tenant.Auth.SiteManagementTest" assertions="1" time="2.335305"/>
        <testcase name="can regenerate a QR Code if user is not maintenance manager from the site with data set &quot;('Provider', 403)&quot;" file="tests\Tenant\Auth\SiteManagementTest.php::can regenerate a QR Code if user is not maintenance manager from the site with data set &quot;('Provider', 403)&quot;" class="Tests\Tenant\Auth\SiteManagementTest" classname="Tests.Tenant.Auth.SiteManagementTest" assertions="1" time="1.182037"/>
      </testsuite>
    </testsuite>
    <testsuite name="Tests\Tenant\Auth\TicketManagementTest" file="tests\Tenant\Auth\TicketManagementTest.php" tests="42" assertions="42" errors="0" failures="0" skipped="0" time="56.594534">
      <testsuite name="test access roles to tickets index page" tests="2" assertions="2" errors="0" failures="0" skipped="0" time="3.337152">
        <testcase name="test access roles to tickets index page with data set &quot;('Admin', 200)&quot;" file="tests\Tenant\Auth\TicketManagementTest.php::test access roles to tickets index page with data set &quot;('Admin', 200)&quot;" class="Tests\Tenant\Auth\TicketManagementTest" classname="Tests.Tenant.Auth.TicketManagementTest" assertions="1" time="1.918320"/>
        <testcase name="test access roles to tickets index page with data set &quot;('Maintenance Manager', 403)&quot;" file="tests\Tenant\Auth\TicketManagementTest.php::test access roles to tickets index page with data set &quot;('Maintenance Manager', 403)&quot;" class="Tests\Tenant\Auth\TicketManagementTest" classname="Tests.Tenant.Auth.TicketManagementTest" assertions="1" time="1.418832"/>
      </testsuite>
      <testsuite name="test access roles to view tickets for an asset without maintenance manager" tests="3" assertions="3" errors="0" failures="0" skipped="0" time="3.803143">
        <testcase name="test access roles to view tickets for an asset without maintenance manager with data set &quot;('Admin', 200)&quot;" file="tests\Tenant\Auth\TicketManagementTest.php::test access roles to view tickets for an asset without maintenance manager with data set &quot;('Admin', 200)&quot;" class="Tests\Tenant\Auth\TicketManagementTest" classname="Tests.Tenant.Auth.TicketManagementTest" assertions="1" time="1.288958"/>
        <testcase name="test access roles to view tickets for an asset without maintenance manager with data set &quot;('Maintenance Manager', 403)&quot;" file="tests\Tenant\Auth\TicketManagementTest.php::test access roles to view tickets for an asset without maintenance manager with data set &quot;('Maintenance Manager', 403)&quot;" class="Tests\Tenant\Auth\TicketManagementTest" classname="Tests.Tenant.Auth.TicketManagementTest" assertions="1" time="1.285365"/>
        <testcase name="test access roles to view tickets for an asset without maintenance manager with data set &quot;('', 403)&quot;" file="tests\Tenant\Auth\TicketManagementTest.php::test access roles to view tickets for an asset without maintenance manager with data set &quot;('', 403)&quot;" class="Tests\Tenant\Auth\TicketManagementTest" classname="Tests.Tenant.Auth.TicketManagementTest" assertions="1" time="1.228820"/>
      </testsuite>
      <testsuite name="test access roles to view tickets for an asset with maintenance manager" tests="3" assertions="3" errors="0" failures="0" skipped="0" time="4.298853">
        <testcase name="test access roles to view tickets for an asset with maintenance manager with data set &quot;('Admin', 200)&quot;" file="tests\Tenant\Auth\TicketManagementTest.php::test access roles to view tickets for an asset with maintenance manager with data set &quot;('Admin', 200)&quot;" class="Tests\Tenant\Auth\TicketManagementTest" classname="Tests.Tenant.Auth.TicketManagementTest" assertions="1" time="1.394993"/>
        <testcase name="test access roles to view tickets for an asset with maintenance manager with data set &quot;('Maintenance Manager', 200)&quot;" file="tests\Tenant\Auth\TicketManagementTest.php::test access roles to view tickets for an asset with maintenance manager with data set &quot;('Maintenance Manager', 200)&quot;" class="Tests\Tenant\Auth\TicketManagementTest" classname="Tests.Tenant.Auth.TicketManagementTest" assertions="1" time="1.551273"/>
        <testcase name="test access roles to view tickets for an asset with maintenance manager with data set &quot;('', 403)&quot;" file="tests\Tenant\Auth\TicketManagementTest.php::test access roles to view tickets for an asset with maintenance manager with data set &quot;('', 403)&quot;" class="Tests\Tenant\Auth\TicketManagementTest" classname="Tests.Tenant.Auth.TicketManagementTest" assertions="1" time="1.352587"/>
      </testsuite>
      <testsuite name="test access roles to create tickets page for asset" tests="3" assertions="3" errors="0" failures="0" skipped="0" time="3.848289">
        <testcase name="test access roles to create tickets page for asset with data set &quot;('Admin', 200)&quot;" file="tests\Tenant\Auth\TicketManagementTest.php::test access roles to create tickets page for asset with data set &quot;('Admin', 200)&quot;" class="Tests\Tenant\Auth\TicketManagementTest" classname="Tests.Tenant.Auth.TicketManagementTest" assertions="1" time="1.264419"/>
        <testcase name="test access roles to create tickets page for asset with data set &quot;('Maintenance Manager', 200)&quot;" file="tests\Tenant\Auth\TicketManagementTest.php::test access roles to create tickets page for asset with data set &quot;('Maintenance Manager', 200)&quot;" class="Tests\Tenant\Auth\TicketManagementTest" classname="Tests.Tenant.Auth.TicketManagementTest" assertions="1" time="1.315794"/>
        <testcase name="test access roles to create tickets page for asset with data set &quot;('', 200)&quot;" file="tests\Tenant\Auth\TicketManagementTest.php::test access roles to create tickets page for asset with data set &quot;('', 200)&quot;" class="Tests\Tenant\Auth\TicketManagementTest" classname="Tests.Tenant.Auth.TicketManagementTest" assertions="1" time="1.268076"/>
      </testsuite>
      <testsuite name="test access roles to create tickets page for site" tests="3" assertions="3" errors="0" failures="0" skipped="0" time="3.609007">
        <testcase name="test access roles to create tickets page for site with data set &quot;('Admin', 200)&quot;" file="tests\Tenant\Auth\TicketManagementTest.php::test access roles to create tickets page for site with data set &quot;('Admin', 200)&quot;" class="Tests\Tenant\Auth\TicketManagementTest" classname="Tests.Tenant.Auth.TicketManagementTest" assertions="1" time="1.231304"/>
        <testcase name="test access roles to create tickets page for site with data set &quot;('Maintenance Manager', 200)&quot;" file="tests\Tenant\Auth\TicketManagementTest.php::test access roles to create tickets page for site with data set &quot;('Maintenance Manager', 200)&quot;" class="Tests\Tenant\Auth\TicketManagementTest" classname="Tests.Tenant.Auth.TicketManagementTest" assertions="1" time="1.221327"/>
        <testcase name="test access roles to create tickets page for site with data set &quot;('', 200)&quot;" file="tests\Tenant\Auth\TicketManagementTest.php::test access roles to create tickets page for site with data set &quot;('', 200)&quot;" class="Tests\Tenant\Auth\TicketManagementTest" classname="Tests.Tenant.Auth.TicketManagementTest" assertions="1" time="1.156377"/>
      </testsuite>
      <testsuite name="test access roles to create tickets page for building" tests="3" assertions="3" errors="0" failures="0" skipped="0" time="3.791812">
        <testcase name="test access roles to create tickets page for building with data set &quot;('Admin', 200)&quot;" file="tests\Tenant\Auth\TicketManagementTest.php::test access roles to create tickets page for building with data set &quot;('Admin', 200)&quot;" class="Tests\Tenant\Auth\TicketManagementTest" classname="Tests.Tenant.Auth.TicketManagementTest" assertions="1" time="1.100762"/>
        <testcase name="test access roles to create tickets page for building with data set &quot;('Maintenance Manager', 200)&quot;" file="tests\Tenant\Auth\TicketManagementTest.php::test access roles to create tickets page for building with data set &quot;('Maintenance Manager', 200)&quot;" class="Tests\Tenant\Auth\TicketManagementTest" classname="Tests.Tenant.Auth.TicketManagementTest" assertions="1" time="1.151275"/>
        <testcase name="test access roles to create tickets page for building with data set &quot;('', 200)&quot;" file="tests\Tenant\Auth\TicketManagementTest.php::test access roles to create tickets page for building with data set &quot;('', 200)&quot;" class="Tests\Tenant\Auth\TicketManagementTest" classname="Tests.Tenant.Auth.TicketManagementTest" assertions="1" time="1.539774"/>
      </testsuite>
      <testsuite name="test access roles to create tickets page for floor" tests="3" assertions="3" errors="0" failures="0" skipped="0" time="4.457716">
        <testcase name="test access roles to create tickets page for floor with data set &quot;('Admin', 200)&quot;" file="tests\Tenant\Auth\TicketManagementTest.php::test access roles to create tickets page for floor with data set &quot;('Admin', 200)&quot;" class="Tests\Tenant\Auth\TicketManagementTest" classname="Tests.Tenant.Auth.TicketManagementTest" assertions="1" time="1.728213"/>
        <testcase name="test access roles to create tickets page for floor with data set &quot;('Maintenance Manager', 200)&quot;" file="tests\Tenant\Auth\TicketManagementTest.php::test access roles to create tickets page for floor with data set &quot;('Maintenance Manager', 200)&quot;" class="Tests\Tenant\Auth\TicketManagementTest" classname="Tests.Tenant.Auth.TicketManagementTest" assertions="1" time="1.320395"/>
        <testcase name="test access roles to create tickets page for floor with data set &quot;('', 200)&quot;" file="tests\Tenant\Auth\TicketManagementTest.php::test access roles to create tickets page for floor with data set &quot;('', 200)&quot;" class="Tests\Tenant\Auth\TicketManagementTest" classname="Tests.Tenant.Auth.TicketManagementTest" assertions="1" time="1.409108"/>
      </testsuite>
      <testsuite name="test access roles to create tickets page for room" tests="4" assertions="4" errors="0" failures="0" skipped="0" time="5.045645">
        <testcase name="test access roles to create tickets page for room with data set &quot;('Admin', 200)&quot;" file="tests\Tenant\Auth\TicketManagementTest.php::test access roles to create tickets page for room with data set &quot;('Admin', 200)&quot;" class="Tests\Tenant\Auth\TicketManagementTest" classname="Tests.Tenant.Auth.TicketManagementTest" assertions="1" time="1.305899"/>
        <testcase name="test access roles to create tickets page for room with data set &quot;('Maintenance Manager', 200)&quot;" file="tests\Tenant\Auth\TicketManagementTest.php::test access roles to create tickets page for room with data set &quot;('Maintenance Manager', 200)&quot;" class="Tests\Tenant\Auth\TicketManagementTest" classname="Tests.Tenant.Auth.TicketManagementTest" assertions="1" time="1.279758"/>
        <testcase name="test access roles to create tickets page for room with data set &quot;('Provider', 200)&quot;" file="tests\Tenant\Auth\TicketManagementTest.php::test access roles to create tickets page for room with data set &quot;('Provider', 200)&quot;" class="Tests\Tenant\Auth\TicketManagementTest" classname="Tests.Tenant.Auth.TicketManagementTest" assertions="1" time="1.194389"/>
        <testcase name="test access roles to create tickets page for room with data set &quot;('', 200)&quot;" file="tests\Tenant\Auth\TicketManagementTest.php::test access roles to create tickets page for room with data set &quot;('', 200)&quot;" class="Tests\Tenant\Auth\TicketManagementTest" classname="Tests.Tenant.Auth.TicketManagementTest" assertions="1" time="1.265599"/>
      </testsuite>
      <testsuite name="test access roles to store a ticket" tests="3" assertions="3" errors="0" failures="0" skipped="0" time="3.814707">
        <testcase name="test access roles to store a ticket with data set &quot;('Admin', 200)&quot;" file="tests\Tenant\Auth\TicketManagementTest.php::test access roles to store a ticket with data set &quot;('Admin', 200)&quot;" class="Tests\Tenant\Auth\TicketManagementTest" classname="Tests.Tenant.Auth.TicketManagementTest" assertions="1" time="1.379429"/>
        <testcase name="test access roles to store a ticket with data set &quot;('Maintenance Manager', 200)&quot;" file="tests\Tenant\Auth\TicketManagementTest.php::test access roles to store a ticket with data set &quot;('Maintenance Manager', 200)&quot;" class="Tests\Tenant\Auth\TicketManagementTest" classname="Tests.Tenant.Auth.TicketManagementTest" assertions="1" time="1.301827"/>
        <testcase name="test access roles to store a ticket with data set &quot;('', 200)&quot;" file="tests\Tenant\Auth\TicketManagementTest.php::test access roles to store a ticket with data set &quot;('', 200)&quot;" class="Tests\Tenant\Auth\TicketManagementTest" classname="Tests.Tenant.Auth.TicketManagementTest" assertions="1" time="1.133451"/>
      </testsuite>
      <testsuite name="test access roles to update any ticket" tests="3" assertions="3" errors="0" failures="0" skipped="0" time="4.749365">
        <testcase name="test access roles to update any ticket with data set &quot;('Admin', 200)&quot;" file="tests\Tenant\Auth\TicketManagementTest.php::test access roles to update any ticket with data set &quot;('Admin', 200)&quot;" class="Tests\Tenant\Auth\TicketManagementTest" classname="Tests.Tenant.Auth.TicketManagementTest" assertions="1" time="1.327755"/>
        <testcase name="test access roles to update any ticket with data set &quot;('Maintenance Manager', 403)&quot;" file="tests\Tenant\Auth\TicketManagementTest.php::test access roles to update any ticket with data set &quot;('Maintenance Manager', 403)&quot;" class="Tests\Tenant\Auth\TicketManagementTest" classname="Tests.Tenant.Auth.TicketManagementTest" assertions="1" time="1.816696"/>
        <testcase name="test access roles to update any ticket with data set &quot;('', 403)&quot;" file="tests\Tenant\Auth\TicketManagementTest.php::test access roles to update any ticket with data set &quot;('', 403)&quot;" class="Tests\Tenant\Auth\TicketManagementTest" classname="Tests.Tenant.Auth.TicketManagementTest" assertions="1" time="1.604914"/>
      </testsuite>
      <testsuite name="test access roles to update ticket with maintenance manager" tests="3" assertions="3" errors="0" failures="0" skipped="0" time="3.973191">
        <testcase name="test access roles to update ticket with maintenance manager with data set &quot;('Admin', 200)&quot;" file="tests\Tenant\Auth\TicketManagementTest.php::test access roles to update ticket with maintenance manager with data set &quot;('Admin', 200)&quot;" class="Tests\Tenant\Auth\TicketManagementTest" classname="Tests.Tenant.Auth.TicketManagementTest" assertions="1" time="1.291560"/>
        <testcase name="test access roles to update ticket with maintenance manager with data set &quot;('Maintenance Manager', 200)&quot;" file="tests\Tenant\Auth\TicketManagementTest.php::test access roles to update ticket with maintenance manager with data set &quot;('Maintenance Manager', 200)&quot;" class="Tests\Tenant\Auth\TicketManagementTest" classname="Tests.Tenant.Auth.TicketManagementTest" assertions="1" time="1.255256"/>
        <testcase name="test access roles to update ticket with maintenance manager with data set &quot;('', 403)&quot;" file="tests\Tenant\Auth\TicketManagementTest.php::test access roles to update ticket with maintenance manager with data set &quot;('', 403)&quot;" class="Tests\Tenant\Auth\TicketManagementTest" classname="Tests.Tenant.Auth.TicketManagementTest" assertions="1" time="1.426375"/>
      </testsuite>
      <testsuite name="test access roles to update the status of any ticket" tests="3" assertions="3" errors="0" failures="0" skipped="0" time="4.064230">
        <testcase name="test access roles to update the status of any ticket with data set &quot;('Admin', 200)&quot;" file="tests\Tenant\Auth\TicketManagementTest.php::test access roles to update the status of any ticket with data set &quot;('Admin', 200)&quot;" class="Tests\Tenant\Auth\TicketManagementTest" classname="Tests.Tenant.Auth.TicketManagementTest" assertions="1" time="1.495043"/>
        <testcase name="test access roles to update the status of any ticket with data set &quot;('Maintenance Manager', 403)&quot;" file="tests\Tenant\Auth\TicketManagementTest.php::test access roles to update the status of any ticket with data set &quot;('Maintenance Manager', 403)&quot;" class="Tests\Tenant\Auth\TicketManagementTest" classname="Tests.Tenant.Auth.TicketManagementTest" assertions="1" time="1.392518"/>
        <testcase name="test access roles to update the status of any ticket with data set &quot;('', 403)&quot;" file="tests\Tenant\Auth\TicketManagementTest.php::test access roles to update the status of any ticket with data set &quot;('', 403)&quot;" class="Tests\Tenant\Auth\TicketManagementTest" classname="Tests.Tenant.Auth.TicketManagementTest" assertions="1" time="1.176668"/>
      </testsuite>
      <testsuite name="test access roles to update the status of ticket with maintenance manager" tests="3" assertions="3" errors="0" failures="0" skipped="0" time="3.950489">
        <testcase name="test access roles to update the status of ticket with maintenance manager with data set &quot;('Admin', 200)&quot;" file="tests\Tenant\Auth\TicketManagementTest.php::test access roles to update the status of ticket with maintenance manager with data set &quot;('Admin', 200)&quot;" class="Tests\Tenant\Auth\TicketManagementTest" classname="Tests.Tenant.Auth.TicketManagementTest" assertions="1" time="1.208943"/>
        <testcase name="test access roles to update the status of ticket with maintenance manager with data set &quot;('Maintenance Manager', 200)&quot;" file="tests\Tenant\Auth\TicketManagementTest.php::test access roles to update the status of ticket with maintenance manager with data set &quot;('Maintenance Manager', 200)&quot;" class="Tests\Tenant\Auth\TicketManagementTest" classname="Tests.Tenant.Auth.TicketManagementTest" assertions="1" time="1.304533"/>
        <testcase name="test access roles to update the status of ticket with maintenance manager with data set &quot;('', 403)&quot;" file="tests\Tenant\Auth\TicketManagementTest.php::test access roles to update the status of ticket with maintenance manager with data set &quot;('', 403)&quot;" class="Tests\Tenant\Auth\TicketManagementTest" classname="Tests.Tenant.Auth.TicketManagementTest" assertions="1" time="1.437014"/>
      </testsuite>
      <testsuite name="test access roles to delete any ticket" tests="3" assertions="3" errors="0" failures="0" skipped="0" time="3.850938">
        <testcase name="test access roles to delete any ticket with data set &quot;('Admin', 200)&quot;" file="tests\Tenant\Auth\TicketManagementTest.php::test access roles to delete any ticket with data set &quot;('Admin', 200)&quot;" class="Tests\Tenant\Auth\TicketManagementTest" classname="Tests.Tenant.Auth.TicketManagementTest" assertions="1" time="1.509829"/>
        <testcase name="test access roles to delete any ticket with data set &quot;('Maintenance Manager', 403)&quot;" file="tests\Tenant\Auth\TicketManagementTest.php::test access roles to delete any ticket with data set &quot;('Maintenance Manager', 403)&quot;" class="Tests\Tenant\Auth\TicketManagementTest" classname="Tests.Tenant.Auth.TicketManagementTest" assertions="1" time="1.206469"/>
        <testcase name="test access roles to delete any ticket with data set &quot;('', 403)&quot;" file="tests\Tenant\Auth\TicketManagementTest.php::test access roles to delete any ticket with data set &quot;('', 403)&quot;" class="Tests\Tenant\Auth\TicketManagementTest" classname="Tests.Tenant.Auth.TicketManagementTest" assertions="1" time="1.134640"/>
      </testsuite>
    </testsuite>
    <testsuite name="Tests\Tenant\Auth\UserManagementTest" file="tests\Tenant\Auth\UserManagementTest.php" tests="13" assertions="29" errors="0" failures="0" skipped="0" time="14.274913">
      <testsuite name="test access roles to users index" tests="2" assertions="2" errors="0" failures="0" skipped="0" time="2.496635">
        <testcase name="test access roles to users index with data set &quot;('Admin', 200)&quot;" file="tests\Tenant\Auth\UserManagementTest.php::test access roles to users index with data set &quot;('Admin', 200)&quot;" class="Tests\Tenant\Auth\UserManagementTest" classname="Tests.Tenant.Auth.UserManagementTest" assertions="1" time="1.413429"/>
        <testcase name="test access roles to users index with data set &quot;('Maintenance Manager', 403)&quot;" file="tests\Tenant\Auth\UserManagementTest.php::test access roles to users index with data set &quot;('Maintenance Manager', 403)&quot;" class="Tests\Tenant\Auth\UserManagementTest" classname="Tests.Tenant.Auth.UserManagementTest" assertions="1" time="1.083206"/>
      </testsuite>
      <testsuite name="test access roles to view own user" tests="2" assertions="2" errors="0" failures="0" skipped="0" time="1.974305">
        <testcase name="test access roles to view own user with data set &quot;('Admin', 200)&quot;" file="tests\Tenant\Auth\UserManagementTest.php::test access roles to view own user with data set &quot;('Admin', 200)&quot;" class="Tests\Tenant\Auth\UserManagementTest" classname="Tests.Tenant.Auth.UserManagementTest" assertions="1" time="0.984519"/>
        <testcase name="test access roles to view own user with data set &quot;('Maintenance Manager', 200)&quot;" file="tests\Tenant\Auth\UserManagementTest.php::test access roles to view own user with data set &quot;('Maintenance Manager', 200)&quot;" class="Tests\Tenant\Auth\UserManagementTest" classname="Tests.Tenant.Auth.UserManagementTest" assertions="1" time="0.989786"/>
      </testsuite>
      <testsuite name="test access roles to view another user" tests="2" assertions="2" errors="0" failures="0" skipped="0" time="1.979134">
        <testcase name="test access roles to view another user with data set &quot;('Admin', 200)&quot;" file="tests\Tenant\Auth\UserManagementTest.php::test access roles to view another user with data set &quot;('Admin', 200)&quot;" class="Tests\Tenant\Auth\UserManagementTest" classname="Tests.Tenant.Auth.UserManagementTest" assertions="1" time="0.959911"/>
        <testcase name="test access roles to view another user with data set &quot;('Maintenance Manager', 403)&quot;" file="tests\Tenant\Auth\UserManagementTest.php::test access roles to view another user with data set &quot;('Maintenance Manager', 403)&quot;" class="Tests\Tenant\Auth\UserManagementTest" classname="Tests.Tenant.Auth.UserManagementTest" assertions="1" time="1.019223"/>
      </testsuite>
      <testsuite name="test access roles to users create" tests="2" assertions="2" errors="0" failures="0" skipped="0" time="1.991226">
        <testcase name="test access roles to users create with data set &quot;('Admin', 200)&quot;" file="tests\Tenant\Auth\UserManagementTest.php::test access roles to users create with data set &quot;('Admin', 200)&quot;" class="Tests\Tenant\Auth\UserManagementTest" classname="Tests.Tenant.Auth.UserManagementTest" assertions="1" time="0.967900"/>
        <testcase name="test access roles to users create with data set &quot;('Maintenance Manager', 403)&quot;" file="tests\Tenant\Auth\UserManagementTest.php::test access roles to users create with data set &quot;('Maintenance Manager', 403)&quot;" class="Tests\Tenant\Auth\UserManagementTest" classname="Tests.Tenant.Auth.UserManagementTest" assertions="1" time="1.023326"/>
      </testsuite>
      <testsuite name="an admin can create a new user with a role" tests="2" assertions="10" errors="0" failures="0" skipped="0" time="2.538970">
        <testcase name="an admin can create a new user with a role with data set &quot;('Admin')&quot;" file="tests\Tenant\Auth\UserManagementTest.php::an admin can create a new user with a role with data set &quot;('Admin')&quot;" class="Tests\Tenant\Auth\UserManagementTest" classname="Tests.Tenant.Auth.UserManagementTest" assertions="5" time="1.188573"/>
        <testcase name="an admin can create a new user with a role with data set &quot;('Maintenance Manager')&quot;" file="tests\Tenant\Auth\UserManagementTest.php::an admin can create a new user with a role with data set &quot;('Maintenance Manager')&quot;" class="Tests\Tenant\Auth\UserManagementTest" classname="Tests.Tenant.Auth.UserManagementTest" assertions="5" time="1.350397"/>
      </testsuite>
      <testsuite name="an admin can update the role of a user" tests="2" assertions="10" errors="0" failures="0" skipped="0" time="2.287749">
        <testcase name="an admin can update the role of a user with data set &quot;('Admin')&quot;" file="tests\Tenant\Auth\UserManagementTest.php::an admin can update the role of a user with data set &quot;('Admin')&quot;" class="Tests\Tenant\Auth\UserManagementTest" classname="Tests.Tenant.Auth.UserManagementTest" assertions="5" time="1.094591"/>
        <testcase name="an admin can update the role of a user with data set &quot;('Maintenance Manager')&quot;" file="tests\Tenant\Auth\UserManagementTest.php::an admin can update the role of a user with data set &quot;('Maintenance Manager')&quot;" class="Tests\Tenant\Auth\UserManagementTest" classname="Tests.Tenant.Auth.UserManagementTest" assertions="5" time="1.193159"/>
      </testsuite>
      <testsuite name="another user as an admin cannot create a user" tests="1" assertions="1" errors="0" failures="0" skipped="0" time="1.006894">
        <testcase name="another user as an admin cannot create a user with data set &quot;('Maintenance Manager')&quot;" file="tests\Tenant\Auth\UserManagementTest.php::another user as an admin cannot create a user with data set &quot;('Maintenance Manager')&quot;" class="Tests\Tenant\Auth\UserManagementTest" classname="Tests.Tenant.Auth.UserManagementTest" assertions="1" time="1.006894"/>
      </testsuite>
    </testsuite>
    <testsuite name="Tests\Tenant\AuthenticationTest" file="tests\Tenant\AuthenticationTest.php" tests="4" assertions="17" errors="0" failures="0" skipped="0" time="4.251907">
      <testcase name="login screen can be rendered" file="tests\Tenant\AuthenticationTest.php::login screen can be rendered" class="Tests\Tenant\AuthenticationTest" classname="Tests.Tenant.AuthenticationTest" assertions="10" time="1.030437"/>
      <testcase name="users can authenticate using the login screen" file="tests\Tenant\AuthenticationTest.php::users can authenticate using the login screen" class="Tests\Tenant\AuthenticationTest" classname="Tests.Tenant.AuthenticationTest" assertions="3" time="0.975878"/>
      <testcase name="users can not authenticate with invalid password" file="tests\Tenant\AuthenticationTest.php::users can not authenticate with invalid password" class="Tests\Tenant\AuthenticationTest" classname="Tests.Tenant.AuthenticationTest" assertions="1" time="1.228527"/>
      <testcase name="users can logout" file="tests\Tenant\AuthenticationTest.php::users can logout" class="Tests\Tenant\AuthenticationTest" classname="Tests.Tenant.AuthenticationTest" assertions="3" time="1.017065"/>
    </testsuite>
    <testsuite name="Tests\Tenant\Company\CompanyTest" file="tests\Tenant\Company\CompanyTest.php" tests="3" assertions="20" errors="0" failures="0" skipped="0" time="3.821422">
      <testcase name="it can render the company profile page" file="tests\Tenant\Company\CompanyTest.php::it can render the company profile page" class="Tests\Tenant\Company\CompanyTest" classname="Tests.Tenant.Company.CompanyTest" assertions="11" time="1.407160"/>
      <testcase name="it can upload a new logo for the company" file="tests\Tenant\Company\CompanyTest.php::it can upload a new logo for the company" class="Tests\Tenant\Company\CompanyTest" classname="Tests.Tenant.Company.CompanyTest" assertions="3" time="1.193071"/>
      <testcase name="it can delete a logo of the company" file="tests\Tenant\Company\CompanyTest.php::it can delete a logo of the company" class="Tests\Tenant\Company\CompanyTest" classname="Tests.Tenant.Company.CompanyTest" assertions="6" time="1.221191"/>
    </testsuite>
    <testsuite name="Tests\Tenant\Contracts\ContractTest" file="tests\Tenant\Contracts\ContractTest.php" tests="12" assertions="86" errors="0" failures="0" skipped="0" time="16.746256">
      <testcase name="it can factory a contract" file="tests\Tenant\Contracts\ContractTest.php::it can factory a contract" class="Tests\Tenant\Contracts\ContractTest" classname="Tests.Tenant.Contracts.ContractTest" assertions="3" time="1.794785"/>
      <testcase name="it can create a contract and attach asset and locations" file="tests\Tenant\Contracts\ContractTest.php::it can create a contract and attach asset and locations" class="Tests\Tenant\Contracts\ContractTest" classname="Tests.Tenant.Contracts.ContractTest" assertions="6" time="1.538268"/>
      <testcase name="it can store a site with contracts" file="tests\Tenant\Contracts\ContractTest.php::it can store a site with contracts" class="Tests\Tenant\Contracts\ContractTest" classname="Tests.Tenant.Contracts.ContractTest" assertions="6" time="1.898441"/>
      <testcase name="it can store a building with contracts" file="tests\Tenant\Contracts\ContractTest.php::it can store a building with contracts" class="Tests\Tenant\Contracts\ContractTest" classname="Tests.Tenant.Contracts.ContractTest" assertions="6" time="1.327357"/>
      <testcase name="it can store a floor with contracts" file="tests\Tenant\Contracts\ContractTest.php::it can store a floor with contracts" class="Tests\Tenant\Contracts\ContractTest" classname="Tests.Tenant.Contracts.ContractTest" assertions="6" time="1.272246"/>
      <testcase name="it can store a room with contracts" file="tests\Tenant\Contracts\ContractTest.php::it can store a room with contracts" class="Tests\Tenant\Contracts\ContractTest" classname="Tests.Tenant.Contracts.ContractTest" assertions="6" time="1.249411"/>
      <testcase name="it can update an existing contract" file="tests\Tenant\Contracts\ContractTest.php::it can update an existing contract" class="Tests\Tenant\Contracts\ContractTest" classname="Tests.Tenant.Contracts.ContractTest" assertions="3" time="1.267199"/>
      <testcase name="it can delete a contract" file="tests\Tenant\Contracts\ContractTest.php::it can delete a contract" class="Tests\Tenant\Contracts\ContractTest" classname="Tests.Tenant.Contracts.ContractTest" assertions="4" time="1.204166"/>
      <testcase name="it can render the index page with all contracts" file="tests\Tenant\Contracts\ContractTest.php::it can render the index page with all contracts" class="Tests\Tenant\Contracts\ContractTest" classname="Tests.Tenant.Contracts.ContractTest" assertions="15" time="1.333705"/>
      <testcase name="it can render the show contract page" file="tests\Tenant\Contracts\ContractTest.php::it can render the show contract page" class="Tests\Tenant\Contracts\ContractTest" classname="Tests.Tenant.Contracts.ContractTest" assertions="12" time="1.186637"/>
      <testcase name="it can render the create contract page" file="tests\Tenant\Contracts\ContractTest.php::it can render the create contract page" class="Tests\Tenant\Contracts\ContractTest" classname="Tests.Tenant.Contracts.ContractTest" assertions="9" time="1.303596"/>
      <testcase name="it can render the edit contract page" file="tests\Tenant\Contracts\ContractTest.php::it can render the edit contract page" class="Tests\Tenant\Contracts\ContractTest" classname="Tests.Tenant.Contracts.ContractTest" assertions="10" time="1.370444"/>
    </testsuite>
    <testsuite name="Tests\Tenant\Documents\AssetDocumentTest" file="tests\Tenant\Documents\AssetDocumentTest.php" tests="9" assertions="31" errors="0" failures="0" skipped="0" time="12.274813">
      <testcase name="it can attach existing documents to asset" file="tests\Tenant\Documents\AssetDocumentTest.php::it can attach existing documents to asset" class="Tests\Tenant\Documents\AssetDocumentTest" classname="Tests.Tenant.Documents.AssetDocumentTest" assertions="4" time="1.597447"/>
      <testcase name="it can upload several files to asset" file="tests\Tenant\Documents\AssetDocumentTest.php::it can upload several files to asset" class="Tests\Tenant\Documents\AssetDocumentTest" classname="Tests.Tenant.Documents.AssetDocumentTest" assertions="5" time="1.248447"/>
      <testcase name="it fails when upload wrong image mime (ie. webp)" file="tests\Tenant\Documents\AssetDocumentTest.php::it fails when upload wrong image mime (ie. webp)" class="Tests\Tenant\Documents\AssetDocumentTest" classname="Tests.Tenant.Documents.AssetDocumentTest" assertions="2" time="1.358540"/>
      <testcase name="it fails when upload exceeding document size : 4096kb" file="tests\Tenant\Documents\AssetDocumentTest.php::it fails when upload exceeding document size : 4096kb" class="Tests\Tenant\Documents\AssetDocumentTest" classname="Tests.Tenant.Documents.AssetDocumentTest" assertions="2" time="1.394749"/>
      <testcase name="it can delete a document from an asset" file="tests\Tenant\Documents\AssetDocumentTest.php::it can delete a document from an asset" class="Tests\Tenant\Documents\AssetDocumentTest" classname="Tests.Tenant.Documents.AssetDocumentTest" assertions="4" time="1.300956"/>
      <testcase name="it can remove/detach a document from an asset" file="tests\Tenant\Documents\AssetDocumentTest.php::it can remove/detach a document from an asset" class="Tests\Tenant\Documents\AssetDocumentTest" classname="Tests.Tenant.Documents.AssetDocumentTest" assertions="4" time="1.372236"/>
      <testcase name="it can update name and description a document from an asset " file="tests\Tenant\Documents\AssetDocumentTest.php::it can update name and description a document from an asset " class="Tests\Tenant\Documents\AssetDocumentTest" classname="Tests.Tenant.Documents.AssetDocumentTest" assertions="2" time="1.129260"/>
      <testcase name="it can upload a document to an asset" file="tests\Tenant\Documents\AssetDocumentTest.php::it can upload a document to an asset" class="Tests\Tenant\Documents\AssetDocumentTest" classname="Tests.Tenant.Documents.AssetDocumentTest" assertions="2" time="1.363766"/>
      <testcase name="it deletes the documents directory if it is empty" file="tests\Tenant\Documents\AssetDocumentTest.php::it deletes the documents directory if it is empty" class="Tests\Tenant\Documents\AssetDocumentTest" classname="Tests.Tenant.Documents.AssetDocumentTest" assertions="6" time="1.509411"/>
    </testsuite>
    <testsuite name="Tests\Tenant\Documents\BuildingDocumentTest" file="tests\Tenant\Documents\BuildingDocumentTest.php" tests="9" assertions="40" errors="0" failures="0" skipped="0" time="9.805852">
      <testcase name="it can attach existing documents to building" file="tests\Tenant\Documents\BuildingDocumentTest.php::it can attach existing documents to building" class="Tests\Tenant\Documents\BuildingDocumentTest" classname="Tests.Tenant.Documents.BuildingDocumentTest" assertions="4" time="1.439108"/>
      <testcase name="it can upload several files when creating building" file="tests\Tenant\Documents\BuildingDocumentTest.php::it can upload several files when creating building" class="Tests\Tenant\Documents\BuildingDocumentTest" classname="Tests.Tenant.Documents.BuildingDocumentTest" assertions="6" time="1.190657"/>
      <testcase name="it can upload documents to an existing building" file="tests\Tenant\Documents\BuildingDocumentTest.php::it can upload documents to an existing building" class="Tests\Tenant\Documents\BuildingDocumentTest" classname="Tests.Tenant.Documents.BuildingDocumentTest" assertions="6" time="1.027145"/>
      <testcase name="it can delete a document from a building" file="tests\Tenant\Documents\BuildingDocumentTest.php::it can delete a document from a building" class="Tests\Tenant\Documents\BuildingDocumentTest" classname="Tests.Tenant.Documents.BuildingDocumentTest" assertions="5" time="1.082264"/>
      <testcase name="it can remove/detach a document from a building" file="tests\Tenant\Documents\BuildingDocumentTest.php::it can remove/detach a document from a building" class="Tests\Tenant\Documents\BuildingDocumentTest" classname="Tests.Tenant.Documents.BuildingDocumentTest" assertions="4" time="1.052495"/>
      <testcase name="it fails when upload wrong image mime (ie. webp)" file="tests\Tenant\Documents\BuildingDocumentTest.php::it fails when upload wrong image mime (ie. webp)" class="Tests\Tenant\Documents\BuildingDocumentTest" classname="Tests.Tenant.Documents.BuildingDocumentTest" assertions="3" time="0.952648"/>
      <testcase name="it fails when upload exceeding document size : 4096kb" file="tests\Tenant\Documents\BuildingDocumentTest.php::it fails when upload exceeding document size : 4096kb" class="Tests\Tenant\Documents\BuildingDocumentTest" classname="Tests.Tenant.Documents.BuildingDocumentTest" assertions="2" time="0.972204"/>
      <testcase name="it can update name and description a document from a building " file="tests\Tenant\Documents\BuildingDocumentTest.php::it can update name and description a document from a building " class="Tests\Tenant\Documents\BuildingDocumentTest" classname="Tests.Tenant.Documents.BuildingDocumentTest" assertions="2" time="1.000752"/>
      <testcase name="it deletes the documents directory if it is empty" file="tests\Tenant\Documents\BuildingDocumentTest.php::it deletes the documents directory if it is empty" class="Tests\Tenant\Documents\BuildingDocumentTest" classname="Tests.Tenant.Documents.BuildingDocumentTest" assertions="8" time="1.088581"/>
    </testsuite>
    <testsuite name="Tests\Tenant\Documents\ContractDocumentTest" file="tests\Tenant\Documents\ContractDocumentTest.php" tests="4" assertions="19" errors="0" failures="0" skipped="0" time="5.679619">
      <testcase name="it can create a contract with documents" file="tests\Tenant\Documents\ContractDocumentTest.php::it can create a contract with documents" class="Tests\Tenant\Documents\ContractDocumentTest" classname="Tests.Tenant.Documents.ContractDocumentTest" assertions="8" time="1.904869"/>
      <testcase name="it can attach a document to an existing contract" file="tests\Tenant\Documents\ContractDocumentTest.php::it can attach a document to an existing contract" class="Tests\Tenant\Documents\ContractDocumentTest" classname="Tests.Tenant.Documents.ContractDocumentTest" assertions="6" time="1.305349"/>
      <testcase name="it can detach a document from an existing contract" file="tests\Tenant\Documents\ContractDocumentTest.php::it can detach a document from an existing contract" class="Tests\Tenant\Documents\ContractDocumentTest" classname="Tests.Tenant.Documents.ContractDocumentTest" assertions="3" time="1.217581"/>
      <testcase name="it can attach an existing document to an existing contract" file="tests\Tenant\Documents\ContractDocumentTest.php::it can attach an existing document to an existing contract" class="Tests\Tenant\Documents\ContractDocumentTest" classname="Tests.Tenant.Documents.ContractDocumentTest" assertions="2" time="1.251819"/>
    </testsuite>
    <testsuite name="Tests\Tenant\Documents\DocumentsTest" file="tests\Tenant\Documents\DocumentsTest.php" tests="5" assertions="18" errors="0" failures="0" skipped="0" time="6.053926">
      <testcase name="it can upload a new document (document) without attaching to a model" file="tests\Tenant\Documents\DocumentsTest.php::it can upload a new document (document) without attaching to a model" class="Tests\Tenant\Documents\DocumentsTest" classname="Tests.Tenant.Documents.DocumentsTest" assertions="4" time="1.551122"/>
      <testcase name="it can upload a new document (image) without attaching to a model" file="tests\Tenant\Documents\DocumentsTest.php::it can upload a new document (image) without attaching to a model" class="Tests\Tenant\Documents\DocumentsTest" classname="Tests.Tenant.Documents.DocumentsTest" assertions="4" time="1.220038"/>
      <testcase name="it can upload a new document (image) and compress picture" file="tests\Tenant\Documents\DocumentsTest.php::it can upload a new document (image) and compress picture" class="Tests\Tenant\Documents\DocumentsTest" classname="Tests.Tenant.Documents.DocumentsTest" assertions="5" time="1.073945"/>
      <testcase name="it increments the disk size in the company table" file="tests\Tenant\Documents\DocumentsTest.php::it increments the disk size in the company table" class="Tests\Tenant\Documents\DocumentsTest" classname="Tests.Tenant.Documents.DocumentsTest" assertions="2" time="1.059963"/>
      <testcase name="it decrements the disk size in the company table" file="tests\Tenant\Documents\DocumentsTest.php::it decrements the disk size in the company table" class="Tests\Tenant\Documents\DocumentsTest" classname="Tests.Tenant.Documents.DocumentsTest" assertions="3" time="1.148859"/>
    </testsuite>
    <testsuite name="Tests\Tenant\Documents\FloorDocumentTest" file="tests\Tenant\Documents\FloorDocumentTest.php" tests="9" assertions="40" errors="0" failures="0" skipped="0" time="10.873884">
      <testcase name="it can attach existing documents to room" file="tests\Tenant\Documents\FloorDocumentTest.php::it can attach existing documents to room" class="Tests\Tenant\Documents\FloorDocumentTest" classname="Tests.Tenant.Documents.FloorDocumentTest" assertions="4" time="1.491452"/>
      <testcase name="it can upload several files to floor" file="tests\Tenant\Documents\FloorDocumentTest.php::it can upload several files to floor" class="Tests\Tenant\Documents\FloorDocumentTest" classname="Tests.Tenant.Documents.FloorDocumentTest" assertions="6" time="1.240045"/>
      <testcase name="it can upload documents to an existing floor" file="tests\Tenant\Documents\FloorDocumentTest.php::it can upload documents to an existing floor" class="Tests\Tenant\Documents\FloorDocumentTest" classname="Tests.Tenant.Documents.FloorDocumentTest" assertions="6" time="1.339374"/>
      <testcase name="it can remove/detach a document from a site" file="tests\Tenant\Documents\FloorDocumentTest.php::it can remove/detach a document from a site" class="Tests\Tenant\Documents\FloorDocumentTest" classname="Tests.Tenant.Documents.FloorDocumentTest" assertions="4" time="1.239669"/>
      <testcase name="it can delete a document from a floor" file="tests\Tenant\Documents\FloorDocumentTest.php::it can delete a document from a floor" class="Tests\Tenant\Documents\FloorDocumentTest" classname="Tests.Tenant.Documents.FloorDocumentTest" assertions="5" time="1.179734"/>
      <testcase name="it fails when upload wrong image mime (ie. webp)" file="tests\Tenant\Documents\FloorDocumentTest.php::it fails when upload wrong image mime (ie. webp)" class="Tests\Tenant\Documents\FloorDocumentTest" classname="Tests.Tenant.Documents.FloorDocumentTest" assertions="3" time="1.053022"/>
      <testcase name="it fails when upload exceeding document size : 4096kb" file="tests\Tenant\Documents\FloorDocumentTest.php::it fails when upload exceeding document size : 4096kb" class="Tests\Tenant\Documents\FloorDocumentTest" classname="Tests.Tenant.Documents.FloorDocumentTest" assertions="2" time="1.022533"/>
      <testcase name="it can update name and description a document from a floor " file="tests\Tenant\Documents\FloorDocumentTest.php::it can update name and description a document from a floor " class="Tests\Tenant\Documents\FloorDocumentTest" classname="Tests.Tenant.Documents.FloorDocumentTest" assertions="2" time="1.140283"/>
      <testcase name="it deletes the documents directory if it is empty" file="tests\Tenant\Documents\FloorDocumentTest.php::it deletes the documents directory if it is empty" class="Tests\Tenant\Documents\FloorDocumentTest" classname="Tests.Tenant.Documents.FloorDocumentTest" assertions="8" time="1.167771"/>
    </testsuite>
    <testsuite name="Tests\Tenant\Documents\LocationDocumentUploadTest" file="tests\Tenant\Documents\LocationDocumentUploadTest.php" tests="6" assertions="20" errors="0" failures="0" skipped="0" time="8.051993">
      <testcase name="it can upload several files to asset" file="tests\Tenant\Documents\LocationDocumentUploadTest.php::it can upload several files to asset" class="Tests\Tenant\Documents\LocationDocumentUploadTest" classname="Tests.Tenant.Documents.LocationDocumentUploadTest" assertions="4" time="1.597891"/>
      <testcase name="it fails when upload wrong image mime (ie. webp)" file="tests\Tenant\Documents\LocationDocumentUploadTest.php::it fails when upload wrong image mime (ie. webp)" class="Tests\Tenant\Documents\LocationDocumentUploadTest" classname="Tests.Tenant.Documents.LocationDocumentUploadTest" assertions="3" time="1.237256"/>
      <testcase name="it fails when upload exceeding document size : 4096kb" file="tests\Tenant\Documents\LocationDocumentUploadTest.php::it fails when upload exceeding document size : 4096kb" class="Tests\Tenant\Documents\LocationDocumentUploadTest" classname="Tests.Tenant.Documents.LocationDocumentUploadTest" assertions="2" time="1.364561"/>
      <testcase name="it can delete a document from an asset" file="tests\Tenant\Documents\LocationDocumentUploadTest.php::it can delete a document from an asset" class="Tests\Tenant\Documents\LocationDocumentUploadTest" classname="Tests.Tenant.Documents.LocationDocumentUploadTest" assertions="3" time="1.359652"/>
      <testcase name="it can update name and description a document from an asset " file="tests\Tenant\Documents\LocationDocumentUploadTest.php::it can update name and description a document from an asset " class="Tests\Tenant\Documents\LocationDocumentUploadTest" classname="Tests.Tenant.Documents.LocationDocumentUploadTest" assertions="2" time="1.150867"/>
      <testcase name="it deletes the documents directory if it is empty" file="tests\Tenant\Documents\LocationDocumentUploadTest.php::it deletes the documents directory if it is empty" class="Tests\Tenant\Documents\LocationDocumentUploadTest" classname="Tests.Tenant.Documents.LocationDocumentUploadTest" assertions="6" time="1.341766"/>
    </testsuite>
    <testsuite name="Tests\Tenant\Documents\RoomDocumentTest" file="tests\Tenant\Documents\RoomDocumentTest.php" tests="9" assertions="40" errors="0" failures="0" skipped="0" time="11.432314">
      <testcase name="it can attach existing documents to room" file="tests\Tenant\Documents\RoomDocumentTest.php::it can attach existing documents to room" class="Tests\Tenant\Documents\RoomDocumentTest" classname="Tests.Tenant.Documents.RoomDocumentTest" assertions="4" time="1.542300"/>
      <testcase name="it can upload several files when creating room" file="tests\Tenant\Documents\RoomDocumentTest.php::it can upload several files when creating room" class="Tests\Tenant\Documents\RoomDocumentTest" classname="Tests.Tenant.Documents.RoomDocumentTest" assertions="6" time="1.381319"/>
      <testcase name="it can upload documents to an existing room" file="tests\Tenant\Documents\RoomDocumentTest.php::it can upload documents to an existing room" class="Tests\Tenant\Documents\RoomDocumentTest" classname="Tests.Tenant.Documents.RoomDocumentTest" assertions="6" time="1.255275"/>
      <testcase name="it can remove/detach a document from a room" file="tests\Tenant\Documents\RoomDocumentTest.php::it can remove/detach a document from a room" class="Tests\Tenant\Documents\RoomDocumentTest" classname="Tests.Tenant.Documents.RoomDocumentTest" assertions="4" time="1.403199"/>
      <testcase name="it can delete a document from a room" file="tests\Tenant\Documents\RoomDocumentTest.php::it can delete a document from a room" class="Tests\Tenant\Documents\RoomDocumentTest" classname="Tests.Tenant.Documents.RoomDocumentTest" assertions="5" time="1.214395"/>
      <testcase name="it fails when upload wrong image mime (ie. webp)" file="tests\Tenant\Documents\RoomDocumentTest.php::it fails when upload wrong image mime (ie. webp)" class="Tests\Tenant\Documents\RoomDocumentTest" classname="Tests.Tenant.Documents.RoomDocumentTest" assertions="3" time="1.130096"/>
      <testcase name="it fails when upload exceeding document size : 4096kb" file="tests\Tenant\Documents\RoomDocumentTest.php::it fails when upload exceeding document size : 4096kb" class="Tests\Tenant\Documents\RoomDocumentTest" classname="Tests.Tenant.Documents.RoomDocumentTest" assertions="2" time="1.121277"/>
      <testcase name="it can update name and description a document from a room " file="tests\Tenant\Documents\RoomDocumentTest.php::it can update name and description a document from a room " class="Tests\Tenant\Documents\RoomDocumentTest" classname="Tests.Tenant.Documents.RoomDocumentTest" assertions="2" time="1.096531"/>
      <testcase name="it deletes the documents directory if it is empty" file="tests\Tenant\Documents\RoomDocumentTest.php::it deletes the documents directory if it is empty" class="Tests\Tenant\Documents\RoomDocumentTest" classname="Tests.Tenant.Documents.RoomDocumentTest" assertions="8" time="1.287921"/>
    </testsuite>
    <testsuite name="Tests\Tenant\Documents\SiteDocumentTest" file="tests\Tenant\Documents\SiteDocumentTest.php" tests="9" assertions="37" errors="0" failures="0" skipped="0" time="12.370678">
      <testcase name="it can attach existing documents to floor" file="tests\Tenant\Documents\SiteDocumentTest.php::it can attach existing documents to floor" class="Tests\Tenant\Documents\SiteDocumentTest" classname="Tests.Tenant.Documents.SiteDocumentTest" assertions="4" time="1.812200"/>
      <testcase name="it can upload several files when site is created" file="tests\Tenant\Documents\SiteDocumentTest.php::it can upload several files when site is created" class="Tests\Tenant\Documents\SiteDocumentTest" classname="Tests.Tenant.Documents.SiteDocumentTest" assertions="5" time="1.392934"/>
      <testcase name="it can upload documents to an existing site" file="tests\Tenant\Documents\SiteDocumentTest.php::it can upload documents to an existing site" class="Tests\Tenant\Documents\SiteDocumentTest" classname="Tests.Tenant.Documents.SiteDocumentTest" assertions="6" time="1.511986"/>
      <testcase name="it can delete a document from a site" file="tests\Tenant\Documents\SiteDocumentTest.php::it can delete a document from a site" class="Tests\Tenant\Documents\SiteDocumentTest" classname="Tests.Tenant.Documents.SiteDocumentTest" assertions="5" time="1.392160"/>
      <testcase name="it can remove/detach a document from a site" file="tests\Tenant\Documents\SiteDocumentTest.php::it can remove/detach a document from a site" class="Tests\Tenant\Documents\SiteDocumentTest" classname="Tests.Tenant.Documents.SiteDocumentTest" assertions="4" time="1.292625"/>
      <testcase name="it fails when upload wrong image mime (ie. webp)" file="tests\Tenant\Documents\SiteDocumentTest.php::it fails when upload wrong image mime (ie. webp)" class="Tests\Tenant\Documents\SiteDocumentTest" classname="Tests.Tenant.Documents.SiteDocumentTest" assertions="3" time="1.250317"/>
      <testcase name="it fails when upload exceeding document size : 4096kb" file="tests\Tenant\Documents\SiteDocumentTest.php::it fails when upload exceeding document size : 4096kb" class="Tests\Tenant\Documents\SiteDocumentTest" classname="Tests.Tenant.Documents.SiteDocumentTest" assertions="2" time="1.151162"/>
      <testcase name="it can update name and description a document from a site " file="tests\Tenant\Documents\SiteDocumentTest.php::it can update name and description a document from a site " class="Tests\Tenant\Documents\SiteDocumentTest" classname="Tests.Tenant.Documents.SiteDocumentTest" assertions="2" time="1.115761"/>
      <testcase name="it deletes the documents directory if it is empty" file="tests\Tenant\Documents\SiteDocumentTest.php::it deletes the documents directory if it is empty" class="Tests\Tenant\Documents\SiteDocumentTest" classname="Tests.Tenant.Documents.SiteDocumentTest" assertions="6" time="1.451534"/>
    </testsuite>
    <testsuite name="Tests\Tenant\Imports\AssetImportTest" file="tests\Tenant\Imports\AssetImportTest.php" tests="3" assertions="18" errors="0" failures="0" skipped="0" time="45.101515">
      <testcase name="it can import and create new assets" file="tests\Tenant\Imports\AssetImportTest.php::it can import and create new assets" class="Tests\Tenant\Imports\AssetImportTest" classname="Tests.Tenant.Imports.AssetImportTest" assertions="10" time="17.548540"/>
      <testcase name="it can import and create new asset with maintenance" file="tests\Tenant\Imports\AssetImportTest.php::it can import and create new asset with maintenance" class="Tests\Tenant\Imports\AssetImportTest" classname="Tests.Tenant.Imports.AssetImportTest" assertions="5" time="13.899456"/>
      <testcase name="it can import and create new asset with depreciable" file="tests\Tenant\Imports\AssetImportTest.php::it can import and create new asset with depreciable" class="Tests\Tenant\Imports\AssetImportTest" classname="Tests.Tenant.Imports.AssetImportTest" assertions="3" time="13.653520"/>
    </testsuite>
    <testsuite name="Tests\Tenant\Interventions\APIInterventionTest" file="tests\Tenant\Interventions\APIInterventionTest.php" tests="8" assertions="22" errors="0" failures="0" skipped="0" time="11.245121">
      <testcase name="it can get an intervention" file="tests\Tenant\Interventions\APIInterventionTest.php::it can get an intervention" class="Tests\Tenant\Interventions\APIInterventionTest" classname="Tests.Tenant.Interventions.APIInterventionTest" assertions="2" time="1.711362"/>
      <testcase name="it can retrieve providers linked to an intervention (asset) to select to which one to send" file="tests\Tenant\Interventions\APIInterventionTest.php::it can retrieve providers linked to an intervention (asset) to select to which one to send" class="Tests\Tenant\Interventions\APIInterventionTest" classname="Tests.Tenant.Interventions.APIInterventionTest" assertions="3" time="1.440621"/>
      <testcase name="it can get an intervention with ticket" file="tests\Tenant\Interventions\APIInterventionTest.php::it can get an intervention with ticket" class="Tests\Tenant\Interventions\APIInterventionTest" classname="Tests.Tenant.Interventions.APIInterventionTest" assertions="2" time="1.530803"/>
      <testcase name="it can get all interventions for an ASSET" file="tests\Tenant\Interventions\APIInterventionTest.php::it can get all interventions for an ASSET" class="Tests\Tenant\Interventions\APIInterventionTest" classname="Tests.Tenant.Interventions.APIInterventionTest" assertions="3" time="1.254628"/>
      <testcase name="it can get all interventions for a SITE" file="tests\Tenant\Interventions\APIInterventionTest.php::it can get all interventions for a SITE" class="Tests\Tenant\Interventions\APIInterventionTest" classname="Tests.Tenant.Interventions.APIInterventionTest" assertions="3" time="1.271727"/>
      <testcase name="it can get all interventions for a BUILDING" file="tests\Tenant\Interventions\APIInterventionTest.php::it can get all interventions for a BUILDING" class="Tests\Tenant\Interventions\APIInterventionTest" classname="Tests.Tenant.Interventions.APIInterventionTest" assertions="3" time="1.293486"/>
      <testcase name="it can get all interventions for a FLOOR" file="tests\Tenant\Interventions\APIInterventionTest.php::it can get all interventions for a FLOOR" class="Tests\Tenant\Interventions\APIInterventionTest" classname="Tests.Tenant.Interventions.APIInterventionTest" assertions="3" time="1.472717"/>
      <testcase name="it can get all interventions for a ROOM" file="tests\Tenant\Interventions\APIInterventionTest.php::it can get all interventions for a ROOM" class="Tests\Tenant\Interventions\APIInterventionTest" classname="Tests.Tenant.Interventions.APIInterventionTest" assertions="3" time="1.269777"/>
    </testsuite>
    <testsuite name="Tests\Tenant\Interventions\InterventionActionTest" file="tests\Tenant\Interventions\InterventionActionTest.php" tests="7" assertions="29" errors="0" failures="0" skipped="0" time="9.161477">
      <testcase name="it can create a new action to an intervention" file="tests\Tenant\Interventions\InterventionActionTest.php::it can create a new action to an intervention" class="Tests\Tenant\Interventions\InterventionActionTest" classname="Tests.Tenant.Interventions.InterventionActionTest" assertions="4" time="1.512657"/>
      <testcase name="it can update an intervention action" file="tests\Tenant\Interventions\InterventionActionTest.php::it can update an intervention action" class="Tests\Tenant\Interventions\InterventionActionTest" classname="Tests.Tenant.Interventions.InterventionActionTest" assertions="6" time="1.213159"/>
      <testcase name="it can delete an intervention action" file="tests\Tenant\Interventions\InterventionActionTest.php::it can delete an intervention action" class="Tests\Tenant\Interventions\InterventionActionTest" classname="Tests.Tenant.Interventions.InterventionActionTest" assertions="5" time="1.315089"/>
      <testcase name="it sums intervention costs of intervention when action with intervention_costs is added" file="tests\Tenant\Interventions\InterventionActionTest.php::it sums intervention costs of intervention when action with intervention_costs is added" class="Tests\Tenant\Interventions\InterventionActionTest" classname="Tests.Tenant.Interventions.InterventionActionTest" assertions="3" time="1.513815"/>
      <testcase name="it updates intervention costs of intervention when action with intervention_costs is updated" file="tests\Tenant\Interventions\InterventionActionTest.php::it updates intervention costs of intervention when action with intervention_costs is updated" class="Tests\Tenant\Interventions\InterventionActionTest" classname="Tests.Tenant.Interventions.InterventionActionTest" assertions="2" time="1.285325"/>
      <testcase name="it updates intervention costs of intervention when action with intervention_costs is deleted" file="tests\Tenant\Interventions\InterventionActionTest.php::it updates intervention costs of intervention when action with intervention_costs is deleted" class="Tests\Tenant\Interventions\InterventionActionTest" classname="Tests.Tenant.Interventions.InterventionActionTest" assertions="3" time="1.178197"/>
      <testcase name="it can upload pictures for an intervention action" file="tests\Tenant\Interventions\InterventionActionTest.php::it can upload pictures for an intervention action" class="Tests\Tenant\Interventions\InterventionActionTest" classname="Tests.Tenant.Interventions.InterventionActionTest" assertions="6" time="1.143236"/>
    </testsuite>
    <testsuite name="Tests\Tenant\Interventions\InterventionProviderTest" file="tests\Tenant\Interventions\InterventionProviderTest.php" tests="6" assertions="32" errors="0" failures="0" skipped="0" time="9.782190">
      <testcase name="it can send an intervention to a provider" file="tests\Tenant\Interventions\InterventionProviderTest.php::it can send an intervention to a provider" class="Tests\Tenant\Interventions\InterventionProviderTest" classname="Tests.Tenant.Interventions.InterventionProviderTest" assertions="2" time="1.563615"/>
      <testcase name="it a provider can access to the intervention page" file="tests\Tenant\Interventions\InterventionProviderTest.php::it a provider can access to the intervention page" class="Tests\Tenant\Interventions\InterventionProviderTest" classname="Tests.Tenant.Interventions.InterventionProviderTest" assertions="18" time="1.481342"/>
      <testcase name="it can post an action as external provider" file="tests\Tenant\Interventions\InterventionProviderTest.php::it can post an action as external provider" class="Tests\Tenant\Interventions\InterventionProviderTest" classname="Tests.Tenant.Interventions.InterventionProviderTest" assertions="2" time="1.293262"/>
      <testcase name="it sends an email to the admin when a provider encoded a new action" file="tests\Tenant\Interventions\InterventionProviderTest.php::it sends an email to the admin when a provider encoded a new action" class="Tests\Tenant\Interventions\InterventionProviderTest" classname="Tests.Tenant.Interventions.InterventionProviderTest" assertions="2" time="1.620089"/>
      <testcase name="it sends an email to the maintenance manager when a provider encoded a new action" file="tests\Tenant\Interventions\InterventionProviderTest.php::it sends an email to the maintenance manager when a provider encoded a new action" class="Tests\Tenant\Interventions\InterventionProviderTest" classname="Tests.Tenant.Interventions.InterventionProviderTest" assertions="2" time="1.833934"/>
      <testcase name="it can upload pictures for an intervention action" file="tests\Tenant\Interventions\InterventionProviderTest.php::it can upload pictures for an intervention action" class="Tests\Tenant\Interventions\InterventionProviderTest" classname="Tests.Tenant.Interventions.InterventionProviderTest" assertions="6" time="1.989948"/>
    </testsuite>
    <testsuite name="Tests\Tenant\Interventions\InterventionTest" file="tests\Tenant\Interventions\InterventionTest.php" tests="11" assertions="53" errors="0" failures="0" skipped="0" time="15.458270">
      <testcase name="it can factory intervention" file="tests\Tenant\Interventions\InterventionTest.php::it can factory intervention" class="Tests\Tenant\Interventions\InterventionTest" classname="Tests.Tenant.Interventions.InterventionTest" assertions="2" time="1.887613"/>
      <testcase name="it shows an intervention page" file="tests\Tenant\Interventions\InterventionTest.php::it shows an intervention page" class="Tests\Tenant\Interventions\InterventionTest" classname="Tests.Tenant.Interventions.InterventionTest" assertions="15" time="1.618047"/>
      <testcase name="it can create a new intervention for a TICKET" file="tests\Tenant\Interventions\InterventionTest.php::it can create a new intervention for a TICKET" class="Tests\Tenant\Interventions\InterventionTest" classname="Tests.Tenant.Interventions.InterventionTest" assertions="4" time="1.470652"/>
      <testcase name="it can create a new intervention for an ASSET" file="tests\Tenant\Interventions\InterventionTest.php::it can create a new intervention for an ASSET" class="Tests\Tenant\Interventions\InterventionTest" classname="Tests.Tenant.Interventions.InterventionTest" assertions="4" time="1.678309"/>
      <testcase name="it can create a new intervention for a SITE" file="tests\Tenant\Interventions\InterventionTest.php::it can create a new intervention for a SITE" class="Tests\Tenant\Interventions\InterventionTest" classname="Tests.Tenant.Interventions.InterventionTest" assertions="4" time="1.700262"/>
      <testcase name="it can create a new intervention for a BUILDING" file="tests\Tenant\Interventions\InterventionTest.php::it can create a new intervention for a BUILDING" class="Tests\Tenant\Interventions\InterventionTest" classname="Tests.Tenant.Interventions.InterventionTest" assertions="4" time="1.506369"/>
      <testcase name="it can create a new intervention for a FLOOR" file="tests\Tenant\Interventions\InterventionTest.php::it can create a new intervention for a FLOOR" class="Tests\Tenant\Interventions\InterventionTest" classname="Tests.Tenant.Interventions.InterventionTest" assertions="4" time="1.099663"/>
      <testcase name="it can create a new intervention for a ROOM" file="tests\Tenant\Interventions\InterventionTest.php::it can create a new intervention for a ROOM" class="Tests\Tenant\Interventions\InterventionTest" classname="Tests.Tenant.Interventions.InterventionTest" assertions="4" time="1.162478"/>
      <testcase name="it can update an existing intervention" file="tests\Tenant\Interventions\InterventionTest.php::it can update an existing intervention" class="Tests\Tenant\Interventions\InterventionTest" classname="Tests.Tenant.Interventions.InterventionTest" assertions="3" time="1.083968"/>
      <testcase name="it can delete an intervention" file="tests\Tenant\Interventions\InterventionTest.php::it can delete an intervention" class="Tests\Tenant\Interventions\InterventionTest" classname="Tests.Tenant.Interventions.InterventionTest" assertions="3" time="1.084041"/>
      <testcase name="it can upload pictures when creating an intervention" file="tests\Tenant\Interventions\InterventionTest.php::it can upload pictures when creating an intervention" class="Tests\Tenant\Interventions\InterventionTest" classname="Tests.Tenant.Interventions.InterventionTest" assertions="6" time="1.166867"/>
    </testsuite>
    <testsuite name="Tests\Tenant\Locations\Buildings\BuildingPictureTest" file="tests\Tenant\Locations\Buildings\BuildingPictureTest.php" tests="5" assertions="31" errors="0" failures="0" skipped="0" time="6.336965">
      <testcase name="it can add pictures to a building" file="tests\Tenant\Locations\Buildings\BuildingPictureTest.php::it can add pictures to a building" class="Tests\Tenant\Locations\Buildings\BuildingPictureTest" classname="Tests.Tenant.Locations.Buildings.BuildingPictureTest" assertions="5" time="1.509986"/>
      <testcase name="it can retrieve all pictures from a building" file="tests\Tenant\Locations\Buildings\BuildingPictureTest.php::it can retrieve all pictures from a building" class="Tests\Tenant\Locations\Buildings\BuildingPictureTest" classname="Tests.Tenant.Locations.Buildings.BuildingPictureTest" assertions="2" time="1.715319"/>
      <testcase name="it can delete a picture from a building" file="tests\Tenant\Locations\Buildings\BuildingPictureTest.php::it can delete a picture from a building" class="Tests\Tenant\Locations\Buildings\BuildingPictureTest" classname="Tests.Tenant.Locations.Buildings.BuildingPictureTest" assertions="9" time="1.008839"/>
      <testcase name="it does not delete picture directory if directory is not empty" file="tests\Tenant\Locations\Buildings\BuildingPictureTest.php::it does not delete picture directory if directory is not empty" class="Tests\Tenant\Locations\Buildings\BuildingPictureTest" classname="Tests.Tenant.Locations.Buildings.BuildingPictureTest" assertions="8" time="1.001923"/>
      <testcase name="it deletes picture directory if directory is empty" file="tests\Tenant\Locations\Buildings\BuildingPictureTest.php::it deletes picture directory if directory is empty" class="Tests\Tenant\Locations\Buildings\BuildingPictureTest" classname="Tests.Tenant.Locations.Buildings.BuildingPictureTest" assertions="7" time="1.100898"/>
    </testsuite>
    <testsuite name="Tests\Tenant\Locations\Buildings\BuildingTest" file="tests\Tenant\Locations\Buildings\BuildingTest.php" tests="18" assertions="133" errors="0" failures="1" skipped="0" time="21.626614">
      <testcase name="it can render the index buildings page" file="tests\Tenant\Locations\Buildings\BuildingTest.php::it can render the index buildings page" class="Tests\Tenant\Locations\Buildings\BuildingTest" classname="Tests.Tenant.Locations.Buildings.BuildingTest" assertions="13" time="1.482836">
        <failure type="PHPUnit\Framework\ExpectationFailedException">it can render the index buildings pageProperty [items.0.maintainable] does not exist.
Failed asserting that false is true.&#13;
at vendor\laravel\framework\src\Illuminate\Testing\Fluent\Concerns\Has.php:91
at tests\Tenant\Locations\Buildings\BuildingTest.php:40
at vendor\inertiajs\inertia-laravel\src\Testing\TestResponseMacros.php:25
at vendor\laravel\framework\src\Illuminate\Macroable\Traits\Macroable.php:126
at vendor\laravel\framework\src\Illuminate\Testing\TestResponse.php:1974
at tests\Tenant\Locations\Buildings\BuildingTest.php:36</failure>
      </testcase>
      <testcase name="it can render the create building page" file="tests\Tenant\Locations\Buildings\BuildingTest.php::it can render the create building page" class="Tests\Tenant\Locations\Buildings\BuildingTest" classname="Tests.Tenant.Locations.Buildings.BuildingTest" assertions="13" time="1.081711"/>
      <testcase name="it can create a new building with minimal information" file="tests\Tenant\Locations\Buildings\BuildingTest.php::it can create a new building with minimal information" class="Tests\Tenant\Locations\Buildings\BuildingTest" classname="Tests.Tenant.Locations.Buildings.BuildingTest" assertions="6" time="0.875857"/>
      <testcase name="it can create a new building" file="tests\Tenant\Locations\Buildings\BuildingTest.php::it can create a new building" class="Tests\Tenant\Locations\Buildings\BuildingTest" classname="Tests.Tenant.Locations.Buildings.BuildingTest" assertions="6" time="1.283802"/>
      <testcase name="it can create a new outdoor zone" file="tests\Tenant\Locations\Buildings\BuildingTest.php::it can create a new outdoor zone" class="Tests\Tenant\Locations\Buildings\BuildingTest" classname="Tests.Tenant.Locations.Buildings.BuildingTest" assertions="6" time="1.116320"/>
      <testcase name="it can create a new building with other materials" file="tests\Tenant\Locations\Buildings\BuildingTest.php::it can create a new building with other materials" class="Tests\Tenant\Locations\Buildings\BuildingTest" classname="Tests.Tenant.Locations.Buildings.BuildingTest" assertions="6" time="1.343134"/>
      <testcase name="it can attach a provider to a building's maintainable" file="tests\Tenant\Locations\Buildings\BuildingTest.php::it can attach a provider to a building's maintainable" class="Tests\Tenant\Locations\Buildings\BuildingTest" classname="Tests.Tenant.Locations.Buildings.BuildingTest" assertions="3" time="1.327560"/>
      <testcase name="it can upload several files to building" file="tests\Tenant\Locations\Buildings\BuildingTest.php::it can upload several files to building" class="Tests\Tenant\Locations\Buildings\BuildingTest" classname="Tests.Tenant.Locations.Buildings.BuildingTest" assertions="5" time="1.289824"/>
      <testcase name="it can render the show building page" file="tests\Tenant\Locations\Buildings\BuildingTest.php::it can render the show building page" class="Tests\Tenant\Locations\Buildings\BuildingTest" classname="Tests.Tenant.Locations.Buildings.BuildingTest" assertions="21" time="2.267902"/>
      <testcase name="it can render the update building page" file="tests\Tenant\Locations\Buildings\BuildingTest.php::it can render the update building page" class="Tests\Tenant\Locations\Buildings\BuildingTest" classname="Tests.Tenant.Locations.Buildings.BuildingTest" assertions="18" time="1.278719"/>
      <testcase name="it can update a building" file="tests\Tenant\Locations\Buildings\BuildingTest.php::it can update a building" class="Tests\Tenant\Locations\Buildings\BuildingTest" classname="Tests.Tenant.Locations.Buildings.BuildingTest" assertions="8" time="0.945878"/>
      <testcase name="it cannot update a building type of an existing building" file="tests\Tenant\Locations\Buildings\BuildingTest.php::it cannot update a building type of an existing building" class="Tests\Tenant\Locations\Buildings\BuildingTest" classname="Tests.Tenant.Locations.Buildings.BuildingTest" assertions="2" time="0.981947"/>
      <testcase name="it can delete a building" file="tests\Tenant\Locations\Buildings\BuildingTest.php::it can delete a building" class="Tests\Tenant\Locations\Buildings\BuildingTest" classname="Tests.Tenant.Locations.Buildings.BuildingTest" assertions="8" time="1.029981"/>
      <testcase name="it cannot delete a building which has related floors" file="tests\Tenant\Locations\Buildings\BuildingTest.php::it cannot delete a building which has related floors" class="Tests\Tenant\Locations\Buildings\BuildingTest" classname="Tests.Tenant.Locations.Buildings.BuildingTest" assertions="6" time="0.971318"/>
      <testcase name="it can update name and description of a document from a building " file="tests\Tenant\Locations\Buildings\BuildingTest.php::it can update name and description of a document from a building " class="Tests\Tenant\Locations\Buildings\BuildingTest" classname="Tests.Tenant.Locations.Buildings.BuildingTest" assertions="3" time="0.898901"/>
      <testcase name="it can add pictures to a building" file="tests\Tenant\Locations\Buildings\BuildingTest.php::it can add pictures to a building" class="Tests\Tenant\Locations\Buildings\BuildingTest" classname="Tests.Tenant.Locations.Buildings.BuildingTest" assertions="4" time="1.023702"/>
      <testcase name="it can retrieve all pictures from a building" file="tests\Tenant\Locations\Buildings\BuildingTest.php::it can retrieve all pictures from a building" class="Tests\Tenant\Locations\Buildings\BuildingTest" classname="Tests.Tenant.Locations.Buildings.BuildingTest" assertions="3" time="0.897829"/>
      <testcase name="it can retrieve all assets from a building" file="tests\Tenant\Locations\Buildings\BuildingTest.php::it can retrieve all assets from a building" class="Tests\Tenant\Locations\Buildings\BuildingTest" classname="Tests.Tenant.Locations.Buildings.BuildingTest" assertions="2" time="1.529392"/>
    </testsuite>
    <testsuite name="Tests\Tenant\Locations\Floors\FloorPictureTest" file="tests\Tenant\Locations\Floors\FloorPictureTest.php" tests="5" assertions="31" errors="0" failures="0" skipped="0" time="7.223515">
      <testcase name="it can add pictures to a floor" file="tests\Tenant\Locations\Floors\FloorPictureTest.php::it can add pictures to a floor" class="Tests\Tenant\Locations\Floors\FloorPictureTest" classname="Tests.Tenant.Locations.Floors.FloorPictureTest" assertions="5" time="1.713598"/>
      <testcase name="it can retrieve all pictures from a floor" file="tests\Tenant\Locations\Floors\FloorPictureTest.php::it can retrieve all pictures from a floor" class="Tests\Tenant\Locations\Floors\FloorPictureTest" classname="Tests.Tenant.Locations.Floors.FloorPictureTest" assertions="2" time="1.856233"/>
      <testcase name="it can delete a picture from a floor" file="tests\Tenant\Locations\Floors\FloorPictureTest.php::it can delete a picture from a floor" class="Tests\Tenant\Locations\Floors\FloorPictureTest" classname="Tests.Tenant.Locations.Floors.FloorPictureTest" assertions="9" time="1.253806"/>
      <testcase name="it does not delete picture directory if directory is not empty" file="tests\Tenant\Locations\Floors\FloorPictureTest.php::it does not delete picture directory if directory is not empty" class="Tests\Tenant\Locations\Floors\FloorPictureTest" classname="Tests.Tenant.Locations.Floors.FloorPictureTest" assertions="8" time="1.168791"/>
      <testcase name="it deletes picture directory if directory is empty" file="tests\Tenant\Locations\Floors\FloorPictureTest.php::it deletes picture directory if directory is empty" class="Tests\Tenant\Locations\Floors\FloorPictureTest" classname="Tests.Tenant.Locations.Floors.FloorPictureTest" assertions="7" time="1.231087"/>
    </testsuite>
    <testsuite name="Tests\Tenant\Locations\Floors\FloorTest" file="tests\Tenant\Locations\Floors\FloorTest.php" tests="12" assertions="109" errors="0" failures="1" skipped="0" time="15.408874">
      <testcase name="it can render the index floors page" file="tests\Tenant\Locations\Floors\FloorTest.php::it can render the index floors page" class="Tests\Tenant\Locations\Floors\FloorTest" classname="Tests.Tenant.Locations.Floors.FloorTest" assertions="13" time="1.567864">
        <failure type="PHPUnit\Framework\ExpectationFailedException">it can render the index floors pageProperty [items.0.maintainable] does not exist.
Failed asserting that false is true.&#13;
at vendor\laravel\framework\src\Illuminate\Testing\Fluent\Concerns\Has.php:91
at tests\Tenant\Locations\Floors\FloorTest.php:44
at vendor\inertiajs\inertia-laravel\src\Testing\TestResponseMacros.php:25
at vendor\laravel\framework\src\Illuminate\Macroable\Traits\Macroable.php:126
at vendor\laravel\framework\src\Illuminate\Testing\TestResponse.php:1974
at tests\Tenant\Locations\Floors\FloorTest.php:40</failure>
      </testcase>
      <testcase name="it can render the create floor page" file="tests\Tenant\Locations\Floors\FloorTest.php::it can render the create floor page" class="Tests\Tenant\Locations\Floors\FloorTest" classname="Tests.Tenant.Locations.Floors.FloorTest" assertions="14" time="1.387118"/>
      <testcase name="it can create a new floor" file="tests\Tenant\Locations\Floors\FloorTest.php::it can create a new floor" class="Tests\Tenant\Locations\Floors\FloorTest" classname="Tests.Tenant.Locations.Floors.FloorTest" assertions="8" time="1.225368"/>
      <testcase name="it can create a new floor with other materials" file="tests\Tenant\Locations\Floors\FloorTest.php::it can create a new floor with other materials" class="Tests\Tenant\Locations\Floors\FloorTest" classname="Tests.Tenant.Locations.Floors.FloorTest" assertions="8" time="1.657161"/>
      <testcase name="it can attach a provider to a floor's maintainable" file="tests\Tenant\Locations\Floors\FloorTest.php::it can attach a provider to a floor's maintainable" class="Tests\Tenant\Locations\Floors\FloorTest" classname="Tests.Tenant.Locations.Floors.FloorTest" assertions="3" time="1.195901"/>
      <testcase name="it can render the show floor page" file="tests\Tenant\Locations\Floors\FloorTest.php::it can render the show floor page" class="Tests\Tenant\Locations\Floors\FloorTest" classname="Tests.Tenant.Locations.Floors.FloorTest" assertions="21" time="1.226342"/>
      <testcase name="it can render the update floor page" file="tests\Tenant\Locations\Floors\FloorTest.php::it can render the update floor page" class="Tests\Tenant\Locations\Floors\FloorTest" classname="Tests.Tenant.Locations.Floors.FloorTest" assertions="18" time="1.162172"/>
      <testcase name="it can update a floor maintainable" file="tests\Tenant\Locations\Floors\FloorTest.php::it can update a floor maintainable" class="Tests\Tenant\Locations\Floors\FloorTest" classname="Tests.Tenant.Locations.Floors.FloorTest" assertions="9" time="1.203731"/>
      <testcase name="it fails when update of an existing floor with a non existing floor type" file="tests\Tenant\Locations\Floors\FloorTest.php::it fails when update of an existing floor with a non existing floor type" class="Tests\Tenant\Locations\Floors\FloorTest" classname="Tests.Tenant.Locations.Floors.FloorTest" assertions="2" time="1.350364"/>
      <testcase name="it cannot update a floor type of an existing floor" file="tests\Tenant\Locations\Floors\FloorTest.php::it cannot update a floor type of an existing floor" class="Tests\Tenant\Locations\Floors\FloorTest" classname="Tests.Tenant.Locations.Floors.FloorTest" assertions="2" time="1.030090"/>
      <testcase name="it can delete a floor and his maintainable" file="tests\Tenant\Locations\Floors\FloorTest.php::it can delete a floor and his maintainable" class="Tests\Tenant\Locations\Floors\FloorTest" classname="Tests.Tenant.Locations.Floors.FloorTest" assertions="9" time="1.073229"/>
      <testcase name="it can retrieve all assets from a floor" file="tests\Tenant\Locations\Floors\FloorTest.php::it can retrieve all assets from a floor" class="Tests\Tenant\Locations\Floors\FloorTest" classname="Tests.Tenant.Locations.Floors.FloorTest" assertions="2" time="1.329536"/>
    </testsuite>
    <testsuite name="Tests\Tenant\Locations\Rooms\RoomPictureTest" file="tests\Tenant\Locations\Rooms\RoomPictureTest.php" tests="5" assertions="31" errors="0" failures="0" skipped="0" time="6.585492">
      <testcase name="it can add pictures to a room" file="tests\Tenant\Locations\Rooms\RoomPictureTest.php::it can add pictures to a room" class="Tests\Tenant\Locations\Rooms\RoomPictureTest" classname="Tests.Tenant.Locations.Rooms.RoomPictureTest" assertions="5" time="1.491718"/>
      <testcase name="it can retrieve all pictures from a room" file="tests\Tenant\Locations\Rooms\RoomPictureTest.php::it can retrieve all pictures from a room" class="Tests\Tenant\Locations\Rooms\RoomPictureTest" classname="Tests.Tenant.Locations.Rooms.RoomPictureTest" assertions="2" time="1.188561"/>
      <testcase name="it can delete a picture from a floor" file="tests\Tenant\Locations\Rooms\RoomPictureTest.php::it can delete a picture from a floor" class="Tests\Tenant\Locations\Rooms\RoomPictureTest" classname="Tests.Tenant.Locations.Rooms.RoomPictureTest" assertions="9" time="1.204709"/>
      <testcase name="it does not delete picture directory if directory is not empty" file="tests\Tenant\Locations\Rooms\RoomPictureTest.php::it does not delete picture directory if directory is not empty" class="Tests\Tenant\Locations\Rooms\RoomPictureTest" classname="Tests.Tenant.Locations.Rooms.RoomPictureTest" assertions="8" time="1.142351"/>
      <testcase name="it deletes picture directory if directory is empty" file="tests\Tenant\Locations\Rooms\RoomPictureTest.php::it deletes picture directory if directory is empty" class="Tests\Tenant\Locations\Rooms\RoomPictureTest" classname="Tests.Tenant.Locations.Rooms.RoomPictureTest" assertions="7" time="1.558153"/>
    </testsuite>
    <testsuite name="Tests\Tenant\Locations\Rooms\RoomTest" file="tests\Tenant\Locations\Rooms\RoomTest.php" tests="17" assertions="138" errors="0" failures="1" skipped="0" time="24.880682">
      <testcase name="it can render the index rooms page" file="tests\Tenant\Locations\Rooms\RoomTest.php::it can render the index rooms page" class="Tests\Tenant\Locations\Rooms\RoomTest" classname="Tests.Tenant.Locations.Rooms.RoomTest" assertions="13" time="1.606606">
        <failure type="PHPUnit\Framework\ExpectationFailedException">it can render the index rooms pageProperty [items.0.maintainable] does not exist.
Failed asserting that false is true.&#13;
at vendor\laravel\framework\src\Illuminate\Testing\Fluent\Concerns\Has.php:91
at tests\Tenant\Locations\Rooms\RoomTest.php:58
at vendor\inertiajs\inertia-laravel\src\Testing\TestResponseMacros.php:25
at vendor\laravel\framework\src\Illuminate\Macroable\Traits\Macroable.php:126
at vendor\laravel\framework\src\Illuminate\Testing\TestResponse.php:1974
at tests\Tenant\Locations\Rooms\RoomTest.php:54</failure>
      </testcase>
      <testcase name="it can render the create room page" file="tests\Tenant\Locations\Rooms\RoomTest.php::it can render the create room page" class="Tests\Tenant\Locations\Rooms\RoomTest" classname="Tests.Tenant.Locations.Rooms.RoomTest" assertions="15" time="1.580259"/>
      <testcase name="it can create a new room" file="tests\Tenant\Locations\Rooms\RoomTest.php::it can create a new room" class="Tests\Tenant\Locations\Rooms\RoomTest" classname="Tests.Tenant.Locations.Rooms.RoomTest" assertions="6" time="1.804925"/>
      <testcase name="it can create a new room with other materials" file="tests\Tenant\Locations\Rooms\RoomTest.php::it can create a new room with other materials" class="Tests\Tenant\Locations\Rooms\RoomTest" classname="Tests.Tenant.Locations.Rooms.RoomTest" assertions="8" time="1.274935"/>
      <testcase name="it can attach a provider to a building's maintainable" file="tests\Tenant\Locations\Rooms\RoomTest.php::it can attach a provider to a building's maintainable" class="Tests\Tenant\Locations\Rooms\RoomTest" classname="Tests.Tenant.Locations.Rooms.RoomTest" assertions="3" time="1.044812"/>
      <testcase name="it can upload several files to site" file="tests\Tenant\Locations\Rooms\RoomTest.php::it can upload several files to site" class="Tests\Tenant\Locations\Rooms\RoomTest" classname="Tests.Tenant.Locations.Rooms.RoomTest" assertions="5" time="1.051570"/>
      <testcase name="it can render the show room page" file="tests\Tenant\Locations\Rooms\RoomTest.php::it can render the show room page" class="Tests\Tenant\Locations\Rooms\RoomTest" classname="Tests.Tenant.Locations.Rooms.RoomTest" assertions="21" time="1.064310"/>
      <testcase name="it can render the update room page" file="tests\Tenant\Locations\Rooms\RoomTest.php::it can render the update room page" class="Tests\Tenant\Locations\Rooms\RoomTest" classname="Tests.Tenant.Locations.Rooms.RoomTest" assertions="18" time="1.269810"/>
      <testcase name="it can update a room maintainable" file="tests\Tenant\Locations\Rooms\RoomTest.php::it can update a room maintainable" class="Tests\Tenant\Locations\Rooms\RoomTest" classname="Tests.Tenant.Locations.Rooms.RoomTest" assertions="7" time="1.112528"/>
      <testcase name="it cannot update a room type of an existing room" file="tests\Tenant\Locations\Rooms\RoomTest.php::it cannot update a room type of an existing room" class="Tests\Tenant\Locations\Rooms\RoomTest" classname="Tests.Tenant.Locations.Rooms.RoomTest" assertions="2" time="1.038044"/>
      <testcase name="it can delete a room and his maintainable" file="tests\Tenant\Locations\Rooms\RoomTest.php::it can delete a room and his maintainable" class="Tests\Tenant\Locations\Rooms\RoomTest" classname="Tests.Tenant.Locations.Rooms.RoomTest" assertions="10" time="1.198440"/>
      <testcase name="it can update name and description of a document from a site " file="tests\Tenant\Locations\Rooms\RoomTest.php::it can update name and description of a document from a site " class="Tests\Tenant\Locations\Rooms\RoomTest" classname="Tests.Tenant.Locations.Rooms.RoomTest" assertions="4" time="1.031918"/>
      <testcase name="it can upload a document to an existing room" file="tests\Tenant\Locations\Rooms\RoomTest.php::it can upload a document to an existing room" class="Tests\Tenant\Locations\Rooms\RoomTest" classname="Tests.Tenant.Locations.Rooms.RoomTest" assertions="6" time="1.175461"/>
      <testcase name="it can add pictures to a room" file="tests\Tenant\Locations\Rooms\RoomTest.php::it can add pictures to a room" class="Tests\Tenant\Locations\Rooms\RoomTest" classname="Tests.Tenant.Locations.Rooms.RoomTest" assertions="5" time="1.257802"/>
      <testcase name="it can retrieve all pictures from a room" file="tests\Tenant\Locations\Rooms\RoomTest.php::it can retrieve all pictures from a room" class="Tests\Tenant\Locations\Rooms\RoomTest" classname="Tests.Tenant.Locations.Rooms.RoomTest" assertions="4" time="1.460301"/>
      <testcase name="it can retrieve all assets from a room" file="tests\Tenant\Locations\Rooms\RoomTest.php::it can retrieve all assets from a room" class="Tests\Tenant\Locations\Rooms\RoomTest" classname="Tests.Tenant.Locations.Rooms.RoomTest" assertions="3" time="1.571889"/>
      <testcase name="it can change location type of a room and related assets" file="tests\Tenant\Locations\Rooms\RoomTest.php::it can change location type of a room and related assets" class="Tests\Tenant\Locations\Rooms\RoomTest" classname="Tests.Tenant.Locations.Rooms.RoomTest" assertions="8" time="4.337072"/>
    </testsuite>
    <testsuite name="Tests\Tenant\Locations\Sites\SitePictureTest" file="tests\Tenant\Locations\Sites\SitePictureTest.php" tests="5" assertions="31" errors="0" failures="0" skipped="0" time="7.778606">
      <testcase name="it can add pictures to a site" file="tests\Tenant\Locations\Sites\SitePictureTest.php::it can add pictures to a site" class="Tests\Tenant\Locations\Sites\SitePictureTest" classname="Tests.Tenant.Locations.Sites.SitePictureTest" assertions="5" time="2.034682"/>
      <testcase name="it can retrieve all pictures from a site" file="tests\Tenant\Locations\Sites\SitePictureTest.php::it can retrieve all pictures from a site" class="Tests\Tenant\Locations\Sites\SitePictureTest" classname="Tests.Tenant.Locations.Sites.SitePictureTest" assertions="2" time="1.328063"/>
      <testcase name="it can delete a picture from a site" file="tests\Tenant\Locations\Sites\SitePictureTest.php::it can delete a picture from a site" class="Tests\Tenant\Locations\Sites\SitePictureTest" classname="Tests.Tenant.Locations.Sites.SitePictureTest" assertions="9" time="1.762735"/>
      <testcase name="it deletes picture directory if directory is empty" file="tests\Tenant\Locations\Sites\SitePictureTest.php::it deletes picture directory if directory is empty" class="Tests\Tenant\Locations\Sites\SitePictureTest" classname="Tests.Tenant.Locations.Sites.SitePictureTest" assertions="7" time="1.228381"/>
      <testcase name="it does not delete picture directory if directory is not empty" file="tests\Tenant\Locations\Sites\SitePictureTest.php::it does not delete picture directory if directory is not empty" class="Tests\Tenant\Locations\Sites\SitePictureTest" classname="Tests.Tenant.Locations.Sites.SitePictureTest" assertions="8" time="1.424745"/>
    </testsuite>
    <testsuite name="Tests\Tenant\Locations\Sites\SiteTest" file="tests\Tenant\Locations\Sites\SiteTest.php" tests="13" assertions="93" errors="0" failures="0" skipped="0" time="16.041546">
      <testcase name="it can render the index sites page" file="tests\Tenant\Locations\Sites\SiteTest.php::it can render the index sites page" class="Tests\Tenant\Locations\Sites\SiteTest" classname="Tests.Tenant.Locations.Sites.SiteTest" assertions="12" time="1.474991"/>
      <testcase name="it can render the create site page" file="tests\Tenant\Locations\Sites\SiteTest.php::it can render the create site page" class="Tests\Tenant\Locations\Sites\SiteTest" classname="Tests.Tenant.Locations.Sites.SiteTest" assertions="12" time="1.363923"/>
      <testcase name="it can create a new site" file="tests\Tenant\Locations\Sites\SiteTest.php::it can create a new site" class="Tests\Tenant\Locations\Sites\SiteTest" classname="Tests.Tenant.Locations.Sites.SiteTest" assertions="6" time="1.475570"/>
      <testcase name="it can create a new site with other matherials" file="tests\Tenant\Locations\Sites\SiteTest.php::it can create a new site with other matherials" class="Tests\Tenant\Locations\Sites\SiteTest" classname="Tests.Tenant.Locations.Sites.SiteTest" assertions="6" time="1.383542"/>
      <testcase name="it can render the show site page" file="tests\Tenant\Locations\Sites\SiteTest.php::it can render the show site page" class="Tests\Tenant\Locations\Sites\SiteTest" classname="Tests.Tenant.Locations.Sites.SiteTest" assertions="19" time="1.474659"/>
      <testcase name="it can render the update site page" file="tests\Tenant\Locations\Sites\SiteTest.php::it can render the update site page" class="Tests\Tenant\Locations\Sites\SiteTest" classname="Tests.Tenant.Locations.Sites.SiteTest" assertions="15" time="0.894883"/>
      <testcase name="it can update a site maintainable and his name and description" file="tests\Tenant\Locations\Sites\SiteTest.php::it can update a site maintainable and his name and description" class="Tests\Tenant\Locations\Sites\SiteTest" classname="Tests.Tenant.Locations.Sites.SiteTest" assertions="7" time="1.162695"/>
      <testcase name="it cannot update a site type of an existing site" file="tests\Tenant\Locations\Sites\SiteTest.php::it cannot update a site type of an existing site" class="Tests\Tenant\Locations\Sites\SiteTest" classname="Tests.Tenant.Locations.Sites.SiteTest" assertions="2" time="1.308298"/>
      <testcase name="it can delete a site" file="tests\Tenant\Locations\Sites\SiteTest.php::it can delete a site" class="Tests\Tenant\Locations\Sites\SiteTest" classname="Tests.Tenant.Locations.Sites.SiteTest" assertions="4" time="1.045197"/>
      <testcase name="it cannot delete a site which has buildings" file="tests\Tenant\Locations\Sites\SiteTest.php::it cannot delete a site which has buildings" class="Tests\Tenant\Locations\Sites\SiteTest" classname="Tests.Tenant.Locations.Sites.SiteTest" assertions="1" time="1.077334"/>
      <testcase name="it cannot delete a site which has related buildings and related floors" file="tests\Tenant\Locations\Sites\SiteTest.php::it cannot delete a site which has related buildings and related floors" class="Tests\Tenant\Locations\Sites\SiteTest" classname="Tests.Tenant.Locations.Sites.SiteTest" assertions="5" time="1.267389"/>
      <testcase name="it can retrieve all assets from a site" file="tests\Tenant\Locations\Sites\SiteTest.php::it can retrieve all assets from a site" class="Tests\Tenant\Locations\Sites\SiteTest" classname="Tests.Tenant.Locations.Sites.SiteTest" assertions="2" time="1.091991"/>
      <testcase name="it can attach a provider to a site's maintainable" file="tests\Tenant\Locations\Sites\SiteTest.php::it can attach a provider to a site's maintainable" class="Tests\Tenant\Locations\Sites\SiteTest" classname="Tests.Tenant.Locations.Sites.SiteTest" assertions="2" time="1.021074"/>
    </testsuite>
    <testsuite name="Tests\Tenant\Maintainable\MaintainableMaintenanceTest" file="tests\Tenant\Maintainable\MaintainableMaintenanceTest.php" tests="6" assertions="14" errors="0" failures="0" skipped="0" time="8.014585">
      <testcase name="it can create with need_maintenance without last_maintenance_date and calculates next_maintenance_date" file="tests\Tenant\Maintainable\MaintainableMaintenanceTest.php::it can create with need_maintenance without last_maintenance_date and calculates next_maintenance_date" class="Tests\Tenant\Maintainable\MaintainableMaintenanceTest" classname="Tests.Tenant.Maintainable.MaintainableMaintenanceTest" assertions="2" time="1.658285"/>
      <testcase name="it can create with need_maintenance with last_maintenance_date and calculates next_maintenance_date based on it" file="tests\Tenant\Maintainable\MaintainableMaintenanceTest.php::it can create with need_maintenance with last_maintenance_date and calculates next_maintenance_date based on it" class="Tests\Tenant\Maintainable\MaintainableMaintenanceTest" classname="Tests.Tenant.Maintainable.MaintainableMaintenanceTest" assertions="2" time="1.269112"/>
      <testcase name="it can create with need_maintenance with last_maintenance_date and next_maintenance_date" file="tests\Tenant\Maintainable\MaintainableMaintenanceTest.php::it can create with need_maintenance with last_maintenance_date and next_maintenance_date" class="Tests\Tenant\Maintainable\MaintainableMaintenanceTest" classname="Tests.Tenant.Maintainable.MaintainableMaintenanceTest" assertions="2" time="1.147425"/>
      <testcase name="it can update the maintenance frequency and change the next_maintenance_date accordingly" file="tests\Tenant\Maintainable\MaintainableMaintenanceTest.php::it can update the maintenance frequency and change the next_maintenance_date accordingly" class="Tests\Tenant\Maintainable\MaintainableMaintenanceTest" classname="Tests.Tenant.Maintainable.MaintainableMaintenanceTest" assertions="3" time="1.212171"/>
      <testcase name="it can update the maintenance_next_date manually" file="tests\Tenant\Maintainable\MaintainableMaintenanceTest.php::it can update the maintenance_next_date manually" class="Tests\Tenant\Maintainable\MaintainableMaintenanceTest" classname="Tests.Tenant.Maintainable.MaintainableMaintenanceTest" assertions="3" time="1.384947"/>
      <testcase name="it updates the next_maintenance_date when maintenance marked as done" file="tests\Tenant\Maintainable\MaintainableMaintenanceTest.php::it updates the next_maintenance_date when maintenance marked as done" class="Tests\Tenant\Maintainable\MaintainableMaintenanceTest" classname="Tests.Tenant.Maintainable.MaintainableMaintenanceTest" assertions="2" time="1.342645"/>
    </testsuite>
    <testsuite name="Tests\Tenant\Maintainable\MaintainableValidationRulesTest" file="tests\Tenant\Maintainable\MaintainableValidationRulesTest.php" tests="10" assertions="20" errors="0" failures="0" skipped="0" time="11.881126">
      <testcase name="it fails when name is more than 100 chars" file="tests\Tenant\Maintainable\MaintainableValidationRulesTest.php::it fails when name is more than 100 chars" class="Tests\Tenant\Maintainable\MaintainableValidationRulesTest" classname="Tests.Tenant.Maintainable.MaintainableValidationRulesTest" assertions="2" time="1.440881"/>
      <testcase name="it fails when description is more than 255 chars" file="tests\Tenant\Maintainable\MaintainableValidationRulesTest.php::it fails when description is more than 255 chars" class="Tests\Tenant\Maintainable\MaintainableValidationRulesTest" classname="Tests.Tenant.Maintainable.MaintainableValidationRulesTest" assertions="2" time="1.021587"/>
      <testcase name="it passes when end_warranty_date is filled and under_warranty is true" file="tests\Tenant\Maintainable\MaintainableValidationRulesTest.php::it passes when end_warranty_date is filled and under_warranty is true" class="Tests\Tenant\Maintainable\MaintainableValidationRulesTest" classname="Tests.Tenant.Maintainable.MaintainableValidationRulesTest" assertions="2" time="1.114181"/>
      <testcase name="it fails when end_warranty_date is missing and under_warranty is true" file="tests\Tenant\Maintainable\MaintainableValidationRulesTest.php::it fails when end_warranty_date is missing and under_warranty is true" class="Tests\Tenant\Maintainable\MaintainableValidationRulesTest" classname="Tests.Tenant.Maintainable.MaintainableValidationRulesTest" assertions="2" time="0.980978"/>
      <testcase name="it passes when purchase_cost has max 2 decimals and 7 digits" file="tests\Tenant\Maintainable\MaintainableValidationRulesTest.php::it passes when purchase_cost has max 2 decimals and 7 digits" class="Tests\Tenant\Maintainable\MaintainableValidationRulesTest" classname="Tests.Tenant.Maintainable.MaintainableValidationRulesTest" assertions="2" time="1.322945"/>
      <testcase name="it fails when purchase_cost is negative" file="tests\Tenant\Maintainable\MaintainableValidationRulesTest.php::it fails when purchase_cost is negative" class="Tests\Tenant\Maintainable\MaintainableValidationRulesTest" classname="Tests.Tenant.Maintainable.MaintainableValidationRulesTest" assertions="2" time="1.343667"/>
      <testcase name="it fails when purchase_cost has more than 2 decimals" file="tests\Tenant\Maintainable\MaintainableValidationRulesTest.php::it fails when purchase_cost has more than 2 decimals" class="Tests\Tenant\Maintainable\MaintainableValidationRulesTest" classname="Tests.Tenant.Maintainable.MaintainableValidationRulesTest" assertions="2" time="1.185504"/>
      <testcase name="it passes when purchase_date is equal today" file="tests\Tenant\Maintainable\MaintainableValidationRulesTest.php::it passes when purchase_date is equal today" class="Tests\Tenant\Maintainable\MaintainableValidationRulesTest" classname="Tests.Tenant.Maintainable.MaintainableValidationRulesTest" assertions="2" time="1.215660"/>
      <testcase name="it fails when purchase_date is after today" file="tests\Tenant\Maintainable\MaintainableValidationRulesTest.php::it fails when purchase_date is after today" class="Tests\Tenant\Maintainable\MaintainableValidationRulesTest" classname="Tests.Tenant.Maintainable.MaintainableValidationRulesTest" assertions="2" time="1.198172"/>
      <testcase name="it fails when end_warranty_date is before purchase_date" file="tests\Tenant\Maintainable\MaintainableValidationRulesTest.php::it fails when end_warranty_date is before purchase_date" class="Tests\Tenant\Maintainable\MaintainableValidationRulesTest" classname="Tests.Tenant.Maintainable.MaintainableValidationRulesTest" assertions="2" time="1.057553"/>
    </testsuite>
    <testsuite name="Tests\Tenant\Maintainable\MaintainableWarrantyTest" file="tests\Tenant\Maintainable\MaintainableWarrantyTest.php" tests="7" assertions="22" errors="0" failures="0" skipped="0" time="11.562110">
      <testcase name="it can create with under_warranty to true" file="tests\Tenant\Maintainable\MaintainableWarrantyTest.php::it can create with under_warranty to true" class="Tests\Tenant\Maintainable\MaintainableWarrantyTest" classname="Tests.Tenant.Maintainable.MaintainableWarrantyTest" assertions="3" time="1.496965"/>
      <testcase name="it can update end_warranty_date " file="tests\Tenant\Maintainable\MaintainableWarrantyTest.php::it can update end_warranty_date " class="Tests\Tenant\Maintainable\MaintainableWarrantyTest" classname="Tests.Tenant.Maintainable.MaintainableWarrantyTest" assertions="5" time="1.638867"/>
      <testcase name="it can update under_warranty from true to false" file="tests\Tenant\Maintainable\MaintainableWarrantyTest.php::it can update under_warranty from true to false" class="Tests\Tenant\Maintainable\MaintainableWarrantyTest" classname="Tests.Tenant.Maintainable.MaintainableWarrantyTest" assertions="5" time="1.354324"/>
      <testcase name="it can have a end_warranty_date before today if under_warranty is false" file="tests\Tenant\Maintainable\MaintainableWarrantyTest.php::it can have a end_warranty_date before today if under_warranty is false" class="Tests\Tenant\Maintainable\MaintainableWarrantyTest" classname="Tests.Tenant.Maintainable.MaintainableWarrantyTest" assertions="3" time="1.441836"/>
      <testcase name="it fails when end_warranty_date is before purchase_date" file="tests\Tenant\Maintainable\MaintainableWarrantyTest.php::it fails when end_warranty_date is before purchase_date" class="Tests\Tenant\Maintainable\MaintainableWarrantyTest" classname="Tests.Tenant.Maintainable.MaintainableWarrantyTest" assertions="2" time="1.362109"/>
      <testcase name="it passes when end_warranty_date is filled and under_warranty is true" file="tests\Tenant\Maintainable\MaintainableWarrantyTest.php::it passes when end_warranty_date is filled and under_warranty is true" class="Tests\Tenant\Maintainable\MaintainableWarrantyTest" classname="Tests.Tenant.Maintainable.MaintainableWarrantyTest" assertions="2" time="2.792397"/>
      <testcase name="it fails when end_warranty_date is missing and under_warranty is true" file="tests\Tenant\Maintainable\MaintainableWarrantyTest.php::it fails when end_warranty_date is missing and under_warranty is true" class="Tests\Tenant\Maintainable\MaintainableWarrantyTest" classname="Tests.Tenant.Maintainable.MaintainableWarrantyTest" assertions="2" time="1.475611"/>
    </testsuite>
    <testsuite name="Tests\Tenant\Maintainable\MaintenanceFrequencyTest" file="tests\Tenant\Maintainable\MaintenanceFrequencyTest.php" tests="3" assertions="6" errors="0" failures="0" skipped="0" time="5.143832">
      <testcase name="it can add maintenance frequency to asset without next_maintenance_date" file="tests\Tenant\Maintainable\MaintenanceFrequencyTest.php::it can add maintenance frequency to asset without next_maintenance_date" class="Tests\Tenant\Maintainable\MaintenanceFrequencyTest" classname="Tests.Tenant.Maintainable.MaintenanceFrequencyTest" assertions="2" time="1.787749"/>
      <testcase name="it can add maintenance frequency to asset with next_maintenance_date" file="tests\Tenant\Maintainable\MaintenanceFrequencyTest.php::it can add maintenance frequency to asset with next_maintenance_date" class="Tests\Tenant\Maintainable\MaintenanceFrequencyTest" classname="Tests.Tenant.Maintainable.MaintenanceFrequencyTest" assertions="2" time="1.696023"/>
      <testcase name="it can update maintenance frequency/date from asset" file="tests\Tenant\Maintainable\MaintenanceFrequencyTest.php::it can update maintenance frequency/date from asset" class="Tests\Tenant\Maintainable\MaintenanceFrequencyTest" classname="Tests.Tenant.Maintainable.MaintenanceFrequencyTest" assertions="2" time="1.660060"/>
    </testsuite>
    <testsuite name="Tests\Tenant\Maintainable\MaintenanceManagerTest" file="tests\Tenant\Maintainable\MaintenanceManagerTest.php" tests="10" assertions="40" errors="0" failures="0" skipped="0" time="12.511075">
      <testcase name="it can add a maintenance manager when creating asset" file="tests\Tenant\Maintainable\MaintenanceManagerTest.php::it can add a maintenance manager when creating asset" class="Tests\Tenant\Maintainable\MaintenanceManagerTest" classname="Tests.Tenant.Maintainable.MaintenanceManagerTest" assertions="4" time="1.296963"/>
      <testcase name="it can update a maintenance manager on existing asset" file="tests\Tenant\Maintainable\MaintenanceManagerTest.php::it can update a maintenance manager on existing asset" class="Tests\Tenant\Maintainable\MaintenanceManagerTest" classname="Tests.Tenant.Maintainable.MaintenanceManagerTest" assertions="4" time="1.355156"/>
      <testcase name="it can add a maintenance manager when creating site" file="tests\Tenant\Maintainable\MaintenanceManagerTest.php::it can add a maintenance manager when creating site" class="Tests\Tenant\Maintainable\MaintenanceManagerTest" classname="Tests.Tenant.Maintainable.MaintenanceManagerTest" assertions="4" time="1.124483"/>
      <testcase name="it can update a maintenance manager of an existing site" file="tests\Tenant\Maintainable\MaintenanceManagerTest.php::it can update a maintenance manager of an existing site" class="Tests\Tenant\Maintainable\MaintenanceManagerTest" classname="Tests.Tenant.Maintainable.MaintenanceManagerTest" assertions="4" time="1.167186"/>
      <testcase name="it can add a maintenance manager when creating building" file="tests\Tenant\Maintainable\MaintenanceManagerTest.php::it can add a maintenance manager when creating building" class="Tests\Tenant\Maintainable\MaintenanceManagerTest" classname="Tests.Tenant.Maintainable.MaintenanceManagerTest" assertions="4" time="1.539492"/>
      <testcase name="it can update a maintenance manager of existing building" file="tests\Tenant\Maintainable\MaintenanceManagerTest.php::it can update a maintenance manager of existing building" class="Tests\Tenant\Maintainable\MaintenanceManagerTest" classname="Tests.Tenant.Maintainable.MaintenanceManagerTest" assertions="4" time="1.368805"/>
      <testcase name="it can add a maintenance manager when creating floor" file="tests\Tenant\Maintainable\MaintenanceManagerTest.php::it can add a maintenance manager when creating floor" class="Tests\Tenant\Maintainable\MaintenanceManagerTest" classname="Tests.Tenant.Maintainable.MaintenanceManagerTest" assertions="4" time="1.153736"/>
      <testcase name="it can update a maintenance manager of existing floor" file="tests\Tenant\Maintainable\MaintenanceManagerTest.php::it can update a maintenance manager of existing floor" class="Tests\Tenant\Maintainable\MaintenanceManagerTest" classname="Tests.Tenant.Maintainable.MaintenanceManagerTest" assertions="4" time="1.189287"/>
      <testcase name="it can add a maintenance manager when creating room" file="tests\Tenant\Maintainable\MaintenanceManagerTest.php::it can add a maintenance manager when creating room" class="Tests\Tenant\Maintainable\MaintenanceManagerTest" classname="Tests.Tenant.Maintainable.MaintenanceManagerTest" assertions="4" time="1.098980"/>
      <testcase name="it can update a maintenance manager of existing room" file="tests\Tenant\Maintainable\MaintenanceManagerTest.php::it can update a maintenance manager of existing room" class="Tests\Tenant\Maintainable\MaintenanceManagerTest" classname="Tests.Tenant.Maintainable.MaintenanceManagerTest" assertions="4" time="1.216987"/>
    </testsuite>
    <testsuite name="Tests\Tenant\Notifications\Assets\AssetDepreciationNotificationsTest" file="tests\Tenant\Notifications\Assets\AssetDepreciationNotificationsTest.php" tests="8" assertions="34" errors="0" failures="0" skipped="0" time="11.743812">
      <testcase name="it creates depreciation notification for a new created asset" file="tests\Tenant\Notifications\Assets\AssetDepreciationNotificationsTest.php::it creates depreciation notification for a new created asset" class="Tests\Tenant\Notifications\Assets\AssetDepreciationNotificationsTest" classname="Tests.Tenant.Notifications.Assets.AssetDepreciationNotificationsTest" assertions="3" time="1.536100"/>
      <testcase name="it creates depreciation notification when depreciables passes from false to true" file="tests\Tenant\Notifications\Assets\AssetDepreciationNotificationsTest.php::it creates depreciation notification when depreciables passes from false to true" class="Tests\Tenant\Notifications\Assets\AssetDepreciationNotificationsTest" classname="Tests.Tenant.Notifications.Assets.AssetDepreciationNotificationsTest" assertions="6" time="1.426086"/>
      <testcase name="it updates depreciation notification when depreciable_end_date changes" file="tests\Tenant\Notifications\Assets\AssetDepreciationNotificationsTest.php::it updates depreciation notification when depreciable_end_date changes" class="Tests\Tenant\Notifications\Assets\AssetDepreciationNotificationsTest" classname="Tests.Tenant.Notifications.Assets.AssetDepreciationNotificationsTest" assertions="8" time="1.364031"/>
      <testcase name="it creates no notification if depreciation_end_date is in the past" file="tests\Tenant\Notifications\Assets\AssetDepreciationNotificationsTest.php::it creates no notification if depreciation_end_date is in the past" class="Tests\Tenant\Notifications\Assets\AssetDepreciationNotificationsTest" classname="Tests.Tenant.Notifications.Assets.AssetDepreciationNotificationsTest" assertions="1" time="1.245695"/>
      <testcase name="it deletes depreciation notification when depreciable passes from true to false" file="tests\Tenant\Notifications\Assets\AssetDepreciationNotificationsTest.php::it deletes depreciation notification when depreciable passes from true to false" class="Tests\Tenant\Notifications\Assets\AssetDepreciationNotificationsTest" classname="Tests.Tenant.Notifications.Assets.AssetDepreciationNotificationsTest" assertions="6" time="1.642825"/>
      <testcase name="it update notifications when notification preference depreciation_end_date of user changes" file="tests\Tenant\Notifications\Assets\AssetDepreciationNotificationsTest.php::it update notifications when notification preference depreciation_end_date of user changes" class="Tests\Tenant\Notifications\Assets\AssetDepreciationNotificationsTest" classname="Tests.Tenant.Notifications.Assets.AssetDepreciationNotificationsTest" assertions="4" time="1.458003"/>
      <testcase name="it deletes notifications when notification preference depreciation_end_date of user is disabled" file="tests\Tenant\Notifications\Assets\AssetDepreciationNotificationsTest.php::it deletes notifications when notification preference depreciation_end_date of user is disabled" class="Tests\Tenant\Notifications\Assets\AssetDepreciationNotificationsTest" classname="Tests.Tenant.Notifications.Assets.AssetDepreciationNotificationsTest" assertions="3" time="1.412884"/>
      <testcase name="it creates notifications when notification preference depreciation_end_date of user is enabled" file="tests\Tenant\Notifications\Assets\AssetDepreciationNotificationsTest.php::it creates notifications when notification preference depreciation_end_date of user is enabled" class="Tests\Tenant\Notifications\Assets\AssetDepreciationNotificationsTest" classname="Tests.Tenant.Notifications.Assets.AssetDepreciationNotificationsTest" assertions="3" time="1.658189"/>
    </testsuite>
    <testsuite name="Tests\Tenant\Notifications\Assets\AssetMaintenanceManagerNotificationsTest" file="tests\Tenant\Notifications\Assets\AssetMaintenanceManagerNotificationsTest.php" tests="3" assertions="20" errors="0" failures="0" skipped="0" time="4.679429">
      <testcase name="it creates notification when adding maintenance manager to existing asset without maintenance manager" file="tests\Tenant\Notifications\Assets\AssetMaintenanceManagerNotificationsTest.php::it creates notification when adding maintenance manager to existing asset without maintenance manager" class="Tests\Tenant\Notifications\Assets\AssetMaintenanceManagerNotificationsTest" classname="Tests.Tenant.Notifications.Assets.AssetMaintenanceManagerNotificationsTest" assertions="8" time="1.844006"/>
      <testcase name="it creates notification when replacing maintenance manager for the asset and removes notifications for old maintenance manager" file="tests\Tenant\Notifications\Assets\AssetMaintenanceManagerNotificationsTest.php::it creates notification when replacing maintenance manager for the asset and removes notifications for old maintenance manager" class="Tests\Tenant\Notifications\Assets\AssetMaintenanceManagerNotificationsTest" classname="Tests.Tenant.Notifications.Assets.AssetMaintenanceManagerNotificationsTest" assertions="4" time="1.362447"/>
      <testcase name="it deletes notification when removing maintenance_manager from existing asset" file="tests\Tenant\Notifications\Assets\AssetMaintenanceManagerNotificationsTest.php::it deletes notification when removing maintenance_manager from existing asset" class="Tests\Tenant\Notifications\Assets\AssetMaintenanceManagerNotificationsTest" classname="Tests.Tenant.Notifications.Assets.AssetMaintenanceManagerNotificationsTest" assertions="8" time="1.472976"/>
    </testsuite>
    <testsuite name="Tests\Tenant\Notifications\Assets\AssetMaintenanceNotificationsTest" file="tests\Tenant\Notifications\Assets\AssetMaintenanceNotificationsTest.php" tests="8" assertions="34" errors="0" failures="0" skipped="0" time="12.122890">
      <testcase name="it creates next maintenance date notification for a new created asset with maintenance manager" file="tests\Tenant\Notifications\Assets\AssetMaintenanceNotificationsTest.php::it creates next maintenance date notification for a new created asset with maintenance manager" class="Tests\Tenant\Notifications\Assets\AssetMaintenanceNotificationsTest" classname="Tests.Tenant.Notifications.Assets.AssetMaintenanceNotificationsTest" assertions="4" time="1.722884"/>
      <testcase name="it updates notification when updating next_maintenance_date of the asset" file="tests\Tenant\Notifications\Assets\AssetMaintenanceNotificationsTest.php::it updates notification when updating next_maintenance_date of the asset" class="Tests\Tenant\Notifications\Assets\AssetMaintenanceNotificationsTest" classname="Tests.Tenant.Notifications.Assets.AssetMaintenanceNotificationsTest" assertions="8" time="1.294164"/>
      <testcase name="it creates no notification if next_maintenance_date is in the past" file="tests\Tenant\Notifications\Assets\AssetMaintenanceNotificationsTest.php::it creates no notification if next_maintenance_date is in the past" class="Tests\Tenant\Notifications\Assets\AssetMaintenanceNotificationsTest" classname="Tests.Tenant.Notifications.Assets.AssetMaintenanceNotificationsTest" assertions="1" time="1.266756"/>
      <testcase name="it creates notification when need_maintenance passes from false to true" file="tests\Tenant\Notifications\Assets\AssetMaintenanceNotificationsTest.php::it creates notification when need_maintenance passes from false to true" class="Tests\Tenant\Notifications\Assets\AssetMaintenanceNotificationsTest" classname="Tests.Tenant.Notifications.Assets.AssetMaintenanceNotificationsTest" assertions="6" time="1.183943"/>
      <testcase name="it deletes notification when need_maintenance passes from true to false" file="tests\Tenant\Notifications\Assets\AssetMaintenanceNotificationsTest.php::it deletes notification when need_maintenance passes from true to false" class="Tests\Tenant\Notifications\Assets\AssetMaintenanceNotificationsTest" classname="Tests.Tenant.Notifications.Assets.AssetMaintenanceNotificationsTest" assertions="6" time="2.024916"/>
      <testcase name="it update notifications when notification preference next_maintenance_date of user changes" file="tests\Tenant\Notifications\Assets\AssetMaintenanceNotificationsTest.php::it update notifications when notification preference next_maintenance_date of user changes" class="Tests\Tenant\Notifications\Assets\AssetMaintenanceNotificationsTest" classname="Tests.Tenant.Notifications.Assets.AssetMaintenanceNotificationsTest" assertions="3" time="1.827630"/>
      <testcase name="it deletes notifications when notification preference next_maintenance_date of user is disabled" file="tests\Tenant\Notifications\Assets\AssetMaintenanceNotificationsTest.php::it deletes notifications when notification preference next_maintenance_date of user is disabled" class="Tests\Tenant\Notifications\Assets\AssetMaintenanceNotificationsTest" classname="Tests.Tenant.Notifications.Assets.AssetMaintenanceNotificationsTest" assertions="3" time="1.237284"/>
      <testcase name="it creates notifications when notification preference next_maintenance_date of user is enabled" file="tests\Tenant\Notifications\Assets\AssetMaintenanceNotificationsTest.php::it creates notifications when notification preference next_maintenance_date of user is enabled" class="Tests\Tenant\Notifications\Assets\AssetMaintenanceNotificationsTest" classname="Tests.Tenant.Notifications.Assets.AssetMaintenanceNotificationsTest" assertions="3" time="1.565312"/>
    </testsuite>
    <testsuite name="Tests\Tenant\Notifications\Assets\AssetNotificationsTest" file="tests\Tenant\Notifications\Assets\AssetNotificationsTest.php" tests="3" assertions="18" errors="0" failures="0" skipped="0" time="4.749413">
      <testcase name="it creates all notifications (warranty, depreciable, maintenance) for a new created asset" file="tests\Tenant\Notifications\Assets\AssetNotificationsTest.php::it creates all notifications (warranty, depreciable, maintenance) for a new created asset" class="Tests\Tenant\Notifications\Assets\AssetNotificationsTest" classname="Tests.Tenant.Notifications.Assets.AssetNotificationsTest" assertions="9" time="1.752884"/>
      <testcase name="it deletes notifications when asset is soft deleted" file="tests\Tenant\Notifications\Assets\AssetNotificationsTest.php::it deletes notifications when asset is soft deleted" class="Tests\Tenant\Notifications\Assets\AssetNotificationsTest" classname="Tests.Tenant.Notifications.Assets.AssetNotificationsTest" assertions="4" time="1.520541"/>
      <testcase name="it creates notifications when asset is restored" file="tests\Tenant\Notifications\Assets\AssetNotificationsTest.php::it creates notifications when asset is restored" class="Tests\Tenant\Notifications\Assets\AssetNotificationsTest" classname="Tests.Tenant.Notifications.Assets.AssetNotificationsTest" assertions="5" time="1.475988"/>
    </testsuite>
    <testsuite name="Tests\Tenant\Notifications\Assets\AssetWarrantyNotificationsTest" file="tests\Tenant\Notifications\Assets\AssetWarrantyNotificationsTest.php" tests="7" assertions="35" errors="0" failures="0" skipped="0" time="10.622521">
      <testcase name="it creates end of warranty notification for a new created asset" file="tests\Tenant\Notifications\Assets\AssetWarrantyNotificationsTest.php::it creates end of warranty notification for a new created asset" class="Tests\Tenant\Notifications\Assets\AssetWarrantyNotificationsTest" classname="Tests.Tenant.Notifications.Assets.AssetWarrantyNotificationsTest" assertions="4" time="1.578871"/>
      <testcase name="it updates end of warranty notification when end_warranty_date changes" file="tests\Tenant\Notifications\Assets\AssetWarrantyNotificationsTest.php::it updates end of warranty notification when end_warranty_date changes" class="Tests\Tenant\Notifications\Assets\AssetWarrantyNotificationsTest" classname="Tests.Tenant.Notifications.Assets.AssetWarrantyNotificationsTest" assertions="7" time="1.785494"/>
      <testcase name="it creates warranty notifications when under_warranty passes from false to true" file="tests\Tenant\Notifications\Assets\AssetWarrantyNotificationsTest.php::it creates warranty notifications when under_warranty passes from false to true" class="Tests\Tenant\Notifications\Assets\AssetWarrantyNotificationsTest" classname="Tests.Tenant.Notifications.Assets.AssetWarrantyNotificationsTest" assertions="7" time="1.526835"/>
      <testcase name="it deletes warranty notifications when under_warranty passes from true to false" file="tests\Tenant\Notifications\Assets\AssetWarrantyNotificationsTest.php::it deletes warranty notifications when under_warranty passes from true to false" class="Tests\Tenant\Notifications\Assets\AssetWarrantyNotificationsTest" classname="Tests.Tenant.Notifications.Assets.AssetWarrantyNotificationsTest" assertions="7" time="1.599572"/>
      <testcase name="it update notifications when notification preference end_warranty_date of user changes" file="tests\Tenant\Notifications\Assets\AssetWarrantyNotificationsTest.php::it update notifications when notification preference end_warranty_date of user changes" class="Tests\Tenant\Notifications\Assets\AssetWarrantyNotificationsTest" classname="Tests.Tenant.Notifications.Assets.AssetWarrantyNotificationsTest" assertions="4" time="1.604077"/>
      <testcase name="it deletes notifications when notification preference end_warranty_date of user is disabled" file="tests\Tenant\Notifications\Assets\AssetWarrantyNotificationsTest.php::it deletes notifications when notification preference end_warranty_date of user is disabled" class="Tests\Tenant\Notifications\Assets\AssetWarrantyNotificationsTest" classname="Tests.Tenant.Notifications.Assets.AssetWarrantyNotificationsTest" assertions="3" time="1.212336"/>
      <testcase name="it creates notifications when notification preference warranty_end_date of user is enabled" file="tests\Tenant\Notifications\Assets\AssetWarrantyNotificationsTest.php::it creates notifications when notification preference warranty_end_date of user is enabled" class="Tests\Tenant\Notifications\Assets\AssetWarrantyNotificationsTest" classname="Tests.Tenant.Notifications.Assets.AssetWarrantyNotificationsTest" assertions="3" time="1.315336"/>
    </testsuite>
    <testsuite name="Tests\Tenant\Notifications\Buildings\BuildingMaintenanceManagerNotificationsTest" file="tests\Tenant\Notifications\Buildings\BuildingMaintenanceManagerNotificationsTest.php" tests="3" assertions="20" errors="0" failures="0" skipped="0" time="4.667844">
      <testcase name="it creates notification when adding maintenance manager to existing building without maintenance manager" file="tests\Tenant\Notifications\Buildings\BuildingMaintenanceManagerNotificationsTest.php::it creates notification when adding maintenance manager to existing building without maintenance manager" class="Tests\Tenant\Notifications\Buildings\BuildingMaintenanceManagerNotificationsTest" classname="Tests.Tenant.Notifications.Buildings.BuildingMaintenanceManagerNotificationsTest" assertions="8" time="1.534769"/>
      <testcase name="it creates notification when replacing maintenance manager for the building and removes notifications for old maintenance manager" file="tests\Tenant\Notifications\Buildings\BuildingMaintenanceManagerNotificationsTest.php::it creates notification when replacing maintenance manager for the building and removes notifications for old maintenance manager" class="Tests\Tenant\Notifications\Buildings\BuildingMaintenanceManagerNotificationsTest" classname="Tests.Tenant.Notifications.Buildings.BuildingMaintenanceManagerNotificationsTest" assertions="4" time="1.671453"/>
      <testcase name="it deletes notification when removing maintenance_manager from existing site" file="tests\Tenant\Notifications\Buildings\BuildingMaintenanceManagerNotificationsTest.php::it deletes notification when removing maintenance_manager from existing site" class="Tests\Tenant\Notifications\Buildings\BuildingMaintenanceManagerNotificationsTest" classname="Tests.Tenant.Notifications.Buildings.BuildingMaintenanceManagerNotificationsTest" assertions="8" time="1.461623"/>
    </testsuite>
    <testsuite name="Tests\Tenant\Notifications\Buildings\BuildingMaintenanceNotificationsTest" file="tests\Tenant\Notifications\Buildings\BuildingMaintenanceNotificationsTest.php" tests="8" assertions="34" errors="0" failures="0" skipped="0" time="11.098807">
      <testcase name="it creates next maintenance date notification for a new created site with maintenance manager" file="tests\Tenant\Notifications\Buildings\BuildingMaintenanceNotificationsTest.php::it creates next maintenance date notification for a new created site with maintenance manager" class="Tests\Tenant\Notifications\Buildings\BuildingMaintenanceNotificationsTest" classname="Tests.Tenant.Notifications.Buildings.BuildingMaintenanceNotificationsTest" assertions="4" time="1.556562"/>
      <testcase name="it updates notification when updating next_maintenance_date of the asset" file="tests\Tenant\Notifications\Buildings\BuildingMaintenanceNotificationsTest.php::it updates notification when updating next_maintenance_date of the asset" class="Tests\Tenant\Notifications\Buildings\BuildingMaintenanceNotificationsTest" classname="Tests.Tenant.Notifications.Buildings.BuildingMaintenanceNotificationsTest" assertions="8" time="1.236650"/>
      <testcase name="it creates no notification if next_maintenance_date is in the past" file="tests\Tenant\Notifications\Buildings\BuildingMaintenanceNotificationsTest.php::it creates no notification if next_maintenance_date is in the past" class="Tests\Tenant\Notifications\Buildings\BuildingMaintenanceNotificationsTest" classname="Tests.Tenant.Notifications.Buildings.BuildingMaintenanceNotificationsTest" assertions="1" time="1.105993"/>
      <testcase name="it creates notification when need_maintenance passes from false to true" file="tests\Tenant\Notifications\Buildings\BuildingMaintenanceNotificationsTest.php::it creates notification when need_maintenance passes from false to true" class="Tests\Tenant\Notifications\Buildings\BuildingMaintenanceNotificationsTest" classname="Tests.Tenant.Notifications.Buildings.BuildingMaintenanceNotificationsTest" assertions="6" time="1.598107"/>
      <testcase name="it deletes notification when need_maintenance passes from true to false" file="tests\Tenant\Notifications\Buildings\BuildingMaintenanceNotificationsTest.php::it deletes notification when need_maintenance passes from true to false" class="Tests\Tenant\Notifications\Buildings\BuildingMaintenanceNotificationsTest" classname="Tests.Tenant.Notifications.Buildings.BuildingMaintenanceNotificationsTest" assertions="6" time="1.412516"/>
      <testcase name="it update notifications when notification preference next_maintenance_date of user changes" file="tests\Tenant\Notifications\Buildings\BuildingMaintenanceNotificationsTest.php::it update notifications when notification preference next_maintenance_date of user changes" class="Tests\Tenant\Notifications\Buildings\BuildingMaintenanceNotificationsTest" classname="Tests.Tenant.Notifications.Buildings.BuildingMaintenanceNotificationsTest" assertions="3" time="1.212329"/>
      <testcase name="it deletes notifications when notification preference next_maintenance_date of user is disabled" file="tests\Tenant\Notifications\Buildings\BuildingMaintenanceNotificationsTest.php::it deletes notifications when notification preference next_maintenance_date of user is disabled" class="Tests\Tenant\Notifications\Buildings\BuildingMaintenanceNotificationsTest" classname="Tests.Tenant.Notifications.Buildings.BuildingMaintenanceNotificationsTest" assertions="3" time="1.676119"/>
      <testcase name="it creates notifications when notification preference next_maintenance_date of user is enabled" file="tests\Tenant\Notifications\Buildings\BuildingMaintenanceNotificationsTest.php::it creates notifications when notification preference next_maintenance_date of user is enabled" class="Tests\Tenant\Notifications\Buildings\BuildingMaintenanceNotificationsTest" classname="Tests.Tenant.Notifications.Buildings.BuildingMaintenanceNotificationsTest" assertions="3" time="1.300530"/>
    </testsuite>
    <testsuite name="Tests\Tenant\Notifications\Buildings\BuildingNotificationTest" file="tests\Tenant\Notifications\Buildings\BuildingNotificationTest.php" tests="2" assertions="10" errors="0" failures="0" skipped="0" time="3.097058">
      <testcase name="it creates notifications (maintenance, warranty) for a new created building" file="tests\Tenant\Notifications\Buildings\BuildingNotificationTest.php::it creates notifications (maintenance, warranty) for a new created building" class="Tests\Tenant\Notifications\Buildings\BuildingNotificationTest" classname="Tests.Tenant.Notifications.Buildings.BuildingNotificationTest" assertions="5" time="1.653048"/>
      <testcase name="it deletes notifications when building is deleted" file="tests\Tenant\Notifications\Buildings\BuildingNotificationTest.php::it deletes notifications when building is deleted" class="Tests\Tenant\Notifications\Buildings\BuildingNotificationTest" classname="Tests.Tenant.Notifications.Buildings.BuildingNotificationTest" assertions="5" time="1.444011"/>
    </testsuite>
    <testsuite name="Tests\Tenant\Notifications\Buildings\BuildingWarrantyNotificationsTest" file="tests\Tenant\Notifications\Buildings\BuildingWarrantyNotificationsTest.php" tests="7" assertions="38" errors="0" failures="0" skipped="0" time="12.876179">
      <testcase name="it creates end of warranty notification for a new created building" file="tests\Tenant\Notifications\Buildings\BuildingWarrantyNotificationsTest.php::it creates end of warranty notification for a new created building" class="Tests\Tenant\Notifications\Buildings\BuildingWarrantyNotificationsTest" classname="Tests.Tenant.Notifications.Buildings.BuildingWarrantyNotificationsTest" assertions="4" time="1.756623"/>
      <testcase name="it updates end of warranty notification when end_warranty_date changes" file="tests\Tenant\Notifications\Buildings\BuildingWarrantyNotificationsTest.php::it updates end of warranty notification when end_warranty_date changes" class="Tests\Tenant\Notifications\Buildings\BuildingWarrantyNotificationsTest" classname="Tests.Tenant.Notifications.Buildings.BuildingWarrantyNotificationsTest" assertions="7" time="1.425299"/>
      <testcase name="it creates warranty notifications when under_warranty passes from false to true" file="tests\Tenant\Notifications\Buildings\BuildingWarrantyNotificationsTest.php::it creates warranty notifications when under_warranty passes from false to true" class="Tests\Tenant\Notifications\Buildings\BuildingWarrantyNotificationsTest" classname="Tests.Tenant.Notifications.Buildings.BuildingWarrantyNotificationsTest" assertions="7" time="1.458821"/>
      <testcase name="it deletes warranty notifications when under_warranty passes from true to false" file="tests\Tenant\Notifications\Buildings\BuildingWarrantyNotificationsTest.php::it deletes warranty notifications when under_warranty passes from true to false" class="Tests\Tenant\Notifications\Buildings\BuildingWarrantyNotificationsTest" classname="Tests.Tenant.Notifications.Buildings.BuildingWarrantyNotificationsTest" assertions="7" time="1.544921"/>
      <testcase name="it update notifications when notification preference end_warranty_date of user changes" file="tests\Tenant\Notifications\Buildings\BuildingWarrantyNotificationsTest.php::it update notifications when notification preference end_warranty_date of user changes" class="Tests\Tenant\Notifications\Buildings\BuildingWarrantyNotificationsTest" classname="Tests.Tenant.Notifications.Buildings.BuildingWarrantyNotificationsTest" assertions="7" time="1.587594"/>
      <testcase name="it deletes notifications when notification preference end_warranty_date of user is disabled" file="tests\Tenant\Notifications\Buildings\BuildingWarrantyNotificationsTest.php::it deletes notifications when notification preference end_warranty_date of user is disabled" class="Tests\Tenant\Notifications\Buildings\BuildingWarrantyNotificationsTest" classname="Tests.Tenant.Notifications.Buildings.BuildingWarrantyNotificationsTest" assertions="3" time="3.013706"/>
      <testcase name="it creates notifications when notification preference warranty_end_date of user is enabled" file="tests\Tenant\Notifications\Buildings\BuildingWarrantyNotificationsTest.php::it creates notifications when notification preference warranty_end_date of user is enabled" class="Tests\Tenant\Notifications\Buildings\BuildingWarrantyNotificationsTest" classname="Tests.Tenant.Notifications.Buildings.BuildingWarrantyNotificationsTest" assertions="3" time="2.089216"/>
    </testsuite>
    <testsuite name="Tests\Tenant\Notifications\Contracts\ContractEndDateNotificationsTest" file="tests\Tenant\Notifications\Contracts\ContractEndDateNotificationsTest.php" tests="5" assertions="20" errors="0" failures="0" skipped="0" time="8.397312">
      <testcase name="it creates the end_date notification for a new created contract" file="tests\Tenant\Notifications\Contracts\ContractEndDateNotificationsTest.php::it creates the end_date notification for a new created contract" class="Tests\Tenant\Notifications\Contracts\ContractEndDateNotificationsTest" classname="Tests.Tenant.Notifications.Contracts.ContractEndDateNotificationsTest" assertions="3" time="2.178899"/>
      <testcase name="it update notifications when notification_delay_days preference for end_date of user changes" file="tests\Tenant\Notifications\Contracts\ContractEndDateNotificationsTest.php::it update notifications when notification_delay_days preference for end_date of user changes" class="Tests\Tenant\Notifications\Contracts\ContractEndDateNotificationsTest" classname="Tests.Tenant.Notifications.Contracts.ContractEndDateNotificationsTest" assertions="5" time="1.818226"/>
      <testcase name="it deletes notifications when notification preference end_date of user is disabled" file="tests\Tenant\Notifications\Contracts\ContractEndDateNotificationsTest.php::it deletes notifications when notification preference end_date of user is disabled" class="Tests\Tenant\Notifications\Contracts\ContractEndDateNotificationsTest" classname="Tests.Tenant.Notifications.Contracts.ContractEndDateNotificationsTest" assertions="5" time="1.465333"/>
      <testcase name="it creates notifications when notification preference end_date of user is enabled" file="tests\Tenant\Notifications\Contracts\ContractEndDateNotificationsTest.php::it creates notifications when notification preference end_date of user is enabled" class="Tests\Tenant\Notifications\Contracts\ContractEndDateNotificationsTest" classname="Tests.Tenant.Notifications.Contracts.ContractEndDateNotificationsTest" assertions="4" time="1.369311"/>
      <testcase name="it updates notification for a specific contract when end_date changes" file="tests\Tenant\Notifications\Contracts\ContractEndDateNotificationsTest.php::it updates notification for a specific contract when end_date changes" class="Tests\Tenant\Notifications\Contracts\ContractEndDateNotificationsTest" classname="Tests.Tenant.Notifications.Contracts.ContractEndDateNotificationsTest" assertions="3" time="1.565542"/>
    </testsuite>
    <testsuite name="Tests\Tenant\Notifications\Contracts\ContractNoticePeriodNotificationsTest" file="tests\Tenant\Notifications\Contracts\ContractNoticePeriodNotificationsTest.php" tests="5" assertions="20" errors="0" failures="0" skipped="0" time="9.257419">
      <testcase name="it creates the notice_date notification for a new created contract" file="tests\Tenant\Notifications\Contracts\ContractNoticePeriodNotificationsTest.php::it creates the notice_date notification for a new created contract" class="Tests\Tenant\Notifications\Contracts\ContractNoticePeriodNotificationsTest" classname="Tests.Tenant.Notifications.Contracts.ContractNoticePeriodNotificationsTest" assertions="2" time="1.870655"/>
      <testcase name="it update notifications when notification_delay_days preference for notice_date of user changes" file="tests\Tenant\Notifications\Contracts\ContractNoticePeriodNotificationsTest.php::it update notifications when notification_delay_days preference for notice_date of user changes" class="Tests\Tenant\Notifications\Contracts\ContractNoticePeriodNotificationsTest" classname="Tests.Tenant.Notifications.Contracts.ContractNoticePeriodNotificationsTest" assertions="6" time="2.135202"/>
      <testcase name="it deletes notifications when notification preference notice_date of user is disabled" file="tests\Tenant\Notifications\Contracts\ContractNoticePeriodNotificationsTest.php::it deletes notifications when notification preference notice_date of user is disabled" class="Tests\Tenant\Notifications\Contracts\ContractNoticePeriodNotificationsTest" classname="Tests.Tenant.Notifications.Contracts.ContractNoticePeriodNotificationsTest" assertions="4" time="2.063646"/>
      <testcase name="it creates notifications when notification preference notice_date of user is enabled" file="tests\Tenant\Notifications\Contracts\ContractNoticePeriodNotificationsTest.php::it creates notifications when notification preference notice_date of user is enabled" class="Tests\Tenant\Notifications\Contracts\ContractNoticePeriodNotificationsTest" classname="Tests.Tenant.Notifications.Contracts.ContractNoticePeriodNotificationsTest" assertions="5" time="1.907941"/>
      <testcase name="it updates notification for a specific contract when notice_period changes" file="tests\Tenant\Notifications\Contracts\ContractNoticePeriodNotificationsTest.php::it updates notification for a specific contract when notice_period changes" class="Tests\Tenant\Notifications\Contracts\ContractNoticePeriodNotificationsTest" classname="Tests.Tenant.Notifications.Contracts.ContractNoticePeriodNotificationsTest" assertions="3" time="1.279975"/>
    </testsuite>
    <testsuite name="Tests\Tenant\Notifications\Floors\FloorMaintenanceManagerNotificationsTest" file="tests\Tenant\Notifications\Floors\FloorMaintenanceManagerNotificationsTest.php" tests="3" assertions="20" errors="0" failures="0" skipped="0" time="4.955193">
      <testcase name="it creates notification when adding maintenance manager to existing building without maintenance manager" file="tests\Tenant\Notifications\Floors\FloorMaintenanceManagerNotificationsTest.php::it creates notification when adding maintenance manager to existing building without maintenance manager" class="Tests\Tenant\Notifications\Floors\FloorMaintenanceManagerNotificationsTest" classname="Tests.Tenant.Notifications.Floors.FloorMaintenanceManagerNotificationsTest" assertions="8" time="1.625164"/>
      <testcase name="it creates notification when replacing maintenance manager for the building and removes notifications for old maintenance manager" file="tests\Tenant\Notifications\Floors\FloorMaintenanceManagerNotificationsTest.php::it creates notification when replacing maintenance manager for the building and removes notifications for old maintenance manager" class="Tests\Tenant\Notifications\Floors\FloorMaintenanceManagerNotificationsTest" classname="Tests.Tenant.Notifications.Floors.FloorMaintenanceManagerNotificationsTest" assertions="4" time="1.771839"/>
      <testcase name="it deletes notification when removing maintenance_manager from existing site" file="tests\Tenant\Notifications\Floors\FloorMaintenanceManagerNotificationsTest.php::it deletes notification when removing maintenance_manager from existing site" class="Tests\Tenant\Notifications\Floors\FloorMaintenanceManagerNotificationsTest" classname="Tests.Tenant.Notifications.Floors.FloorMaintenanceManagerNotificationsTest" assertions="8" time="1.558191"/>
    </testsuite>
    <testsuite name="Tests\Tenant\Notifications\Floors\FloorMaintenanceNotificationsTest" file="tests\Tenant\Notifications\Floors\FloorMaintenanceNotificationsTest.php" tests="8" assertions="34" errors="0" failures="0" skipped="0" time="12.659331">
      <testcase name="it creates next maintenance date notification for a new created site with maintenance manager" file="tests\Tenant\Notifications\Floors\FloorMaintenanceNotificationsTest.php::it creates next maintenance date notification for a new created site with maintenance manager" class="Tests\Tenant\Notifications\Floors\FloorMaintenanceNotificationsTest" classname="Tests.Tenant.Notifications.Floors.FloorMaintenanceNotificationsTest" assertions="4" time="2.078176"/>
      <testcase name="it updates notification when updating next_maintenance_date of the asset" file="tests\Tenant\Notifications\Floors\FloorMaintenanceNotificationsTest.php::it updates notification when updating next_maintenance_date of the asset" class="Tests\Tenant\Notifications\Floors\FloorMaintenanceNotificationsTest" classname="Tests.Tenant.Notifications.Floors.FloorMaintenanceNotificationsTest" assertions="8" time="1.422859"/>
      <testcase name="it creates no notification if next_maintenance_date is in the past" file="tests\Tenant\Notifications\Floors\FloorMaintenanceNotificationsTest.php::it creates no notification if next_maintenance_date is in the past" class="Tests\Tenant\Notifications\Floors\FloorMaintenanceNotificationsTest" classname="Tests.Tenant.Notifications.Floors.FloorMaintenanceNotificationsTest" assertions="1" time="1.159193"/>
      <testcase name="it creates notification when need_maintenance passes from false to true" file="tests\Tenant\Notifications\Floors\FloorMaintenanceNotificationsTest.php::it creates notification when need_maintenance passes from false to true" class="Tests\Tenant\Notifications\Floors\FloorMaintenanceNotificationsTest" classname="Tests.Tenant.Notifications.Floors.FloorMaintenanceNotificationsTest" assertions="6" time="1.565629"/>
      <testcase name="it deletes notification when need_maintenance passes from true to false" file="tests\Tenant\Notifications\Floors\FloorMaintenanceNotificationsTest.php::it deletes notification when need_maintenance passes from true to false" class="Tests\Tenant\Notifications\Floors\FloorMaintenanceNotificationsTest" classname="Tests.Tenant.Notifications.Floors.FloorMaintenanceNotificationsTest" assertions="6" time="1.606222"/>
      <testcase name="it update notifications when notification preference next_maintenance_date of user changes" file="tests\Tenant\Notifications\Floors\FloorMaintenanceNotificationsTest.php::it update notifications when notification preference next_maintenance_date of user changes" class="Tests\Tenant\Notifications\Floors\FloorMaintenanceNotificationsTest" classname="Tests.Tenant.Notifications.Floors.FloorMaintenanceNotificationsTest" assertions="3" time="1.519763"/>
      <testcase name="it deletes notifications when notification preference next_maintenance_date of user is disabled" file="tests\Tenant\Notifications\Floors\FloorMaintenanceNotificationsTest.php::it deletes notifications when notification preference next_maintenance_date of user is disabled" class="Tests\Tenant\Notifications\Floors\FloorMaintenanceNotificationsTest" classname="Tests.Tenant.Notifications.Floors.FloorMaintenanceNotificationsTest" assertions="3" time="1.579816"/>
      <testcase name="it creates notifications when notification preference next_maintenance_date of user is enabled" file="tests\Tenant\Notifications\Floors\FloorMaintenanceNotificationsTest.php::it creates notifications when notification preference next_maintenance_date of user is enabled" class="Tests\Tenant\Notifications\Floors\FloorMaintenanceNotificationsTest" classname="Tests.Tenant.Notifications.Floors.FloorMaintenanceNotificationsTest" assertions="3" time="1.727671"/>
    </testsuite>
    <testsuite name="Tests\Tenant\Notifications\Floors\FloorNotificationTest" file="tests\Tenant\Notifications\Floors\FloorNotificationTest.php" tests="2" assertions="10" errors="0" failures="0" skipped="0" time="3.959927">
      <testcase name="it creates notifications (maintenance, warranty) for a new created building" file="tests\Tenant\Notifications\Floors\FloorNotificationTest.php::it creates notifications (maintenance, warranty) for a new created building" class="Tests\Tenant\Notifications\Floors\FloorNotificationTest" classname="Tests.Tenant.Notifications.Floors.FloorNotificationTest" assertions="5" time="2.353961"/>
      <testcase name="it deletes notifications when building is deleted" file="tests\Tenant\Notifications\Floors\FloorNotificationTest.php::it deletes notifications when building is deleted" class="Tests\Tenant\Notifications\Floors\FloorNotificationTest" classname="Tests.Tenant.Notifications.Floors.FloorNotificationTest" assertions="5" time="1.605966"/>
    </testsuite>
    <testsuite name="Tests\Tenant\Notifications\Floors\FloorWarrantyNotificationsTest" file="tests\Tenant\Notifications\Floors\FloorWarrantyNotificationsTest.php" tests="7" assertions="38" errors="0" failures="0" skipped="0" time="10.426412">
      <testcase name="it creates end of warranty notification for a new created room" file="tests\Tenant\Notifications\Floors\FloorWarrantyNotificationsTest.php::it creates end of warranty notification for a new created room" class="Tests\Tenant\Notifications\Floors\FloorWarrantyNotificationsTest" classname="Tests.Tenant.Notifications.Floors.FloorWarrantyNotificationsTest" assertions="4" time="1.576465"/>
      <testcase name="it updates end of warranty notification when end_warranty_date changes" file="tests\Tenant\Notifications\Floors\FloorWarrantyNotificationsTest.php::it updates end of warranty notification when end_warranty_date changes" class="Tests\Tenant\Notifications\Floors\FloorWarrantyNotificationsTest" classname="Tests.Tenant.Notifications.Floors.FloorWarrantyNotificationsTest" assertions="7" time="1.340548"/>
      <testcase name="it creates warranty notifications when under_warranty passes from false to true" file="tests\Tenant\Notifications\Floors\FloorWarrantyNotificationsTest.php::it creates warranty notifications when under_warranty passes from false to true" class="Tests\Tenant\Notifications\Floors\FloorWarrantyNotificationsTest" classname="Tests.Tenant.Notifications.Floors.FloorWarrantyNotificationsTest" assertions="7" time="1.149308"/>
      <testcase name="it deletes warranty notifications when under_warranty passes from true to false" file="tests\Tenant\Notifications\Floors\FloorWarrantyNotificationsTest.php::it deletes warranty notifications when under_warranty passes from true to false" class="Tests\Tenant\Notifications\Floors\FloorWarrantyNotificationsTest" classname="Tests.Tenant.Notifications.Floors.FloorWarrantyNotificationsTest" assertions="7" time="1.405940"/>
      <testcase name="it update notifications when notification preference end_warranty_date of user changes" file="tests\Tenant\Notifications\Floors\FloorWarrantyNotificationsTest.php::it update notifications when notification preference end_warranty_date of user changes" class="Tests\Tenant\Notifications\Floors\FloorWarrantyNotificationsTest" classname="Tests.Tenant.Notifications.Floors.FloorWarrantyNotificationsTest" assertions="7" time="1.626309"/>
      <testcase name="it deletes notifications when notification preference end_warranty_date of user is disabled" file="tests\Tenant\Notifications\Floors\FloorWarrantyNotificationsTest.php::it deletes notifications when notification preference end_warranty_date of user is disabled" class="Tests\Tenant\Notifications\Floors\FloorWarrantyNotificationsTest" classname="Tests.Tenant.Notifications.Floors.FloorWarrantyNotificationsTest" assertions="3" time="1.967823"/>
      <testcase name="it creates notifications when notification preference warranty_end_date of user is enabled" file="tests\Tenant\Notifications\Floors\FloorWarrantyNotificationsTest.php::it creates notifications when notification preference warranty_end_date of user is enabled" class="Tests\Tenant\Notifications\Floors\FloorWarrantyNotificationsTest" classname="Tests.Tenant.Notifications.Floors.FloorWarrantyNotificationsTest" assertions="3" time="1.360018"/>
    </testsuite>
    <testsuite name="Tests\Tenant\Notifications\Interventions\InterventionPlannedAtNotificationsTest" file="tests\Tenant\Notifications\Interventions\InterventionPlannedAtNotificationsTest.php" tests="15" assertions="67" errors="0" failures="0" skipped="0" time="21.219228">
      <testcase name="it creates a user preference &quot;planned_at&quot; notification when user (admin) is created" file="tests\Tenant\Notifications\Interventions\InterventionPlannedAtNotificationsTest.php::it creates a user preference &quot;planned_at&quot; notification when user (admin) is created" class="Tests\Tenant\Notifications\Interventions\InterventionPlannedAtNotificationsTest" classname="Tests.Tenant.Notifications.Interventions.InterventionPlannedAtNotificationsTest" assertions="2" time="1.786337"/>
      <testcase name="it creates a user preference &quot;planned_at&quot; notification when user (maintenance manager) is created" file="tests\Tenant\Notifications\Interventions\InterventionPlannedAtNotificationsTest.php::it creates a user preference &quot;planned_at&quot; notification when user (maintenance manager) is created" class="Tests\Tenant\Notifications\Interventions\InterventionPlannedAtNotificationsTest" classname="Tests.Tenant.Notifications.Interventions.InterventionPlannedAtNotificationsTest" assertions="2" time="1.719913"/>
      <testcase name="it creates the planned_at notification for a new created intervention for an ASSET" file="tests\Tenant\Notifications\Interventions\InterventionPlannedAtNotificationsTest.php::it creates the planned_at notification for a new created intervention for an ASSET" class="Tests\Tenant\Notifications\Interventions\InterventionPlannedAtNotificationsTest" classname="Tests.Tenant.Notifications.Interventions.InterventionPlannedAtNotificationsTest" assertions="4" time="1.309565"/>
      <testcase name="it adds notification when maintenance_manager is linked to an ASSET" file="tests\Tenant\Notifications\Interventions\InterventionPlannedAtNotificationsTest.php::it adds notification when maintenance_manager is linked to an ASSET" class="Tests\Tenant\Notifications\Interventions\InterventionPlannedAtNotificationsTest" classname="Tests.Tenant.Notifications.Interventions.InterventionPlannedAtNotificationsTest" assertions="5" time="1.309428"/>
      <testcase name="it adds notification when maintenance_manager is linked to an asset and intervention already exists" file="tests\Tenant\Notifications\Interventions\InterventionPlannedAtNotificationsTest.php::it adds notification when maintenance_manager is linked to an asset and intervention already exists" class="Tests\Tenant\Notifications\Interventions\InterventionPlannedAtNotificationsTest" classname="Tests.Tenant.Notifications.Interventions.InterventionPlannedAtNotificationsTest" assertions="7" time="1.397363"/>
      <testcase name="it does not remove notification when maintenance_manager is removed from an ASSET but maintenance_manager is also admin" file="tests\Tenant\Notifications\Interventions\InterventionPlannedAtNotificationsTest.php::it does not remove notification when maintenance_manager is removed from an ASSET but maintenance_manager is also admin" class="Tests\Tenant\Notifications\Interventions\InterventionPlannedAtNotificationsTest" classname="Tests.Tenant.Notifications.Interventions.InterventionPlannedAtNotificationsTest" assertions="6" time="1.269144"/>
      <testcase name="it removes notification when maintenance_manager is removed from an ASSET" file="tests\Tenant\Notifications\Interventions\InterventionPlannedAtNotificationsTest.php::it removes notification when maintenance_manager is removed from an ASSET" class="Tests\Tenant\Notifications\Interventions\InterventionPlannedAtNotificationsTest" classname="Tests.Tenant.Notifications.Interventions.InterventionPlannedAtNotificationsTest" assertions="6" time="1.328651"/>
      <testcase name="it does not create a planned_at notification when planned_at is not defined for intervention" file="tests\Tenant\Notifications\Interventions\InterventionPlannedAtNotificationsTest.php::it does not create a planned_at notification when planned_at is not defined for intervention" class="Tests\Tenant\Notifications\Interventions\InterventionPlannedAtNotificationsTest" classname="Tests.Tenant.Notifications.Interventions.InterventionPlannedAtNotificationsTest" assertions="4" time="1.203941"/>
      <testcase name="it updates notification when planned_at changes for an intervention" file="tests\Tenant\Notifications\Interventions\InterventionPlannedAtNotificationsTest.php::it updates notification when planned_at changes for an intervention" class="Tests\Tenant\Notifications\Interventions\InterventionPlannedAtNotificationsTest" classname="Tests.Tenant.Notifications.Interventions.InterventionPlannedAtNotificationsTest" assertions="6" time="1.433385"/>
      <testcase name="it removes planned_at notification when intervention status changes to completed" file="tests\Tenant\Notifications\Interventions\InterventionPlannedAtNotificationsTest.php::it removes planned_at notification when intervention status changes to completed" class="Tests\Tenant\Notifications\Interventions\InterventionPlannedAtNotificationsTest" classname="Tests.Tenant.Notifications.Interventions.InterventionPlannedAtNotificationsTest" assertions="3" time="1.638609"/>
      <testcase name="it removes planned_at notification when intervention status changes to cancelled" file="tests\Tenant\Notifications\Interventions\InterventionPlannedAtNotificationsTest.php::it removes planned_at notification when intervention status changes to cancelled" class="Tests\Tenant\Notifications\Interventions\InterventionPlannedAtNotificationsTest" classname="Tests.Tenant.Notifications.Interventions.InterventionPlannedAtNotificationsTest" assertions="3" time="1.739877"/>
      <testcase name="it deletes notification when intervention is deleted" file="tests\Tenant\Notifications\Interventions\InterventionPlannedAtNotificationsTest.php::it deletes notification when intervention is deleted" class="Tests\Tenant\Notifications\Interventions\InterventionPlannedAtNotificationsTest" classname="Tests.Tenant.Notifications.Interventions.InterventionPlannedAtNotificationsTest" assertions="3" time="1.233718"/>
      <testcase name="it deletes notifcation when user_preference planned_at is disabled" file="tests\Tenant\Notifications\Interventions\InterventionPlannedAtNotificationsTest.php::it deletes notifcation when user_preference planned_at is disabled" class="Tests\Tenant\Notifications\Interventions\InterventionPlannedAtNotificationsTest" classname="Tests.Tenant.Notifications.Interventions.InterventionPlannedAtNotificationsTest" assertions="4" time="1.291284"/>
      <testcase name="it creates notification when user_preference planned_at is enabled" file="tests\Tenant\Notifications\Interventions\InterventionPlannedAtNotificationsTest.php::it creates notification when user_preference planned_at is enabled" class="Tests\Tenant\Notifications\Interventions\InterventionPlannedAtNotificationsTest" classname="Tests.Tenant.Notifications.Interventions.InterventionPlannedAtNotificationsTest" assertions="6" time="1.284160"/>
      <testcase name="it updates notification when user_preference notification_delay_days for planned_at changes" file="tests\Tenant\Notifications\Interventions\InterventionPlannedAtNotificationsTest.php::it updates notification when user_preference notification_delay_days for planned_at changes" class="Tests\Tenant\Notifications\Interventions\InterventionPlannedAtNotificationsTest" classname="Tests.Tenant.Notifications.Interventions.InterventionPlannedAtNotificationsTest" assertions="6" time="1.273854"/>
    </testsuite>
    <testsuite name="Tests\Tenant\Notifications\Rooms\RoomMaintenanceManagerNotificationsTest" file="tests\Tenant\Notifications\Rooms\RoomMaintenanceManagerNotificationsTest.php" tests="3" assertions="20" errors="0" failures="0" skipped="0" time="4.214036">
      <testcase name="it creates notification when adding maintenance manager to existing building without maintenance manager" file="tests\Tenant\Notifications\Rooms\RoomMaintenanceManagerNotificationsTest.php::it creates notification when adding maintenance manager to existing building without maintenance manager" class="Tests\Tenant\Notifications\Rooms\RoomMaintenanceManagerNotificationsTest" classname="Tests.Tenant.Notifications.Rooms.RoomMaintenanceManagerNotificationsTest" assertions="8" time="1.667521"/>
      <testcase name="it creates notification when replacing maintenance manager for the building and removes notifications for old maintenance manager" file="tests\Tenant\Notifications\Rooms\RoomMaintenanceManagerNotificationsTest.php::it creates notification when replacing maintenance manager for the building and removes notifications for old maintenance manager" class="Tests\Tenant\Notifications\Rooms\RoomMaintenanceManagerNotificationsTest" classname="Tests.Tenant.Notifications.Rooms.RoomMaintenanceManagerNotificationsTest" assertions="4" time="1.225669"/>
      <testcase name="it deletes notification when removing maintenance_manager from existing site" file="tests\Tenant\Notifications\Rooms\RoomMaintenanceManagerNotificationsTest.php::it deletes notification when removing maintenance_manager from existing site" class="Tests\Tenant\Notifications\Rooms\RoomMaintenanceManagerNotificationsTest" classname="Tests.Tenant.Notifications.Rooms.RoomMaintenanceManagerNotificationsTest" assertions="8" time="1.320845"/>
    </testsuite>
    <testsuite name="Tests\Tenant\Notifications\Rooms\RoomMaintenanceNotificationsTest" file="tests\Tenant\Notifications\Rooms\RoomMaintenanceNotificationsTest.php" tests="8" assertions="34" errors="0" failures="0" skipped="0" time="11.867166">
      <testcase name="it creates next maintenance date notification for a new created site with maintenance manager" file="tests\Tenant\Notifications\Rooms\RoomMaintenanceNotificationsTest.php::it creates next maintenance date notification for a new created site with maintenance manager" class="Tests\Tenant\Notifications\Rooms\RoomMaintenanceNotificationsTest" classname="Tests.Tenant.Notifications.Rooms.RoomMaintenanceNotificationsTest" assertions="4" time="1.466525"/>
      <testcase name="it updates notification when updating next_maintenance_date of the asset" file="tests\Tenant\Notifications\Rooms\RoomMaintenanceNotificationsTest.php::it updates notification when updating next_maintenance_date of the asset" class="Tests\Tenant\Notifications\Rooms\RoomMaintenanceNotificationsTest" classname="Tests.Tenant.Notifications.Rooms.RoomMaintenanceNotificationsTest" assertions="8" time="1.726189"/>
      <testcase name="it creates no notification if next_maintenance_date is in the past" file="tests\Tenant\Notifications\Rooms\RoomMaintenanceNotificationsTest.php::it creates no notification if next_maintenance_date is in the past" class="Tests\Tenant\Notifications\Rooms\RoomMaintenanceNotificationsTest" classname="Tests.Tenant.Notifications.Rooms.RoomMaintenanceNotificationsTest" assertions="1" time="1.178604"/>
      <testcase name="it creates notification when need_maintenance passes from false to true" file="tests\Tenant\Notifications\Rooms\RoomMaintenanceNotificationsTest.php::it creates notification when need_maintenance passes from false to true" class="Tests\Tenant\Notifications\Rooms\RoomMaintenanceNotificationsTest" classname="Tests.Tenant.Notifications.Rooms.RoomMaintenanceNotificationsTest" assertions="6" time="1.295990"/>
      <testcase name="it deletes notification when need_maintenance passes from true to false" file="tests\Tenant\Notifications\Rooms\RoomMaintenanceNotificationsTest.php::it deletes notification when need_maintenance passes from true to false" class="Tests\Tenant\Notifications\Rooms\RoomMaintenanceNotificationsTest" classname="Tests.Tenant.Notifications.Rooms.RoomMaintenanceNotificationsTest" assertions="6" time="1.575838"/>
      <testcase name="it update notifications when notification preference next_maintenance_date of user changes" file="tests\Tenant\Notifications\Rooms\RoomMaintenanceNotificationsTest.php::it update notifications when notification preference next_maintenance_date of user changes" class="Tests\Tenant\Notifications\Rooms\RoomMaintenanceNotificationsTest" classname="Tests.Tenant.Notifications.Rooms.RoomMaintenanceNotificationsTest" assertions="3" time="1.458541"/>
      <testcase name="it deletes notifications when notification preference next_maintenance_date of user is disabled" file="tests\Tenant\Notifications\Rooms\RoomMaintenanceNotificationsTest.php::it deletes notifications when notification preference next_maintenance_date of user is disabled" class="Tests\Tenant\Notifications\Rooms\RoomMaintenanceNotificationsTest" classname="Tests.Tenant.Notifications.Rooms.RoomMaintenanceNotificationsTest" assertions="3" time="1.508933"/>
      <testcase name="it creates notifications when notification preference next_maintenance_date of user is enabled" file="tests\Tenant\Notifications\Rooms\RoomMaintenanceNotificationsTest.php::it creates notifications when notification preference next_maintenance_date of user is enabled" class="Tests\Tenant\Notifications\Rooms\RoomMaintenanceNotificationsTest" classname="Tests.Tenant.Notifications.Rooms.RoomMaintenanceNotificationsTest" assertions="3" time="1.656546"/>
    </testsuite>
    <testsuite name="Tests\Tenant\Notifications\Rooms\RoomNotificationTest" file="tests\Tenant\Notifications\Rooms\RoomNotificationTest.php" tests="2" assertions="10" errors="0" failures="0" skipped="0" time="3.811378">
      <testcase name="it creates notifications (maintenance, warranty) for a new created building" file="tests\Tenant\Notifications\Rooms\RoomNotificationTest.php::it creates notifications (maintenance, warranty) for a new created building" class="Tests\Tenant\Notifications\Rooms\RoomNotificationTest" classname="Tests.Tenant.Notifications.Rooms.RoomNotificationTest" assertions="5" time="1.729644"/>
      <testcase name="it deletes notifications when building is deleted" file="tests\Tenant\Notifications\Rooms\RoomNotificationTest.php::it deletes notifications when building is deleted" class="Tests\Tenant\Notifications\Rooms\RoomNotificationTest" classname="Tests.Tenant.Notifications.Rooms.RoomNotificationTest" assertions="5" time="2.081734"/>
    </testsuite>
    <testsuite name="Tests\Tenant\Notifications\Rooms\RoomWarrantyNotificationsTest" file="tests\Tenant\Notifications\Rooms\RoomWarrantyNotificationsTest.php" tests="7" assertions="38" errors="0" failures="0" skipped="0" time="12.737843">
      <testcase name="it creates end of warranty notification for a new created room" file="tests\Tenant\Notifications\Rooms\RoomWarrantyNotificationsTest.php::it creates end of warranty notification for a new created room" class="Tests\Tenant\Notifications\Rooms\RoomWarrantyNotificationsTest" classname="Tests.Tenant.Notifications.Rooms.RoomWarrantyNotificationsTest" assertions="4" time="2.848914"/>
      <testcase name="it updates end of warranty notification when end_warranty_date changes" file="tests\Tenant\Notifications\Rooms\RoomWarrantyNotificationsTest.php::it updates end of warranty notification when end_warranty_date changes" class="Tests\Tenant\Notifications\Rooms\RoomWarrantyNotificationsTest" classname="Tests.Tenant.Notifications.Rooms.RoomWarrantyNotificationsTest" assertions="7" time="1.849895"/>
      <testcase name="it creates warranty notifications when under_warranty passes from false to true" file="tests\Tenant\Notifications\Rooms\RoomWarrantyNotificationsTest.php::it creates warranty notifications when under_warranty passes from false to true" class="Tests\Tenant\Notifications\Rooms\RoomWarrantyNotificationsTest" classname="Tests.Tenant.Notifications.Rooms.RoomWarrantyNotificationsTest" assertions="7" time="1.700592"/>
      <testcase name="it deletes warranty notifications when under_warranty passes from true to false" file="tests\Tenant\Notifications\Rooms\RoomWarrantyNotificationsTest.php::it deletes warranty notifications when under_warranty passes from true to false" class="Tests\Tenant\Notifications\Rooms\RoomWarrantyNotificationsTest" classname="Tests.Tenant.Notifications.Rooms.RoomWarrantyNotificationsTest" assertions="7" time="1.865485"/>
      <testcase name="it update notifications when notification preference end_warranty_date of user changes" file="tests\Tenant\Notifications\Rooms\RoomWarrantyNotificationsTest.php::it update notifications when notification preference end_warranty_date of user changes" class="Tests\Tenant\Notifications\Rooms\RoomWarrantyNotificationsTest" classname="Tests.Tenant.Notifications.Rooms.RoomWarrantyNotificationsTest" assertions="7" time="1.741393"/>
      <testcase name="it deletes notifications when notification preference end_warranty_date of user is disabled" file="tests\Tenant\Notifications\Rooms\RoomWarrantyNotificationsTest.php::it deletes notifications when notification preference end_warranty_date of user is disabled" class="Tests\Tenant\Notifications\Rooms\RoomWarrantyNotificationsTest" classname="Tests.Tenant.Notifications.Rooms.RoomWarrantyNotificationsTest" assertions="3" time="1.526325"/>
      <testcase name="it creates notifications when notification preference warranty_end_date of user is enabled" file="tests\Tenant\Notifications\Rooms\RoomWarrantyNotificationsTest.php::it creates notifications when notification preference warranty_end_date of user is enabled" class="Tests\Tenant\Notifications\Rooms\RoomWarrantyNotificationsTest" classname="Tests.Tenant.Notifications.Rooms.RoomWarrantyNotificationsTest" assertions="3" time="1.205238"/>
    </testsuite>
    <testsuite name="Tests\Tenant\Notifications\Sites\SiteMaintenanceManagerNotificationsTest" file="tests\Tenant\Notifications\Sites\SiteMaintenanceManagerNotificationsTest.php" tests="3" assertions="20" errors="0" failures="0" skipped="0" time="4.089680">
      <testcase name="it creates notification when adding maintenance manager to existing site without maintenance manager" file="tests\Tenant\Notifications\Sites\SiteMaintenanceManagerNotificationsTest.php::it creates notification when adding maintenance manager to existing site without maintenance manager" class="Tests\Tenant\Notifications\Sites\SiteMaintenanceManagerNotificationsTest" classname="Tests.Tenant.Notifications.Sites.SiteMaintenanceManagerNotificationsTest" assertions="8" time="1.482059"/>
      <testcase name="it creates notification when replacing maintenance manager for the site and removes notifications for old maintenance manager" file="tests\Tenant\Notifications\Sites\SiteMaintenanceManagerNotificationsTest.php::it creates notification when replacing maintenance manager for the site and removes notifications for old maintenance manager" class="Tests\Tenant\Notifications\Sites\SiteMaintenanceManagerNotificationsTest" classname="Tests.Tenant.Notifications.Sites.SiteMaintenanceManagerNotificationsTest" assertions="4" time="1.469001"/>
      <testcase name="it deletes notification when removing maintenance_manager from existing site" file="tests\Tenant\Notifications\Sites\SiteMaintenanceManagerNotificationsTest.php::it deletes notification when removing maintenance_manager from existing site" class="Tests\Tenant\Notifications\Sites\SiteMaintenanceManagerNotificationsTest" classname="Tests.Tenant.Notifications.Sites.SiteMaintenanceManagerNotificationsTest" assertions="8" time="1.138621"/>
    </testsuite>
    <testsuite name="Tests\Tenant\Notifications\Sites\SiteMaintenanceNotificationsTest" file="tests\Tenant\Notifications\Sites\SiteMaintenanceNotificationsTest.php" tests="8" assertions="34" errors="0" failures="0" skipped="0" time="15.773962">
      <testcase name="it creates next maintenance date notification for a new created site with maintenance manager" file="tests\Tenant\Notifications\Sites\SiteMaintenanceNotificationsTest.php::it creates next maintenance date notification for a new created site with maintenance manager" class="Tests\Tenant\Notifications\Sites\SiteMaintenanceNotificationsTest" classname="Tests.Tenant.Notifications.Sites.SiteMaintenanceNotificationsTest" assertions="4" time="1.578771"/>
      <testcase name="it updates notification when updating next_maintenance_date of the asset" file="tests\Tenant\Notifications\Sites\SiteMaintenanceNotificationsTest.php::it updates notification when updating next_maintenance_date of the asset" class="Tests\Tenant\Notifications\Sites\SiteMaintenanceNotificationsTest" classname="Tests.Tenant.Notifications.Sites.SiteMaintenanceNotificationsTest" assertions="8" time="1.364887"/>
      <testcase name="it creates no notification if next_maintenance_date is in the past" file="tests\Tenant\Notifications\Sites\SiteMaintenanceNotificationsTest.php::it creates no notification if next_maintenance_date is in the past" class="Tests\Tenant\Notifications\Sites\SiteMaintenanceNotificationsTest" classname="Tests.Tenant.Notifications.Sites.SiteMaintenanceNotificationsTest" assertions="1" time="1.017232"/>
      <testcase name="it creates notification when need_maintenance passes from false to true" file="tests\Tenant\Notifications\Sites\SiteMaintenanceNotificationsTest.php::it creates notification when need_maintenance passes from false to true" class="Tests\Tenant\Notifications\Sites\SiteMaintenanceNotificationsTest" classname="Tests.Tenant.Notifications.Sites.SiteMaintenanceNotificationsTest" assertions="6" time="1.609872"/>
      <testcase name="it deletes notification when need_maintenance passes from true to false" file="tests\Tenant\Notifications\Sites\SiteMaintenanceNotificationsTest.php::it deletes notification when need_maintenance passes from true to false" class="Tests\Tenant\Notifications\Sites\SiteMaintenanceNotificationsTest" classname="Tests.Tenant.Notifications.Sites.SiteMaintenanceNotificationsTest" assertions="6" time="1.855192"/>
      <testcase name="it update notifications when notification preference next_maintenance_date of user changes" file="tests\Tenant\Notifications\Sites\SiteMaintenanceNotificationsTest.php::it update notifications when notification preference next_maintenance_date of user changes" class="Tests\Tenant\Notifications\Sites\SiteMaintenanceNotificationsTest" classname="Tests.Tenant.Notifications.Sites.SiteMaintenanceNotificationsTest" assertions="3" time="2.249680"/>
      <testcase name="it deletes notifications when notification preference next_maintenance_date of user is disabled" file="tests\Tenant\Notifications\Sites\SiteMaintenanceNotificationsTest.php::it deletes notifications when notification preference next_maintenance_date of user is disabled" class="Tests\Tenant\Notifications\Sites\SiteMaintenanceNotificationsTest" classname="Tests.Tenant.Notifications.Sites.SiteMaintenanceNotificationsTest" assertions="3" time="3.508546"/>
      <testcase name="it creates notifications when notification preference next_maintenance_date of user is enabled" file="tests\Tenant\Notifications\Sites\SiteMaintenanceNotificationsTest.php::it creates notifications when notification preference next_maintenance_date of user is enabled" class="Tests\Tenant\Notifications\Sites\SiteMaintenanceNotificationsTest" classname="Tests.Tenant.Notifications.Sites.SiteMaintenanceNotificationsTest" assertions="3" time="2.589780"/>
    </testsuite>
    <testsuite name="Tests\Tenant\Notifications\Sites\SiteNotificationTest" file="tests\Tenant\Notifications\Sites\SiteNotificationTest.php" tests="2" assertions="9" errors="0" failures="0" skipped="0" time="5.326677">
      <testcase name="it creates notifications (maintenance, warranty) for a new created site" file="tests\Tenant\Notifications\Sites\SiteNotificationTest.php::it creates notifications (maintenance, warranty) for a new created site" class="Tests\Tenant\Notifications\Sites\SiteNotificationTest" classname="Tests.Tenant.Notifications.Sites.SiteNotificationTest" assertions="5" time="2.848376"/>
      <testcase name="it deletes notifications when site is deleted" file="tests\Tenant\Notifications\Sites\SiteNotificationTest.php::it deletes notifications when site is deleted" class="Tests\Tenant\Notifications\Sites\SiteNotificationTest" classname="Tests.Tenant.Notifications.Sites.SiteNotificationTest" assertions="4" time="2.478301"/>
    </testsuite>
    <testsuite name="Tests\Tenant\Notifications\Sites\SiteWarrantyNotificationsTest" file="tests\Tenant\Notifications\Sites\SiteWarrantyNotificationsTest.php" tests="7" assertions="35" errors="0" failures="0" skipped="0" time="24.600554">
      <testcase name="it creates end of warranty notification for a new created site" file="tests\Tenant\Notifications\Sites\SiteWarrantyNotificationsTest.php::it creates end of warranty notification for a new created site" class="Tests\Tenant\Notifications\Sites\SiteWarrantyNotificationsTest" classname="Tests.Tenant.Notifications.Sites.SiteWarrantyNotificationsTest" assertions="4" time="3.499680"/>
      <testcase name="it updates end of warranty notification when end_warranty_date changes" file="tests\Tenant\Notifications\Sites\SiteWarrantyNotificationsTest.php::it updates end of warranty notification when end_warranty_date changes" class="Tests\Tenant\Notifications\Sites\SiteWarrantyNotificationsTest" classname="Tests.Tenant.Notifications.Sites.SiteWarrantyNotificationsTest" assertions="7" time="2.311317"/>
      <testcase name="it creates warranty notifications when under_warranty passes from false to true" file="tests\Tenant\Notifications\Sites\SiteWarrantyNotificationsTest.php::it creates warranty notifications when under_warranty passes from false to true" class="Tests\Tenant\Notifications\Sites\SiteWarrantyNotificationsTest" classname="Tests.Tenant.Notifications.Sites.SiteWarrantyNotificationsTest" assertions="7" time="3.191061"/>
      <testcase name="it deletes warranty notifications when under_warranty passes from true to false" file="tests\Tenant\Notifications\Sites\SiteWarrantyNotificationsTest.php::it deletes warranty notifications when under_warranty passes from true to false" class="Tests\Tenant\Notifications\Sites\SiteWarrantyNotificationsTest" classname="Tests.Tenant.Notifications.Sites.SiteWarrantyNotificationsTest" assertions="7" time="3.197679"/>
      <testcase name="it update notifications when notification preference end_warranty_date of user changes" file="tests\Tenant\Notifications\Sites\SiteWarrantyNotificationsTest.php::it update notifications when notification preference end_warranty_date of user changes" class="Tests\Tenant\Notifications\Sites\SiteWarrantyNotificationsTest" classname="Tests.Tenant.Notifications.Sites.SiteWarrantyNotificationsTest" assertions="4" time="3.456012"/>
      <testcase name="it deletes notifications when notification preference end_warranty_date of user is disabled" file="tests\Tenant\Notifications\Sites\SiteWarrantyNotificationsTest.php::it deletes notifications when notification preference end_warranty_date of user is disabled" class="Tests\Tenant\Notifications\Sites\SiteWarrantyNotificationsTest" classname="Tests.Tenant.Notifications.Sites.SiteWarrantyNotificationsTest" assertions="3" time="3.133815"/>
      <testcase name="it creates notifications when notification preference warranty_end_date of user is enabled" file="tests\Tenant\Notifications\Sites\SiteWarrantyNotificationsTest.php::it creates notifications when notification preference warranty_end_date of user is enabled" class="Tests\Tenant\Notifications\Sites\SiteWarrantyNotificationsTest" classname="Tests.Tenant.Notifications.Sites.SiteWarrantyNotificationsTest" assertions="3" time="5.810990"/>
    </testsuite>
    <testsuite name="Tests\Tenant\Notifications\UserNotificationPreferencesTest" file="tests\Tenant\Notifications\UserNotificationPreferencesTest.php" tests="4" assertions="12" errors="0" failures="0" skipped="0" time="17.701517">
      <testcase name="it creates default notification preferences when admin is created" file="tests\Tenant\Notifications\UserNotificationPreferencesTest.php::it creates default notification preferences when admin is created" class="Tests\Tenant\Notifications\UserNotificationPreferencesTest" classname="Tests.Tenant.Notifications.UserNotificationPreferencesTest" assertions="4" time="4.269726"/>
      <testcase name="it creates default notification preferences when maintenance manager is created" file="tests\Tenant\Notifications\UserNotificationPreferencesTest.php::it creates default notification preferences when maintenance manager is created" class="Tests\Tenant\Notifications\UserNotificationPreferencesTest" classname="Tests.Tenant.Notifications.UserNotificationPreferencesTest" assertions="4" time="4.742007"/>
      <testcase name="it can create a new notification preference" file="tests\Tenant\Notifications\UserNotificationPreferencesTest.php::it can create a new notification preference" class="Tests\Tenant\Notifications\UserNotificationPreferencesTest" classname="Tests.Tenant.Notifications.UserNotificationPreferencesTest" assertions="2" time="4.571264"/>
      <testcase name="it can update notification preferences" file="tests\Tenant\Notifications\UserNotificationPreferencesTest.php::it can update notification preferences" class="Tests\Tenant\Notifications\UserNotificationPreferencesTest" classname="Tests.Tenant.Notifications.UserNotificationPreferencesTest" assertions="2" time="4.118519"/>
    </testsuite>
    <testsuite name="Tests\Tenant\Providers\ProviderTest" file="tests\Tenant\Providers\ProviderTest.php" tests="8" assertions="62" errors="0" failures="0" skipped="0" time="8.623819">
      <testcase name="it can factory a provider" file="tests\Tenant\Providers\ProviderTest.php::it can factory a provider" class="Tests\Tenant\Providers\ProviderTest" classname="Tests.Tenant.Providers.ProviderTest" assertions="1" time="0.982902"/>
      <testcase name="it can render the index providers page" file="tests\Tenant\Providers\ProviderTest.php::it can render the index providers page" class="Tests\Tenant\Providers\ProviderTest" classname="Tests.Tenant.Providers.ProviderTest" assertions="12" time="1.105737"/>
      <testcase name="it can render the show provider page" file="tests\Tenant\Providers\ProviderTest.php::it can render the show provider page" class="Tests\Tenant\Providers\ProviderTest" classname="Tests.Tenant.Providers.ProviderTest" assertions="13" time="0.907547"/>
      <testcase name="it can render the create provider page" file="tests\Tenant\Providers\ProviderTest.php::it can render the create provider page" class="Tests\Tenant\Providers\ProviderTest" classname="Tests.Tenant.Providers.ProviderTest" assertions="10" time="1.277594"/>
      <testcase name="it can render the edit provider page" file="tests\Tenant\Providers\ProviderTest.php::it can render the edit provider page" class="Tests\Tenant\Providers\ProviderTest" classname="Tests.Tenant.Providers.ProviderTest" assertions="13" time="0.905457"/>
      <testcase name="it can post a new provider with logo" file="tests\Tenant\Providers\ProviderTest.php::it can post a new provider with logo" class="Tests\Tenant\Providers\ProviderTest" classname="Tests.Tenant.Providers.ProviderTest" assertions="6" time="1.071422"/>
      <testcase name="it can update an existing provider" file="tests\Tenant\Providers\ProviderTest.php::it can update an existing provider" class="Tests\Tenant\Providers\ProviderTest" classname="Tests.Tenant.Providers.ProviderTest" assertions="4" time="1.173049"/>
      <testcase name="it can delete an existing provider" file="tests\Tenant\Providers\ProviderTest.php::it can delete an existing provider" class="Tests\Tenant\Providers\ProviderTest" classname="Tests.Tenant.Providers.ProviderTest" assertions="3" time="1.200109"/>
    </testsuite>
    <testsuite name="Tests\Tenant\QRCode\AssetQRTest" file="tests\Tenant\QRCode\AssetQRTest.php" tests="2" assertions="4" errors="0" failures="0" skipped="0" time="6.525583">
      <testcase name="it creates a QR Code when need_qr_code is true" file="tests\Tenant\QRCode\AssetQRTest.php::it creates a QR Code when need_qr_code is true" class="Tests\Tenant\QRCode\AssetQRTest" classname="Tests.Tenant.QRCode.AssetQRTest" assertions="2" time="3.690457"/>
      <testcase name="it can regenerate a QR Code" file="tests\Tenant\QRCode\AssetQRTest.php::it can regenerate a QR Code" class="Tests\Tenant\QRCode\AssetQRTest" classname="Tests.Tenant.QRCode.AssetQRTest" assertions="2" time="2.835126"/>
    </testsuite>
    <testsuite name="Tests\Tenant\QRCode\BuildingQRTest" file="tests\Tenant\QRCode\BuildingQRTest.php" tests="2" assertions="4" errors="0" failures="0" skipped="0" time="4.966569">
      <testcase name="it creates a QR Code when need_qr_code is true at building's creation" file="tests\Tenant\QRCode\BuildingQRTest.php::it creates a QR Code when need_qr_code is true at building's creation" class="Tests\Tenant\QRCode\BuildingQRTest" classname="Tests.Tenant.QRCode.BuildingQRTest" assertions="2" time="2.496660"/>
      <testcase name="it can regenerate a QR Code for a building" file="tests\Tenant\QRCode\BuildingQRTest.php::it can regenerate a QR Code for a building" class="Tests\Tenant\QRCode\BuildingQRTest" classname="Tests.Tenant.QRCode.BuildingQRTest" assertions="2" time="2.469909"/>
    </testsuite>
    <testsuite name="Tests\Tenant\QRCode\FloorQRTest" file="tests\Tenant\QRCode\FloorQRTest.php" tests="2" assertions="4" errors="0" failures="0" skipped="0" time="5.559288">
      <testcase name="it creates a QR Code when need_qr_code is true at floor's creation" file="tests\Tenant\QRCode\FloorQRTest.php::it creates a QR Code when need_qr_code is true at floor's creation" class="Tests\Tenant\QRCode\FloorQRTest" classname="Tests.Tenant.QRCode.FloorQRTest" assertions="2" time="3.112409"/>
      <testcase name="it can regenerate a QR Code for a floor" file="tests\Tenant\QRCode\FloorQRTest.php::it can regenerate a QR Code for a floor" class="Tests\Tenant\QRCode\FloorQRTest" classname="Tests.Tenant.QRCode.FloorQRTest" assertions="2" time="2.446879"/>
    </testsuite>
    <testsuite name="Tests\Tenant\QRCode\RoomQRTest" file="tests\Tenant\QRCode\RoomQRTest.php" tests="2" assertions="4" errors="0" failures="0" skipped="0" time="4.366354">
      <testcase name="it creates a QR Code when need_qr_code is true at room's creation" file="tests\Tenant\QRCode\RoomQRTest.php::it creates a QR Code when need_qr_code is true at room's creation" class="Tests\Tenant\QRCode\RoomQRTest" classname="Tests.Tenant.QRCode.RoomQRTest" assertions="2" time="2.502648"/>
      <testcase name="it can regenerate a QR Code for a room" file="tests\Tenant\QRCode\RoomQRTest.php::it can regenerate a QR Code for a room" class="Tests\Tenant\QRCode\RoomQRTest" classname="Tests.Tenant.QRCode.RoomQRTest" assertions="2" time="1.863706"/>
    </testsuite>
    <testsuite name="Tests\Tenant\QRCode\SiteQRTest" file="tests\Tenant\QRCode\SiteQRTest.php" tests="2" assertions="4" errors="0" failures="0" skipped="0" time="3.996939">
      <testcase name="it creates a QR Code when need_qr_code is true at site's creation" file="tests\Tenant\QRCode\SiteQRTest.php::it creates a QR Code when need_qr_code is true at site's creation" class="Tests\Tenant\QRCode\SiteQRTest" classname="Tests.Tenant.QRCode.SiteQRTest" assertions="2" time="2.188041"/>
      <testcase name="it can regenerate a QR Code for a site" file="tests\Tenant\QRCode\SiteQRTest.php::it can regenerate a QR Code for a site" class="Tests\Tenant\QRCode\SiteQRTest" classname="Tests.Tenant.QRCode.SiteQRTest" assertions="2" time="1.808898"/>
    </testsuite>
    <testsuite name="Tests\Tenant\Tickets\APITicketTest" file="tests\Tenant\Tickets\APITicketTest.php" tests="5" assertions="15" errors="0" failures="0" skipped="0" time="6.607457">
      <testcase name="it can retrieve all tickets " file="tests\Tenant\Tickets\APITicketTest.php::it can retrieve all tickets " class="Tests\Tenant\Tickets\APITicketTest" classname="Tests.Tenant.Tickets.APITicketTest" assertions="3" time="1.516115"/>
      <testcase name="it can retrieve all tickets from a site" file="tests\Tenant\Tickets\APITicketTest.php::it can retrieve all tickets from a site" class="Tests\Tenant\Tickets\APITicketTest" classname="Tests.Tenant.Tickets.APITicketTest" assertions="3" time="1.321747"/>
      <testcase name="it can retrieve all tickets from a building" file="tests\Tenant\Tickets\APITicketTest.php::it can retrieve all tickets from a building" class="Tests\Tenant\Tickets\APITicketTest" classname="Tests.Tenant.Tickets.APITicketTest" assertions="3" time="1.310185"/>
      <testcase name="it can retrieve all tickets from a floor" file="tests\Tenant\Tickets\APITicketTest.php::it can retrieve all tickets from a floor" class="Tests\Tenant\Tickets\APITicketTest" classname="Tests.Tenant.Tickets.APITicketTest" assertions="3" time="1.270834"/>
      <testcase name="it can retrieve all tickets from a room" file="tests\Tenant\Tickets\APITicketTest.php::it can retrieve all tickets from a room" class="Tests\Tenant\Tickets\APITicketTest" classname="Tests.Tenant.Tickets.APITicketTest" assertions="3" time="1.188576"/>
    </testsuite>
    <testsuite name="Tests\Tenant\Tickets\TicketAsAnonymousTest" file="tests\Tenant\Tickets\TicketAsAnonymousTest.php" tests="10" assertions="100" errors="0" failures="0" skipped="0" time="13.618775">
      <testsuite name="it can render a new ticket page for a guest" tests="5" assertions="75" errors="0" failures="0" skipped="0" time="7.293405">
        <testcase name="it can render a new ticket page for a guest with data set &quot;('asset', 'assets')&quot;" file="tests\Tenant\Tickets\TicketAsAnonymousTest.php::it can render a new ticket page for a guest with data set &quot;('asset', 'assets')&quot;" class="Tests\Tenant\Tickets\TicketAsAnonymousTest" classname="Tests.Tenant.Tickets.TicketAsAnonymousTest" assertions="15" time="1.604404"/>
        <testcase name="it can render a new ticket page for a guest with data set &quot;('site', 'sites')&quot;" file="tests\Tenant\Tickets\TicketAsAnonymousTest.php::it can render a new ticket page for a guest with data set &quot;('site', 'sites')&quot;" class="Tests\Tenant\Tickets\TicketAsAnonymousTest" classname="Tests.Tenant.Tickets.TicketAsAnonymousTest" assertions="15" time="1.486707"/>
        <testcase name="it can render a new ticket page for a guest with data set &quot;('building', 'buildings')&quot;" file="tests\Tenant\Tickets\TicketAsAnonymousTest.php::it can render a new ticket page for a guest with data set &quot;('building', 'buildings')&quot;" class="Tests\Tenant\Tickets\TicketAsAnonymousTest" classname="Tests.Tenant.Tickets.TicketAsAnonymousTest" assertions="15" time="1.179300"/>
        <testcase name="it can render a new ticket page for a guest with data set &quot;('floor', 'floors')&quot;" file="tests\Tenant\Tickets\TicketAsAnonymousTest.php::it can render a new ticket page for a guest with data set &quot;('floor', 'floors')&quot;" class="Tests\Tenant\Tickets\TicketAsAnonymousTest" classname="Tests.Tenant.Tickets.TicketAsAnonymousTest" assertions="15" time="1.536875"/>
        <testcase name="it can render a new ticket page for a guest with data set &quot;('room', 'rooms')&quot;" file="tests\Tenant\Tickets\TicketAsAnonymousTest.php::it can render a new ticket page for a guest with data set &quot;('room', 'rooms')&quot;" class="Tests\Tenant\Tickets\TicketAsAnonymousTest" classname="Tests.Tenant.Tickets.TicketAsAnonymousTest" assertions="15" time="1.486120"/>
      </testsuite>
      <testsuite name="it can create a new ticket with pictures has &quot;anonymous&quot; user" tests="5" assertions="25" errors="0" failures="0" skipped="0" time="6.325370">
        <testcase name="it can create a new ticket with pictures has &quot;anonymous&quot; user with data set &quot;('asset', 'assets')&quot;" file="tests\Tenant\Tickets\TicketAsAnonymousTest.php::it can create a new ticket with pictures has &quot;anonymous&quot; user with data set &quot;('asset', 'assets')&quot;" class="Tests\Tenant\Tickets\TicketAsAnonymousTest" classname="Tests.Tenant.Tickets.TicketAsAnonymousTest" assertions="5" time="1.072583"/>
        <testcase name="it can create a new ticket with pictures has &quot;anonymous&quot; user with data set &quot;('site', 'sites')&quot;" file="tests\Tenant\Tickets\TicketAsAnonymousTest.php::it can create a new ticket with pictures has &quot;anonymous&quot; user with data set &quot;('site', 'sites')&quot;" class="Tests\Tenant\Tickets\TicketAsAnonymousTest" classname="Tests.Tenant.Tickets.TicketAsAnonymousTest" assertions="5" time="1.150866"/>
        <testcase name="it can create a new ticket with pictures has &quot;anonymous&quot; user with data set &quot;('building', 'buildings')&quot;" file="tests\Tenant\Tickets\TicketAsAnonymousTest.php::it can create a new ticket with pictures has &quot;anonymous&quot; user with data set &quot;('building', 'buildings')&quot;" class="Tests\Tenant\Tickets\TicketAsAnonymousTest" classname="Tests.Tenant.Tickets.TicketAsAnonymousTest" assertions="5" time="1.410802"/>
        <testcase name="it can create a new ticket with pictures has &quot;anonymous&quot; user with data set &quot;('floor', 'floors')&quot;" file="tests\Tenant\Tickets\TicketAsAnonymousTest.php::it can create a new ticket with pictures has &quot;anonymous&quot; user with data set &quot;('floor', 'floors')&quot;" class="Tests\Tenant\Tickets\TicketAsAnonymousTest" classname="Tests.Tenant.Tickets.TicketAsAnonymousTest" assertions="5" time="1.421874"/>
        <testcase name="it can create a new ticket with pictures has &quot;anonymous&quot; user with data set &quot;('room', 'rooms')&quot;" file="tests\Tenant\Tickets\TicketAsAnonymousTest.php::it can create a new ticket with pictures has &quot;anonymous&quot; user with data set &quot;('room', 'rooms')&quot;" class="Tests\Tenant\Tickets\TicketAsAnonymousTest" classname="Tests.Tenant.Tickets.TicketAsAnonymousTest" assertions="5" time="1.269246"/>
      </testsuite>
    </testsuite>
    <testsuite name="Tests\Tenant\Tickets\TicketMailTest" file="tests\Tenant\Tickets\TicketMailTest.php" tests="3" assertions="7" errors="0" failures="0" skipped="0" time="4.907142">
      <testcase name="it sends an email when a new ticket is created for location without maintenance manager" file="tests\Tenant\Tickets\TicketMailTest.php::it sends an email when a new ticket is created for location without maintenance manager" class="Tests\Tenant\Tickets\TicketMailTest" classname="Tests.Tenant.Tickets.TicketMailTest" assertions="2" time="1.889730"/>
      <testcase name="it sends an email when a new ticket is created for location with maintenance manager" file="tests\Tenant\Tickets\TicketMailTest.php::it sends an email when a new ticket is created for location with maintenance manager" class="Tests\Tenant\Tickets\TicketMailTest" classname="Tests.Tenant.Tickets.TicketMailTest" assertions="3" time="1.574631"/>
      <testcase name="it send an email to the notifier when a ticket is closed and the notifier wanted to be notified" file="tests\Tenant\Tickets\TicketMailTest.php::it send an email to the notifier when a ticket is closed and the notifier wanted to be notified" class="Tests\Tenant\Tickets\TicketMailTest" classname="Tests.Tenant.Tickets.TicketMailTest" assertions="2" time="1.442781"/>
    </testsuite>
    <testsuite name="Tests\Tenant\Tickets\TicketTest" file="tests\Tenant\Tickets\TicketTest.php" tests="9" assertions="55" errors="1" failures="0" skipped="0" time="10.458203">
      <testcase name="it can render the index tickets page" file="tests\Tenant\Tickets\TicketTest.php::it can render the index tickets page" class="Tests\Tenant\Tickets\TicketTest" classname="Tests.Tenant.Tickets.TicketTest" assertions="10" time="1.670820"/>
      <testcase name="it can render the show ticket page" file="tests\Tenant\Tickets\TicketTest.php::it can render the show ticket page" class="Tests\Tenant\Tickets\TicketTest" classname="Tests.Tenant.Tickets.TicketTest" assertions="14" time="1.314983"/>
      <testcase name="it can render interventions in the ticket page" file="tests\Tenant\Tickets\TicketTest.php::it can render interventions in the ticket page" class="Tests\Tenant\Tickets\TicketTest" classname="Tests.Tenant.Tickets.TicketTest" assertions="15" time="1.339461"/>
      <testcase name="it can create a new ticket to an ASSET with the logged user" file="tests\Tenant\Tickets\TicketTest.php::it can create a new ticket to an ASSET with the logged user" class="Tests\Tenant\Tickets\TicketTest" classname="Tests.Tenant.Tickets.TicketTest" assertions="3" time="1.322096"/>
      <testcase name="it can create a ticket with uploaded pictures" file="tests\Tenant\Tickets\TicketTest.php::it can create a ticket with uploaded pictures" class="Tests\Tenant\Tickets\TicketTest" classname="Tests.Tenant.Tickets.TicketTest" assertions="3" time="1.369373"/>
      <testcase name="it can create several tickets with correct incremental code" file="tests\Tenant\Tickets\TicketTest.php::it can create several tickets with correct incremental code" class="Tests\Tenant\Tickets\TicketTest" classname="Tests.Tenant.Tickets.TicketTest" assertions="4" time="1.235273"/>
      <testcase name="it can create a new ticket to a ROOM" file="tests\Tenant\Tickets\TicketTest.php::it can create a new ticket to a ROOM" class="Tests\Tenant\Tickets\TicketTest" classname="Tests.Tenant.Tickets.TicketTest" assertions="3" time="1.102974"/>
      <testcase name="it can create a new ticket to a FLOOR" file="tests\Tenant\Tickets\TicketTest.php::it can create a new ticket to a FLOOR" class="Tests\Tenant\Tickets\TicketTest" classname="Tests.Tenant.Tickets.TicketTest" assertions="3" time="1.103222"/>
      <testcase name="it can create a new ticket to a BUILDING" file="tests\Tenant\Tickets\TicketTest.php::it can create a new ticket to a BUILDING" class="Tests\Tenant\Tickets\TicketTest" classname="Tests.Tenant.Tickets.TicketTest" assertions="0" time="0.000000">
        <error type="Illuminate\Database\UniqueConstraintViolationException">it can create a new ticket to a BUILDINGIlluminate\Database\UniqueConstraintViolationException: SQLSTATE[23000]: Integrity constraint violation: 1062 Duplicate entry 'accusamus' for key 'category_types.category_types_slug_unique' (Connection: central, SQL: insert into `category_types` (`slug`, `category`, `updated_at`, `created_at`) values (accusamus, action, 2025-10-21 21:18:12, 2025-10-21 21:18:12))&#13;
at vendor\laravel\framework\src\Illuminate\Database\MySqlConnection.php:53
at vendor\laravel\framework\src\Illuminate\Database\Connection.php:811
at vendor\laravel\framework\src\Illuminate\Database\Connection.php:778
at vendor\laravel\framework\src\Illuminate\Database\MySqlConnection.php:42
at vendor\laravel\framework\src\Illuminate\Database\Query\Processors\MySqlProcessor.php:35
at vendor\laravel\framework\src\Illuminate\Database\Query\Builder.php:3853
at vendor\laravel\framework\src\Illuminate\Database\Eloquent\Builder.php:2235
at vendor\laravel\framework\src\Illuminate\Database\Eloquent\Model.php:1436
at vendor\laravel\framework\src\Illuminate\Database\Eloquent\Model.php:1401
at vendor\laravel\framework\src\Illuminate\Database\Eloquent\Model.php:1240
at vendor\laravel\framework\src\Illuminate\Database\Eloquent\Factories\Factory.php:370
at vendor\laravel\framework\src\Illuminate\Collections\Traits\EnumeratesValues.php:271
at vendor\laravel\framework\src\Illuminate\Database\Eloquent\Factories\Factory.php:365
at vendor\laravel\framework\src\Illuminate\Database\Eloquent\Factories\Factory.php:321
at vendor\laravel\framework\src\Illuminate\Database\Eloquent\Factories\Factory.php:315
at tests\Tenant\Tickets\TicketTest.php:33
Caused by
PDOException: SQLSTATE[23000]: Integrity constraint violation: 1062 Duplicate entry 'accusamus' for key 'category_types.category_types_slug_unique'

at vendor\laravel\framework\src\Illuminate\Database\MySqlConnection.php:53
at vendor\laravel\framework\src\Illuminate\Database\Connection.php:811
at vendor\laravel\framework\src\Illuminate\Database\Connection.php:778
at vendor\laravel\framework\src\Illuminate\Database\MySqlConnection.php:42
at vendor\laravel\framework\src\Illuminate\Database\Query\Processors\MySqlProcessor.php:35
at vendor\laravel\framework\src\Illuminate\Database\Query\Builder.php:3853
at vendor\laravel\framework\src\Illuminate\Database\Eloquent\Builder.php:2235
at vendor\laravel\framework\src\Illuminate\Database\Eloquent\Model.php:1436
at vendor\laravel\framework\src\Illuminate\Database\Eloquent\Model.php:1401
at vendor\laravel\framework\src\Illuminate\Database\Eloquent\Model.php:1240
at vendor\laravel\framework\src\Illuminate\Database\Eloquent\Factories\Factory.php:370
at vendor\laravel\framework\src\Illuminate\Collections\Traits\EnumeratesValues.php:271
at vendor\laravel\framework\src\Illuminate\Database\Eloquent\Factories\Factory.php:365
at vendor\laravel\framework\src\Illuminate\Database\Eloquent\Factories\Factory.php:321
at vendor\laravel\framework\src\Illuminate\Database\Eloquent\Factories\Factory.php:315
at tests\Tenant\Tickets\TicketTest.php:33</error>
      </testcase>
    </testsuite>
    <testsuite name="Tests\Tenant\Tickets\ValidationTicketTest" file="tests\Tenant\Tickets\ValidationTicketTest.php" tests="0" assertions="0" errors="0" failures="0" skipped="0" time="0.000000"/>
    <testsuite name="Tests\Tenant\Users\ProfileTest" file="tests\Tenant\Users\ProfileTest.php" tests="0" assertions="0" errors="0" failures="0" skipped="0" time="0.000000"/>
    <testsuite name="Tests\Tenant\Users\UserTest" file="tests\Tenant\Users\UserTest.php" tests="0" assertions="0" errors="0" failures="0" skipped="0" time="0.000000"/>
  </testsuite>
</testsuites>
